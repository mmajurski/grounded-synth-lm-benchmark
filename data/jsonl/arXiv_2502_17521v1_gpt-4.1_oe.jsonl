{"context": "##### 3.3.2 Encryption\nEncryption methods secure evaluation data by making it inaccessible to unauthorized parties, preventing its accidental inclusion in training sets. Jacovi et\u00a0al. (2023) propose encrypting test data with a public key and a \u201cNo Derivatives\u201d license to block automated crawling and reuse. Yang et\u00a0al. (2023) show that even advanced decontamination methods can be defeated by minor text variations, emphasizing the need for robust encryption. Similarly, TRUCE (Chandran et\u00a0al., 2024) leverages confidential computing and secure multi-party computation to enable private benchmarking, ensuring that test data and model parameters remain confidential.\n\n\n###### Limitation\nWhile these methods effectively protect against data leakage, they depend on strong key management, they introduce extra computational overheads. These methods are vulnerable if encryption is compromised or private key is exposed.\n\n\n##### 3.3.3 Label Protection\nLabel protection involves keeping the true answers of a test set hidden from public access so that only an authorized evaluator can use them during model assessment. This approach is common in benchmarks such as GLUE Wang (2018), SuperGLUE Wang et\u00a0al. (2019), and OpenAI\u2019s HumanEval Chen et\u00a0al. (2021), etc., where the test labels are withheld to prevent models from learning or memorizing them during training. The key advantage of this method is its ability to maintain evaluation integrity by preventing model exposure to answers, thereby mitigating data contamination risks.\n", "topic": "The mechanisms and objectives of encrypting evaluation data to prevent unauthorized access and accidental inclusion in training datasets.", "question": "How do encryption-based methods for securing evaluation data simultaneously address the risks of unauthorized access and accidental inclusion in training datasets, and what critical vulnerabilities remain despite their use?", "answer": "Encryption renders evaluation data unreadable to unauthorized parties, thereby preventing both intentional access and inadvertent use in training; however, vulnerabilities remain in key management and if encryption is compromised or private keys are exposed, data confidentiality is lost.", "explanation": "The question requires the respondent to integrate knowledge of encryption mechanisms, access control, and data governance, while also critically assessing key management vulnerabilities and the limitations posed by potential compromise of cryptographic keys, as discussed in the context.", "question_token_count": 33, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 6, "question_groundedness_score": 10, "avg_answer_token_count": 46, "choices": null}
{"context": "#### 3.3 Methods for Mitigation\nDue to the nature of LLM training data collection and the public availability of these static benchmark datasets, there is a risk that LLMs may inadvertently encounter and use them, leading to data contamination. To address this issue, several methods have been proposed to enhance static benchmarking and mitigate the impact of data contamination.\n\n\n##### 3.3.1 Canary String\nCanary strings are deliberately crafted, unique tokens embedded within a dataset to serve as markers for data contamination. When a model\u2019s output unexpectedly includes these tokens, it strongly indicates that the model has memorized portions of its training data rather than learning to generalize. For instance, the BIG-Bench dataset incorporates these strings so that model developers can identify and filter out such instances Jacovi et\u00a0al. (2023).\n\n\n###### Limitations\nThe effectiveness of canary strings depends on model trainers being aware of and responsive to these markers.\n\nIf a developer aims to leak benchmarking data to boost scores, this method will not work.\n", "topic": "Discuss the ethical and practical challenges faced by model trainers in identifying and addressing data contamination when using public static benchmark datasets.", "question": "What are the principal ethical and practical obstacles that limit the effectiveness of canary strings in preventing data contamination within public static benchmark datasets, and how might these challenges undermine the reliability of LLM evaluations?", "answer": "The effectiveness of canary strings is limited by ethical challenges like intentional data leakage and lack of trainer vigilance, and by practical issues such as dependence on trainers to monitor and act on contamination signals, both of which can compromise the validity of LLM evaluations.", "explanation": "The answer addresses the dual nature of challenges: (1) ethical, such as the need for honest and vigilant model trainers and the risk of intentional data leakage to boost scores, and (2) practical, including reliance on trainers to monitor for canary triggers and the inherent vulnerability of public datasets. These challenges can undermine the reliability of LLM evaluations by allowing contaminated models to go undetected or by incentivizing manipulation of benchmarks.", "question_token_count": 39, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 50, "choices": null}
{"context": "###### Limitations\nPost-hot detection methods face several limitations. Full access to the training dataset is often restricted due to legal and privacy constraints, making overlap detection challenging. Additionally, assumptions about model behavior, such as higher memorization or lower perplexity for contaminated instances, may not hold across different models and tasks.\n\n\n### 4 Dynamic Benchmarking\nDue to the inherent limitations of static benchmarking schemes, they face challenges in providing a transparent yet faithful evaluation of LLMs. To address this, dynamic benchmarking has been proposed.\n\n\n#### 4.1 Problem Formulation\nA dynamic benchmark is defined as\n\n\u212cdynamic=(\ud835\udc9f,T\u2062(\u22c5)),\ud835\udc9f=(\ud835\udcb3,\ud835\udcb4,\ud835\udcae\u2062(\u22c5))formulae-sequencesubscript\u212cdynamic\ud835\udc9f\ud835\udc47\u22c5\ud835\udc9f\ud835\udcb3\ud835\udcb4\ud835\udcae\u22c5\\mathcal{B}\\_{\\text{dynamic}}=(\\mathcal{D},T(\\cdot)),\\quad\\mathcal{D}=(\\mathcal%\n\n{X},\\mathcal{Y},\\mathcal{S}(\\cdot))caligraphic\\_B start\\_POSTSUBSCRIPT dynamic end\\_POSTSUBSCRIPT = ( caligraphic\\_D , italic\\_T ( \u22c5 ) ) , caligraphic\\_D = ( caligraphic\\_X , caligraphic\\_Y , caligraphic\\_S ( \u22c5 ) )\n\nwhere \ud835\udc9f\ud835\udc9f\\mathcal{D}caligraphic\\_D represents the static benchmark dataset.\n\nThe transformation function T\u2062(\u22c5)\ud835\udc47\u22c5T(\\cdot)italic\\_T ( \u22c5 ) modifies the data set during the benchmarking to avoid possible data contamination.\n\nThe dynamic dataset for the evaluation of an LLM can then be expressed as\n\n\ud835\udc9ft=Tt\u2062(\ud835\udc9f),\u2200t\u2208{1,\u2026,N}formulae-sequencesubscript\ud835\udc9f\ud835\udc61subscript\ud835\udc47\ud835\udc61\ud835\udc9ffor-all\ud835\udc611\u2026\ud835\udc41\\mathcal{D}\\_{t}=T\\_{t}(\\mathcal{D}),\\quad\\forall t\\in\\{1,\\dots,N\\}caligraphic\\_D start\\_POSTSUBSCRIPT italic\\_t end\\_POSTSUBSCRIPT = italic\\_T start\\_POSTSUBSCRIPT italic\\_t end\\_POSTSUBSCRIPT ( caligraphic\\_D ) , \u2200 italic\\_t \u2208 { 1 , \u2026 , italic\\_N }\n\nwhere \ud835\udc9ftsubscript\ud835\udc9f\ud835\udc61\\mathcal{D}\\_{t}caligraphic\\_D start\\_POSTSUBSCRIPT italic\\_t end\\_POSTSUBSCRIPT represents the evaluation data set at the timestamp t\ud835\udc61titalic\\_t, and N\ud835\udc41Nitalic\\_N is the total timestamp number, which could be finite or infinite. If the seed dataset \ud835\udc9f\ud835\udc9f\\mathcal{D}caligraphic\\_D is empty, the dynamic benchmarking dataset will be created from scratch.\n\nTable 3: Existing dynamic benchmarks and their quality on our summarized criteria. \u25cf\u25cf\\CIRCLE\u25cf represents support, \u25d0\u25d0\\LEFTcircle\u25d0 represents partial support, and \u25cb\u25cb\\Circle\u25cb represents no support\n\n<!-- \ud83d\uddbc\ufe0f\u274c Image not available. Please use `PdfPipelineOptions(generate_picture_images=True)` -->\n", "topic": "The implications and methodology of creating dynamic benchmarking datasets from scratch in the absence of a seed dataset.", "question": "When creating a dynamic benchmarking dataset for large language model evaluation in the absence of any seed dataset, what are the primary methodological and validation challenges that arise, and how might these challenges impact the reliability and generalizability of evaluation outcomes?", "answer": "Risks of synthetic bias, lack of representativeness, and compromised validity and generalizability of evaluation outcomes.", "explanation": "The correct answer highlights that without a seed dataset, constructing benchmarks requires defining both data distributions and tasks from scratch, leading to significant risks of unrepresentative sampling, synthetic bias, and difficulty ensuring alignment with real-world use cases. These challenges threaten the validity and generalizability of evaluation results, as the benchmarks may not faithfully reflect the complexities or distributions encountered in practical deployments.", "question_token_count": 46, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 6, "avg_answer_token_count": 23, "choices": null}
{"context": "### Ethical Considerations\nOur work is rooted in the goal of enhancing the transparency and fairness of LLM evaluations, which can help mitigate the risks of bias and contamination in AI systems. However, ethical concerns arise when considering the use of both static and dynamic benchmarks. Static benchmarks, if not carefully constructed, can inadvertently perpetuate biases, especially if they rely on outdated or biased data sources. Dynamic benchmarks, while offering a more adaptive approach, raise privacy and security concerns regarding the continual collection and updating of data. Moreover, transparency and the potential for misuse of benchmarking results, such as artificially inflating model performance or selecting biased evaluation criteria, must be carefully managed. It is essential that benchmarking frameworks are designed with fairness, accountability, and privacy in mind, ensuring they do not inadvertently harm or disadvantage certain user groups or research domains. Lastly, we encourage further exploration of ethical guidelines surrounding data usage, model transparency, and the broader societal impact of AI benchmarks.\n", "topic": "Ethical risks associated with static benchmarks in LLM evaluation, including the perpetuation of outdated or biased data.", "question": "In what ways can static benchmarks inadvertently reinforce systemic biases in LLM evaluation, and what are the broader ethical implications of relying on outdated or biased data sources in these benchmarks?", "answer": "Static benchmarks can encode and perpetuate existing biases by reflecting outdated or biased data, leading to unfair evaluations and reinforcing systemic inequities across AI applications.", "explanation": "The answer is correct because it addresses both the direct mechanism\u2014static benchmarks encoding and perpetuating existing biases from their data sources\u2014and the broader ethical consequences, including unfair model assessment, perpetuation of societal stereotypes, and potential harm to marginalized groups.", "question_token_count": 34, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 30, "choices": null}
{"context": "#### 2.2 Contamination from LLM Training\nUnlike traditional models with clear separations between training and evaluation data, LLMs are pre-trained on massive, diverse datasets\u2014often scraped from the web (e.g., FineWeb\u00a0Penedo et\u00a0al. (2024))\u2014which increases the risk of evaluation data overlap. In the post-training phase, models are further fine-tuned on large human-annotated\u00a0Mukherjee et\u00a0al. (2023); Kim et\u00a0al. (2023) or synthetic datasets\u00a0Ding et\u00a0al. (2023); Teknium (2023); Wang et\u00a0al. (2023) that may resemble evaluation tasks, further compounding contamination risks. Although retrieval-based detection methods\u00a0Team et\u00a0al. (2024); Achiam et\u00a0al. (2023) exist, the sheer scale and complexity of training corpora make it difficult to entirely exclude evaluation data. Additionally, many LLMs keep their training data proprietary\u00a0Dubey et\u00a0al. (2024); Yang et\u00a0al. (2024), complicating the accurate assessment of their true performance and highlighting the need for fair and reliable benchmarks. This opacity further exacerbates data contamination, as it impedes the community\u2019s ability to verify and mitigate potential overlaps between training and evaluation data.\n", "topic": "The broader consequences of data contamination and training data opacity on the reliability, fairness, and credibility of LLM evaluations and benchmarks.", "question": "How do data contamination and the opacity of training data in large language models undermine the reliability, fairness, and credibility of their evaluation benchmarks, and what systemic risks do these issues pose for the broader field of machine learning?", "answer": "They enable overestimated performance, obstruct independent validation, reduce trust in benchmarks, and risk systemic misdirection and bias in machine learning research.", "explanation": "Data contamination allows overlap between training and evaluation sets, inflating apparent model performance and making benchmarks unreliable and unfair. Opacity around proprietary training data prevents external verification of results, eroding credibility and trust. Systemically, these issues risk misleading research progress, hinder reproducibility, and may propagate biased or overstated claims about model capabilities across the field.", "question_token_count": 44, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 7, "question_groundedness_score": 9, "avg_answer_token_count": 28, "choices": null}
{"context": "###### Interactive Evaluation\nIn this category, inspired by the human interview process, LLMs are evaluated through multi-round interactions with an LLM \u00a0(Li et\u00a0al., 2023b).\n\nLLM-as-an-Interviewer\u00a0(Kim et\u00a0al., 2024) employs an interviewer LLM that first paraphrases queries from existing static benchmarks and then conducts a multi-turn evaluation by posing follow-up questions or providing feedback on the examined LLM\u2019s responses.\n\nTreeEval\u00a0(Li et\u00a0al., 2024b) begins by generating an initial question on a given topic using an LLM. Based on the previous topic and the examined LLM\u2019s response, it then generates follow-up subtopics and corresponding questions to further assess the model.\n\nKIEval\u00a0(Yu et\u00a0al., 2024) generates follow-up questions based on the evaluated model\u2019s response to an initial question from a static benchmark.\n\n\n###### Multi-Agent Evaluation\nInspired by the recent success of multi-agents systems\u00a0(Guo et\u00a0al., 2024), multi-agent collaborations are used to construct dynamic benchmarks.\n\nBenchmark Self-Evolving\u00a0(Wang et\u00a0al., 2024a) employs a multi-agent framework to dynamically extend existing static benchmarks, showcasing the potential of agent-based methods.\n\nGiven a task description, BENCHAGENTS\u00a0(Butt et\u00a0al., 2024) leverages a multi-agent framework for automated benchmark creation.\n\nIt splits the process into planning, generation, verification, and evaluation\u2014each handled by a specialized LLM agent.\n\nThis coordinated approach, with human-in-the-loop feedback, yields scalable, diverse, and high-quality benchmarks.\n", "topic": "The implications of dynamic, interaction-driven benchmarking for the future development and assessment of large language models.", "question": "How might the shift toward dynamic, interaction-driven benchmarking frameworks\u2014such as multi-turn LLM interview processes and multi-agent collaborations\u2014reshape both the technical development and the epistemic reliability of large language model assessment compared to traditional static benchmarks?", "answer": "Dynamic, interaction-driven benchmarking fosters continual model improvement, captures more complex and real-world capabilities, and enhances assessment validity and reliability, but also introduces challenges in standardization, reproducibility, and potential evaluation bias.", "explanation": "This question requires the expert to synthesize the implications of adaptive, interaction-driven benchmarking, considering how these methods influence the evolution, robustness, and trustworthiness of LLMs, as well as the validity and generalizability of their evaluation, in contrast to the limitations of static benchmarks.", "question_token_count": 46, "answer_correctness_score": 8, "explanation_validity_score": 9, "question_clarity_score": 6, "question_groundedness_score": 9, "avg_answer_token_count": 40, "choices": null}
{"context": "#### 4.2 Evaluation Criteria\nWhile many dynamic benchmarking methods have been proposed to evaluate LLMs, the evaluation criteria for assessing these benchmarks themselves remain non-standardized. To this end, we propose the following evaluation criteria to assess the quality of a dynamic benchmarking algorithm.\n\n\n##### 4.2.1 Correctness\nThe first criterion for evaluating the quality of dynamic benchmarking is Correctness. If the correctness of the generated dataset cannot be guaranteed, the benchmark may provide a false sense of reliability when applied to benchmarking LLMs, leading to misleading evaluations.\n\nWe quantify the correctness of dynamic benchmarks as:\n\nwhere \ud835\udcb3isubscript\ud835\udcb3\ud835\udc56\\mathcal{X}\\_{i}caligraphic\\_X start\\_POSTSUBSCRIPT italic\\_i end\\_POSTSUBSCRIPT and \ud835\udcb4isubscript\ud835\udcb4\ud835\udc56\\mathcal{Y}\\_{i}caligraphic\\_Y start\\_POSTSUBSCRIPT italic\\_i end\\_POSTSUBSCRIPT represent the input and output of the it\u2062hsuperscript\ud835\udc56\ud835\udc61\u210ei^{th}italic\\_i start\\_POSTSUPERSCRIPT italic\\_t italic\\_h end\\_POSTSUPERSCRIPT transformation, respectively. The function \ud835\udca2\u2062(\u22c5)\ud835\udca2\u22c5\\mathcal{G}(\\cdot)caligraphic\\_G ( \u22c5 ) is an oracle that returns the ground truth of its input, ensuring an objective reference for correctness evaluation. For example, the function \ud835\udca2\u2062(\u22c5)\ud835\udca2\u22c5\\mathcal{G}(\\cdot)caligraphic\\_G ( \u22c5 ) could be a domain-specific an annotator.\n\nThis equation can be interpreted as the expected alignment between the transformed dataset\u2019s outputs and their corresponding ground truth values, measured using the scoring function \ud835\udcae\u2062(\u22c5)\ud835\udcae\u22c5\\mathcal{S}(\\cdot)caligraphic\\_S ( \u22c5 ). A higher correctness score indicates that the dynamic benchmark maintains correctness to the ground truth.\n", "topic": "The interpretation of correctness scores in relation to ground truth alignment and their implications for dynamic benchmark reliability.", "question": "How does the definition of correctness as expected alignment between benchmark outputs and ground truth, as mediated by an oracle and scoring function, influence the reliability of dynamic benchmarks in evaluating LLMs, and what risks arise if the correctness score is not sufficiently high?", "answer": "High correctness ensures benchmark reliability by maintaining fidelity to ground truth, while low correctness risks misleading evaluations due to misalignment with objective standards.", "explanation": "The answer is correct because it connects the formal definition of correctness to the notion of benchmark reliability, highlighting that high correctness ensures that benchmark outputs reliably reflect ground truth and thus lead to trustworthy LLM evaluations. Conversely, low correctness introduces the risk of misleading evaluations, as the benchmark may deviate from the objective reference.", "question_token_count": 50, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 26, "choices": null}
{"context": "#### 2.2 Contamination from LLM Training\nUnlike traditional models with clear separations between training and evaluation data, LLMs are pre-trained on massive, diverse datasets\u2014often scraped from the web (e.g., FineWeb\u00a0Penedo et\u00a0al. (2024))\u2014which increases the risk of evaluation data overlap. In the post-training phase, models are further fine-tuned on large human-annotated\u00a0Mukherjee et\u00a0al. (2023); Kim et\u00a0al. (2023) or synthetic datasets\u00a0Ding et\u00a0al. (2023); Teknium (2023); Wang et\u00a0al. (2023) that may resemble evaluation tasks, further compounding contamination risks. Although retrieval-based detection methods\u00a0Team et\u00a0al. (2024); Achiam et\u00a0al. (2023) exist, the sheer scale and complexity of training corpora make it difficult to entirely exclude evaluation data. Additionally, many LLMs keep their training data proprietary\u00a0Dubey et\u00a0al. (2024); Yang et\u00a0al. (2024), complicating the accurate assessment of their true performance and highlighting the need for fair and reliable benchmarks. This opacity further exacerbates data contamination, as it impedes the community\u2019s ability to verify and mitigate potential overlaps between training and evaluation data.\n", "topic": "The compounding effect of fine-tuning LLMs on human-annotated and synthetic datasets that may resemble evaluation tasks, and its implications for contamination risk.", "question": "How does fine-tuning large language models on human-annotated and synthetic datasets that closely resemble evaluation tasks exacerbate contamination risk, and what are the critical implications of this compounding effect for the validity and trustworthiness of benchmark evaluations?", "answer": "It increases the chance of memorization and overestimation of model performance, thereby compromising the validity and trustworthiness of benchmark evaluations.", "explanation": "Fine-tuning on data similar to evaluation tasks increases the likelihood that evaluation items or their near-duplicates are present in the training set, causing models to potentially memorize solutions rather than generalize. This contamination undermines the reliability of benchmark results, as high performance may reflect data leakage rather than genuine model capability, and the proprietary nature of training data further obscures the ability to detect or mitigate this risk.", "question_token_count": 46, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 26, "choices": null}
{"context": "###### Table-Based\nS3Eval\u00a0(Lei et\u00a0al., 2024) evaluates the reasoning ability of LLMs by assessing their accuracy in executing random SQL queries on randomly generated SQL tables.\n\n\n###### Graph-Based\nIn this category, LLMs are evaluated with randomly generated graphs.\n\nFor instance, DyVal\u00a0(Zhu et\u00a0al., 2024a) assesses the reasoning capabilities of LLMs using randomly generated directed acyclic graphs (DAGs).\n\nThe framework first constructs DAGs with varying numbers of nodes and edges to control task difficulty.\n\nThese DAGs are then transformed into natural language descriptions through rule-based conversion. Finally, the LLM is evaluated by querying it for the value of the root node.\n\nSimilarly, NPHardEval\u00a0(Fan et\u00a0al., 2024) evaluates the reasoning ability of LLMs on well-known P and NP problems, such as the Traveling Salesman Problem (TSP).\n\nRandom graphs of varying sizes are synthesized as inputs for TSP to assess the LLM\u2019s performance.\n\nXie et\u00a0al. (2024) automatically constructs Knights and Knaves puzzles with random reasoning graph.\n", "topic": "The design and objectives of NPHardEval in challenging LLMs with well-known P and NP problems, particularly the use of the Traveling Salesman Problem with synthesized random graphs.", "question": "How does the use of synthesized random graphs in NPHardEval's evaluation of the Traveling Salesman Problem serve to rigorously test the reasoning capabilities of LLMs, and what does this approach reveal about the models' ability to generalize across algorithmic complexity classes?", "answer": "It exposes LLMs to novel, complex problem structures, rigorously testing their combinatorial reasoning and ability to generalize solutions beyond memorization, thereby revealing their limitations and strengths in handling both P and NP computational classes.", "explanation": "The correct answer highlights that employing synthesized random graphs generates diverse, unpredictable TSP instances, ensuring that LLMs cannot rely on memorized solutions or patterns. This systematically increases problem difficulty and tests the models' true reasoning and generalization abilities, especially when distinguishing between tractable (P) and intractable (NP) problem instances.", "question_token_count": 51, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 7, "question_groundedness_score": 9, "avg_answer_token_count": 41, "choices": null}
{"context": "### 3 Static Benchmarking\nIn this section, we summarize a collection of static benchmarks that have been widely used to evaluate various aspects of model performance. These benchmarks cover a broad range of tasks including math, language, coding, reasoning, knowledge, safety, instruction following, and reading comprehension. They serve as standardized evaluation tools to measure model abilities in areas such as arithmetic problem-solving, natural language understanding, program synthesis, commonsense reasoning, factual knowledge retrieval, toxicity detection, and more. Table\u00a02 provides an overview of these benchmarks along with the corresponding task categories and key references.\n\n\n#### 3.1 Problem Formulation\nA static benchmark is given by\n\n\ud835\udc9f=(\ud835\udcb3,\ud835\udcb4,\ud835\udcae(.))\\mathcal{D}=(\\mathcal{X},\\mathcal{Y},\\mathcal{S}(.))caligraphic\\_D = ( caligraphic\\_X , caligraphic\\_Y , caligraphic\\_S ( . ) ),\n\nwhere \ud835\udc9f\ud835\udc9f\\mathcal{D}caligraphic\\_D represents the seed dataset, consisting of input prompts \ud835\udcb3\ud835\udcb3\\mathcal{X}caligraphic\\_X, expected outputs \ud835\udcb4\ud835\udcb4\\mathcal{Y}caligraphic\\_Y, and a scoring function \ud835\udcae\u2062(\u22c5)\ud835\udcae\u22c5\\mathcal{S}(\\cdot)caligraphic\\_S ( \u22c5 ) that evaluates the quality of an LLM\u2019s outputs by comparing them against \ud835\udcb4\ud835\udcb4\\mathcal{Y}caligraphic\\_Y.\n", "topic": "The formal problem formulation of a static benchmark as a tuple (\ud835\udcb3, \ud835\udcb4, \ud835\udcae(.)), specifying the roles of input prompts, expected outputs, and the scoring function.", "question": "In the formal static benchmark tuple (\ud835\udcb3, \ud835\udcb4, \ud835\udcae(.)), what are the potential consequences for the validity and reliability of model evaluation if the scoring function \ud835\udcae(.) is not well-aligned with the nature of the expected outputs \ud835\udcb4, even when input prompts \ud835\udcb3 and outputs \ud835\udcb4 are well-designed?", "answer": "The evaluation may become invalid or unreliable, as the scoring function could misrepresent true model performance by not appropriately matching the intended outputs.", "explanation": "The scoring function operationalizes the evaluation; if it is misaligned with the expected outputs, it may fail to accurately reflect model performance, leading to invalid or unreliable benchmark results regardless of the quality of the prompts and outputs.", "question_token_count": 68, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 27, "choices": null}
{"context": "##### 3.3.2 Encryption\nEncryption methods secure evaluation data by making it inaccessible to unauthorized parties, preventing its accidental inclusion in training sets. Jacovi et\u00a0al. (2023) propose encrypting test data with a public key and a \u201cNo Derivatives\u201d license to block automated crawling and reuse. Yang et\u00a0al. (2023) show that even advanced decontamination methods can be defeated by minor text variations, emphasizing the need for robust encryption. Similarly, TRUCE (Chandran et\u00a0al., 2024) leverages confidential computing and secure multi-party computation to enable private benchmarking, ensuring that test data and model parameters remain confidential.\n\n\n###### Limitation\nWhile these methods effectively protect against data leakage, they depend on strong key management, they introduce extra computational overheads. These methods are vulnerable if encryption is compromised or private key is exposed.\n\n\n##### 3.3.3 Label Protection\nLabel protection involves keeping the true answers of a test set hidden from public access so that only an authorized evaluator can use them during model assessment. This approach is common in benchmarks such as GLUE Wang (2018), SuperGLUE Wang et\u00a0al. (2019), and OpenAI\u2019s HumanEval Chen et\u00a0al. (2021), etc., where the test labels are withheld to prevent models from learning or memorizing them during training. The key advantage of this method is its ability to maintain evaluation integrity by preventing model exposure to answers, thereby mitigating data contamination risks.\n", "topic": "The limitations of decontamination techniques and the implications of minor text variations for evaluation data security, as highlighted by Yang et al. (2023).", "question": "Why do minor textual variations fundamentally undermine the effectiveness of decontamination techniques for securing evaluation data, and what does this imply about the sufficiency of current approaches for preventing data leakage in model benchmarking?", "answer": "Because small text modifications can bypass overlap detection algorithms, decontamination techniques are inadequate on their own, implying that secure evaluation requires additional safeguards beyond content-based filtering.", "explanation": "Decontamination techniques typically rely on detecting exact or near-exact overlaps between training and test data; minor changes to the text can evade these methods, meaning that contaminated or leaked data can go undetected. This reveals that current decontamination approaches are insufficient alone for robust data security, necessitating complementary protections such as encryption or confidential computing.", "question_token_count": 40, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 6, "question_groundedness_score": 9, "avg_answer_token_count": 33, "choices": null}
{"context": "##### 4.2.4 Stable of Complexity\nDynamic benchmarks must also account for complexity to help users determine whether a performance drop in an LLM on the transformed dataset is due to potential data contamination or an increase in task complexity. If a dynamic transformation increases the complexity of the seed dataset, a performance drop is expected, even without data contamination. However, accurately measuring the complexity of a benchmark dataset remains a challenging task. Existing work has proposed various complexity metrics, but these are often domain-specific and do not generalize well across different applications. For example, DyVal\u00a0(Zhu et\u00a0al., 2024a) proposes applying graph complexity to evaluate the complexity of reasoning problems.\n\nFormally, given a complexity measurement function \u03a8\u2062(\u22c5)\u03a8\u22c5\\Psi(\\cdot)roman\\_\u03a8 ( \u22c5 ), the stability can be formulated as:\n\nThis equation can be interpreted as the variance in complexity across different trials, where high variance indicates that the dynamic benchmarking method is not stable.\n", "topic": "The methodological requirements and considerations for developing generalizable complexity metrics suitable for dynamic LLM benchmarking.", "question": "What are the principal methodological challenges in designing complexity metrics that generalize across domains for dynamic benchmarking of large language models, and why do existing metrics typically fail to achieve such generalizability?", "answer": "Complexity metrics often lack generalizability due to reliance on domain-specific features and assumptions, making it methodologically challenging to develop stable, domain-agnostic measures that robustly capture task difficulty across diverse LLM benchmarking scenarios.", "explanation": "The correct answer explains that most existing complexity metrics are tailored to specific domains and thus do not capture the broad diversity of tasks LLMs encounter. Designing generalizable metrics requires defining complexity in a domain-agnostic manner, ensuring stability (low variance across trials), and capturing features relevant to varied applications. Existing metrics often fail because they depend on domain-specific features or assumptions, limiting their applicability and interpretability outside their original context.", "question_token_count": 36, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 43, "choices": null}
{"context": "#### 2.1 Data Contamination\nData contamination occurs when LLM\u2019s training data \ud835\udc9ftrainsubscript\ud835\udc9ftrain\\mathcal{D}\\_{\\text{train}}caligraphic\\_D start\\_POSTSUBSCRIPT train end\\_POSTSUBSCRIPT contains information that improperly overlaps with evaluation benchmark data \ud835\udc9ftestsubscript\ud835\udc9ftest\\mathcal{D}\\_{\\text{test}}caligraphic\\_D start\\_POSTSUBSCRIPT test end\\_POSTSUBSCRIPT, compromising the validity of performance measurements. We summarize existing work and provide a formal definition of data contamination.\n\nExact contamination occurs when there is any exact duplicate in the benchmark dataset\n\nIn other word, there exist a data point d\ud835\udc51ditalic\\_d that both in \ud835\udc9ftrainsubscript\ud835\udc9ftrain\\mathcal{D}\\_{\\text{train}}caligraphic\\_D start\\_POSTSUBSCRIPT train end\\_POSTSUBSCRIPT and \ud835\udc9ftestsubscript\ud835\udc9ftest\\mathcal{D}\\_{\\text{test}}caligraphic\\_D start\\_POSTSUBSCRIPT test end\\_POSTSUBSCRIPT.\n\nCommon cases include verbatim test examples appearing in training corpora, code snippets from benchmark implementations, or documentation leaks.\n\nSyntactic contamination occurs when a test data point could be found in the training dataset after a syntactic transformation, such that\n\nwhere \u2131syntacticsubscript\u2131syntactic\\mathcal{F}\\_{\\text{syntactic}}caligraphic\\_F start\\_POSTSUBSCRIPT syntactic end\\_POSTSUBSCRIPT denotes syntactic transformations like punctuation normalization, whitespace modification, synonym substitution, morphological variations, or syntactic paraphrasing while preserving lexical meaning.\n", "topic": "The challenges and limitations in detecting both exact and syntactic contamination between training and test datasets.", "question": "What are the principal challenges that differentiate the detection of exact contamination from syntactic contamination in training and test datasets, and why do current automated methods struggle to reliably identify syntactic contamination despite advances in text processing?", "answer": "Exact contamination is detectable through direct comparison or hashing, while syntactic contamination requires recognizing meaning-preserving transformations, which current automated methods struggle with because they often lack robust semantic equivalence detection capabilities.", "explanation": "The question probes the technical and conceptual differences in contamination detection, requiring an understanding that exact contamination relies on simple matching while syntactic contamination involves complex, often meaning-preserving transformations that may evade surface-level comparison algorithms. The answer reflects the need for deeper semantic understanding, which is still an open challenge in automated text analysis.", "question_token_count": 40, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 36, "choices": null}
{"context": "###### Coding\nCoding benchmarks measure a model\u2019s ability to generate and debug code. HumanEval\u00a0(Chen et\u00a0al., 2021) and MBPP\u00a0(Austin et\u00a0al., 2021) test code synthesis and debugging, whereas SWE-Bench\u00a0(Jimenez et\u00a0al., 2024; Yang et\u00a0al., 2025) addresses more advanced challenges. Competitive platforms like Codeforces\u00a0(Codeforces, 2025) and datasets such as Aider\u00a0(Aider, 2025) further probe dynamic problem solving.\n\n\n###### Instruction Following\nInstruction benchmarks evaluate a model\u2019s ability to comprehend and execute detailed directives. Datasets like IFEval\u00a0(Zhou et\u00a0al., 2023) and InfoBench\u00a0(Qin et\u00a0al., 2024) simulate real-world scenarios requiring clear, step-by-step guidance, with C-Eval\u00a0(Huang et\u00a0al., 2024) focusing on Chinese instructions.\n\n\n###### Reasoning\nUnderstanding and applying everyday knowledge is a key aspect of language comprehension. Benchmarks such as PIQA\u00a0(Bisk et\u00a0al., 2020), SIQA\u00a0(Sap et\u00a0al., 2019), HellaSwag\u00a0(Zellers et\u00a0al., 2019), and WinoGrande\u00a0(Sakaguchi et\u00a0al., 2021) are designed to assess a model\u2019s intuitive reasoning skills from multiple perspectives. In addition, academic challenge sets like ARC\u00a0(Clark et\u00a0al., 2018), OpenBookQA\u00a0(Mihaylov et\u00a0al., 2018), and CommonsenseQA\u00a0(Talmor et\u00a0al., 2018) push models further by requiring the integration of background knowledge with logical reasoning to arrive at plausible answers. C-SimpleQA\u00a0(He et\u00a0al., 2024) evaluates the factuality ability of language models to answer short questions in Chinese.\n", "topic": "The role and methodology of instruction following benchmarks such as IFEval, InfoBench, and C-Eval, with an emphasis on step-by-step directive comprehension and multilingual evaluation.", "question": "In designing instruction following benchmarks such as IFEval, InfoBench, and C-Eval, what methodological features are critical to ensuring robust evaluation of a model\u2019s ability to comprehend and execute detailed, step-by-step directives, and how does the inclusion of multilingual datasets like C-Eval enhance the generalizability and validity of these assessments?", "answer": "Realistic, detailed task scenarios with explicit stepwise instructions and multilingual coverage to assess both directive comprehension and cross-linguistic generalizability.", "explanation": "The answer requires understanding that instruction following benchmarks must include realistic, complex scenarios demanding clear, sequential execution, with explicit, detailed instructions. Methodological robustness comes from simulating real-world tasks and assessing both comprehension and execution fidelity. The addition of multilingual datasets like C-Eval tests whether these capabilities transfer across languages, thereby broadening the validity and generalizability of model assessments.", "question_token_count": 67, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 28, "choices": null}
{"context": "###### Safety\nSafety benchmarks are essential for evaluating the robustness of LLM\u2019s ability to generate non-toxic and ethically aligned content. Datasets such as RealToxicityPrompts\u00a0(Gehman et\u00a0al., 2020) and ToxiGen\u00a0(Hartvigsen et\u00a0al., 2022) assess resilience against producing harmful outputs.\n\nBy providing a controlled environment to measure these aspects, safety benchmarks play a critical role in guiding the development of models that are not only powerful outputs but also responsible and trustworthy for real-world applications.\n\n\n###### Language\nLanguage benchmarks assess the LLMs\u2019 proficiency in specific languages.\n\nGLUE\u00a0(Wang, 2018) and SuperGLUE\u00a0(Wang et\u00a0al., 2019) cover tasks from sentiment analysis to language inference, while CLUE\u00a0(Xu et\u00a0al., 2020) targets Chinese language.\n\nTypo-fixing\u00a0(Suzgun et\u00a0al., 2022) is also widely used.\n\n\n###### Reading Comprehension\nReading comprehension tasks test a model\u2019s ability to extract and infer information from text. Benchmarks like SQuAD\u00a0(Rajpurkar et\u00a0al., 2018), QuAC\u00a0(Choi et\u00a0al., 2018), and BoolQ\u00a0(Clark et\u00a0al., 2019) challenge models to understand passages and draw logical conclusions.\n", "topic": "The impact of benchmark selection on the real-world deployment and trustworthiness of large language models.", "question": "In what ways can the selection of specific safety and language benchmarks introduce limitations or biases that affect the trustworthiness and ethical reliability of large language models when deployed in real-world scenarios?", "answer": "Benchmark selection can lead to overfitting to benchmark-specific scenarios, insufficient coverage of real-world risks, and unintentional bias, resulting in models that may appear robust and ethical in controlled tests but exhibit untrustworthy or unsafe behavior in diverse, unpredictable real-world contexts.", "explanation": "The answer identifies that benchmarks, while useful for controlled measurement, may not fully capture the diversity, adversarial conditions, or ethical challenges present in real-world use. Over-reliance on certain benchmarks can cause models to optimize for narrow criteria, potentially overlooking untested vulnerabilities or failing to generalize ethical alignment beyond benchmarked cases, thereby impacting trust and reliability upon deployment.", "question_token_count": 36, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 7, "avg_answer_token_count": 53, "choices": null}
{"context": "#### 2.3 LLM Benchmarking\nAs LLMs evolve into general-purpose task solvers, it is crucial to develop benchmarks that provide a holistic view of their performance.\n\nTo this end, significant human effort has been dedicated to building comprehensive benchmarks that assess various aspects of model performance. For example, instruction-following tasks evaluate a model\u2019s ability to interpret and execute commands\u00a0(Zhou et\u00a0al., 2023; Qin et\u00a0al., 2024; Huang et\u00a0al., 2024), while coding tasks assess its capability to generate and understand programming code\u00a0(Chen et\u00a0al., 2021; Austin et\u00a0al., 2021; Jimenez et\u00a0al., 2024; Codeforces, 2025; Aider, 2025).\n\nDespite their usefulness, static benchmarks face challenges as LLMs evolve rapidly and continue training on all available data\u00a0(Villalobos et\u00a0al., 2022). Over time, unchanging benchmarks may become too easy for stronger LLMs or introduce data contamination issues.\n\nRecognizing this critical problem, contamination detectors have been developed to quantify contamination risks, and dynamic benchmarks have been proposed to mitigate these issues.\n\nTable 2: Summary of benchmarking applications.\n\n<!-- \ud83d\uddbc\ufe0f\u274c Image not available. Please use `PdfPipelineOptions(generate_picture_images=True)` -->\n", "topic": "The distinct aspects of LLM performance assessed by instruction-following and coding benchmarks, including representative literature and benchmark sources.", "question": "How do instruction-following and coding benchmarks differ in the specific aspects of LLM performance they assess, and what are representative literature sources and benchmark platforms for each category?", "answer": "Instruction-following benchmarks assess command interpretation and execution (e.g., Zhou et al. 2023; Qin et al. 2024; Huang et al. 2024), whereas coding benchmarks evaluate code generation and comprehension (e.g., Chen et al. 2021; Austin et al. 2021; Jimenez et al. 2024; Codeforces 2025; Aider 2025).", "explanation": "The answer is correct because it identifies that instruction-following benchmarks test a model's ability to interpret and execute commands with references such as Zhou et al. (2023), Qin et al. (2024), and Huang et al. (2024), while coding benchmarks evaluate code generation and understanding, citing Chen et al. (2021), Austin et al. (2021), Jimenez et al. (2024), Codeforces (2025), and Aider (2025).", "question_token_count": 33, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 87, "choices": null}
{"context": "### Abstract\nData contamination has received increasing attention in the era of large language models (LLMs) due to their reliance on vast Internet-derived training corpora. To mitigate the risk of potential data contamination, LLM benchmarking has undergone a transformation from static to dynamic benchmarking.\n\nIn this work, we conduct an in-depth analysis of existing static to dynamic benchmarking methods aimed at reducing data contamination risks. We first examine methods that enhance static benchmarks and identify their inherent limitations. We then highlight a critical gap\u2014the lack of standardized criteria for evaluating dynamic benchmarks. Based on this observation, we propose a series of optimal design principles for dynamic benchmarking and analyze the limitations of existing dynamic benchmarks.\n\nThis survey provides a concise yet comprehensive overview of recent advancements in data contamination research, offering valuable insights and a clear guide for future research efforts.\n\nWe maintain a GitHub repository to continuously collect both static and dynamic benchmarking methods for LLMs. The repository can be found at this link\u00a0111GitHub Link: Static-to-Dynamic LLM Benchmarking.\n", "topic": "Optimal design principles proposed for effective dynamic benchmarking of LLMs.", "question": "What are the essential characteristics that should define optimal design principles for dynamic benchmarking of large language models to effectively mitigate data contamination risks and address the limitations of existing benchmarks?", "answer": "Continual novelty, standardized evaluation criteria, contamination avoidance, robustness across models, and adaptability to evolving data.", "explanation": "The correct answer reflects the abstract's identification of the shortcomings in static and dynamic benchmarking, the necessity for standardized evaluation criteria, and the goals of dynamic benchmarking\u2014namely, minimizing data contamination and ensuring robust, fair, and future-proof evaluation methods.", "question_token_count": 33, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 7, "question_groundedness_score": 8, "avg_answer_token_count": 22, "choices": null}
{"context": "### 6 Conclusion\nThis survey reviews the literature on data contamination in LLM benchmarking, analyzing both static and dynamic approaches. We find that static methods, though consistent, become more vulnerable to contamination as training datasets grow. While dynamic approaches show promise, they face challenges in reliability and reproducibility. Future research should focus on standardized dynamic evaluation, and practical mitigation tools.\n\n\n### Limitations\nWhile this survey provides a comprehensive overview of static and dynamic benchmarking methods for LLMs, there are several limitations to consider. First, due to the rapidly evolving nature of LLM development and benchmarking techniques, some recent methods or tools may not have been fully covered. As benchmarking practices are still emerging, the methods discussed may not yet account for all potential challenges or innovations in the field. Additionally, our proposed criteria for dynamic benchmarking are a first step and may need further refinement and validation in real-world applications. Lastly, this survey focuses primarily on high-level concepts and may not delve into all the fine-grained technical details of specific methods, which may limit its applicability to practitioners seeking in-depth implementation guidelines.\n", "topic": "Exploration of practical tools and strategies for mitigating data contamination in LLM benchmarking, as identified in the survey.", "question": "What are the primary obstacles to developing effective, standardized practical tools for mitigating data contamination in LLM benchmarking, and how might these obstacles be addressed through future research directions highlighted in the survey?", "answer": "The primary obstacles include the evolving nature of LLMs and benchmarking techniques, lack of reliability and reproducibility in dynamic methods, and insufficient validation of proposed criteria; addressing these requires research into standardized dynamic evaluation protocols and the development of robust, practical mitigation tools validated in real-world settings.", "explanation": "This answer is correct because it synthesizes the survey's findings regarding the growing vulnerability of static methods, the reliability and reproducibility challenges of dynamic methods, and the need for further refinement and validation of dynamic benchmarking criteria, suggesting that future research should focus on standardization and practical mitigation strategies.", "question_token_count": 37, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 6, "question_groundedness_score": 10, "avg_answer_token_count": 55, "choices": null}
{"context": "###### Limitations\nLabel protection limits transparency and independent verification, and it forces researchers to rely on centralized evaluation systems for performance metrics, which can impede detailed error analysis and reproducibility.\n\n\n##### 3.3.4 Post-hoc Detection\nPost-hoc detection mitigates data contamination by identifying overlaps between Dt\u2062r\u2062a\u2062i\u2062nsubscript\ud835\udc37\ud835\udc61\ud835\udc5f\ud835\udc4e\ud835\udc56\ud835\udc5bD\\_{train}italic\\_D start\\_POSTSUBSCRIPT italic\\_t italic\\_r italic\\_a italic\\_i italic\\_n end\\_POSTSUBSCRIPT\n\nand Dt\u2062e\u2062s\u2062tsubscript\ud835\udc37\ud835\udc61\ud835\udc52\ud835\udc60\ud835\udc61D\\_{test}italic\\_D start\\_POSTSUBSCRIPT italic\\_t italic\\_e italic\\_s italic\\_t end\\_POSTSUBSCRIPT. This is typically done through n-gram matching at various levels, such as tokens\u00a0Touvron et\u00a0al. (2023) or words\u00a0Radford et\u00a0al. (2019); Brown et\u00a0al. (2020); Chowdhery et\u00a0al. (2023). However, exact matching often leads to false negatives, prompting the use of more robust techniques like embedding-based similarity\u00a0Riddell et\u00a0al. (2024); Lee et\u00a0al. (2023); Gunasekar et\u00a0al. (2023) and improved mapping metrics\u00a0Li et\u00a0al. (2024d); Xu et\u00a0al. (2024).\n\nBeyond direct overlap detection, post-hoc methods also analyze model behavior under different conditions, such as memorization through masked inputs\u00a0Ranaldi et\u00a0al. (2024); Chang et\u00a0al. (2023), partial completions\u00a0Anil et\u00a0al. (2023); Golchin and Surdeanu (2024), or preference for original over paraphrased test cases\u00a0Duarte et\u00a0al. (2024); Golchin and Surdeanu (2023); Zong et\u00a0al. (2024). For instance, Dekoninck et\u00a0al.\u00a0(2024) propose CONSTAT, which detects contamination by comparing model performance across benchmarks.\n", "topic": "Post-hoc behavioral analysis methods for identifying memorization and contamination, including masked inputs, partial completions, and paraphrasing preferences.", "question": "Why do post-hoc behavioral analysis methods\u2014such as testing with masked inputs, partial completions, or paraphrased test cases\u2014provide more reliable identification of memorization and contamination in language models compared to traditional n-gram overlap detection, and what are the potential limitations of these behavioral approaches?", "answer": "Behavioral methods detect memorization by exposing learned internal patterns that persist despite changes in surface form, unlike n-gram overlap which misses paraphrased or masked instances; however, these methods can be limited by their reliance on indirect evidence and potential confounding factors in model behavior.", "explanation": "The answer is correct because it explains that behavioral methods can reveal memorization even when surface forms differ, as models might exhibit similar outputs or preferences due to memorized internal representations, whereas n-gram overlap misses such cases; however, behavioral methods may have their own limitations, such as sensitivity to experimental design or ambiguity in interpreting observed behaviors.", "question_token_count": 58, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 54, "choices": null}
{"context": "###### Limitations\nLabel protection limits transparency and independent verification, and it forces researchers to rely on centralized evaluation systems for performance metrics, which can impede detailed error analysis and reproducibility.\n\n\n##### 3.3.4 Post-hoc Detection\nPost-hoc detection mitigates data contamination by identifying overlaps between Dt\u2062r\u2062a\u2062i\u2062nsubscript\ud835\udc37\ud835\udc61\ud835\udc5f\ud835\udc4e\ud835\udc56\ud835\udc5bD\\_{train}italic\\_D start\\_POSTSUBSCRIPT italic\\_t italic\\_r italic\\_a italic\\_i italic\\_n end\\_POSTSUBSCRIPT\n\nand Dt\u2062e\u2062s\u2062tsubscript\ud835\udc37\ud835\udc61\ud835\udc52\ud835\udc60\ud835\udc61D\\_{test}italic\\_D start\\_POSTSUBSCRIPT italic\\_t italic\\_e italic\\_s italic\\_t end\\_POSTSUBSCRIPT. This is typically done through n-gram matching at various levels, such as tokens\u00a0Touvron et\u00a0al. (2023) or words\u00a0Radford et\u00a0al. (2019); Brown et\u00a0al. (2020); Chowdhery et\u00a0al. (2023). However, exact matching often leads to false negatives, prompting the use of more robust techniques like embedding-based similarity\u00a0Riddell et\u00a0al. (2024); Lee et\u00a0al. (2023); Gunasekar et\u00a0al. (2023) and improved mapping metrics\u00a0Li et\u00a0al. (2024d); Xu et\u00a0al. (2024).\n\nBeyond direct overlap detection, post-hoc methods also analyze model behavior under different conditions, such as memorization through masked inputs\u00a0Ranaldi et\u00a0al. (2024); Chang et\u00a0al. (2023), partial completions\u00a0Anil et\u00a0al. (2023); Golchin and Surdeanu (2024), or preference for original over paraphrased test cases\u00a0Duarte et\u00a0al. (2024); Golchin and Surdeanu (2023); Zong et\u00a0al. (2024). For instance, Dekoninck et\u00a0al.\u00a0(2024) propose CONSTAT, which detects contamination by comparing model performance across benchmarks.\n", "topic": "The application and advantages of embedding-based similarity and improved mapping metrics for robust contamination detection.", "question": "In the context of post-hoc contamination detection, why do embedding-based similarity and improved mapping metrics provide significant advantages over traditional n-gram matching approaches, and what specific challenges do they help overcome when analyzing overlaps between training and test datasets?", "answer": "They enable detection of semantically similar or paraphrased overlaps that exact n-gram matching misses, thereby reducing false negatives and improving the robustness of contamination detection between datasets.", "explanation": "Embedding-based similarity and improved mapping metrics surpass n-gram matching by capturing semantic similarity and paraphrased content, reducing false negatives when detecting contamination. These methods address the challenge of identifying non-exact but meaningfully similar overlaps that token- or word-level matching would miss, thus providing a more robust and comprehensive contamination analysis.", "question_token_count": 46, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 34, "choices": null}
{"context": "##### 4.2.6 Interpretability\nDynamic benchmarking generates large volumes of transformed data, making manual verification costly and challenging. To ensure correctness, the transformation process must be interpretable. Interpretable transformations reduce the need for extensive manual validation, lowering costs. Rule-based or manually crafted transformations are inherently interpretable, while LLM-assisted transformations depend on the model\u2019s transparency and traceability. In such cases, additional mechanisms like explainability tools, or human-in-the-loop validation may be needed to ensure reliability and correctness.\n\n\n#### 4.3 Existing Work\nBuilding on the task formats of static benchmarks, dynamic benchmarks have been introduced to assess LLM capabilities while minimizing data contamination and ensuring fairness.\n\nTable\u00a02 summarizes recent dynamic benchmarks for LLM evaluation.\n\nDynamic benchmarks can be categorized into four types based on their construction process: temporal cutoff, rule-based generation, LLM-based generation, and hybrid approaches.\n\nTemporal cutoff follows a data collection process similar to static benchmarks, with the key difference being that data is gathered from newly released information.\n\nRule-based and LLM-based generation approaches create novel evaluation data points using predefined rules or by leveraging the strong generative capabilities of LLMs.\n\nFinally, hybrid approaches combine the idea of these different approaches.\n", "topic": "Comparative analysis of interpretability between rule-based/manual and LLM-assisted data transformations in dynamic benchmarking.", "question": "In the context of dynamic benchmarking, how does the inherent interpretability of rule-based or manually crafted data transformations compare to that of LLM-assisted transformations, and what are the primary implications of these differences for validation cost and reliability assurance?", "answer": "Rule-based/manual transformations are inherently interpretable and reduce validation cost, while LLM-assisted transformations require extra mechanisms for reliability, increasing validation cost and complexity.", "explanation": "Rule-based or manual transformations are straightforward and transparent, making their operations easy to understand and verify, which reduces the need for extensive manual validation and thus lowers costs. In contrast, LLM-assisted transformations lack inherent transparency and traceability, necessitating additional measures such as explainability tools or human-in-the-loop validation to ensure correctness and reliability, which increases validation costs and complexity.", "question_token_count": 46, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 7, "question_groundedness_score": 10, "avg_answer_token_count": 30, "choices": null}
{"context": "##### 4.2.2 Scalability\nThe next evaluation criterion is scalability, which measures the ability of dynamic benchmarking methods to generate large-scale benchmark datasets. A smaller dataset can introduce more statistical errors during the benchmarking process. Therefore, an optimal dynamic benchmark should generate a larger dataset while minimizing associated costs. The scalability of a dynamic benchmark is quantified as:\n\nThis represents the expectation over the entire transformation space, where \u2225Ti\u2062(\ud835\udc9f)\u2225delimited-\u2225\u2225subscript\ud835\udc47\ud835\udc56\ud835\udc9f\\lVert T\\_{i}(\\mathcal{D})\\rVert\u2225 italic\\_T start\\_POSTSUBSCRIPT italic\\_i end\\_POSTSUBSCRIPT ( caligraphic\\_D ) \u2225 is the size of the transformed dataset, and \u2225\ud835\udc9f\u2225delimited-\u2225\u2225\ud835\udc9f\\lVert\\mathcal{D}\\rVert\u2225 caligraphic\\_D \u2225 is the size of the original dataset. The function Cost\u2062(\u22c5)Cost\u22c5\\textsf{Cost}(\\cdot)Cost ( \u22c5 ) measures the cost associated with the transformation process, which could include monetary cost, time spent, or manual effort according to the detailed scenarios.\n\nThis equation could be interpreted as the proportion of data that can be generated per unit cost.\n", "topic": "Mathematical formulation and interpretation of scalability in dynamic benchmarking.", "question": "In the context of dynamic benchmarking, explain how the expectation over the transformation space in the scalability metric mathematically captures both dataset augmentation and cost normalization, and discuss the potential implications if the cost function is not properly defined or fails to capture all relevant resource expenditures.", "answer": "The expectation ensures average scalability across all transformations, while cost normalization allows fair efficiency assessment; if the cost function omits resources, the metric misrepresents scalability and may yield misleading conclusions.", "explanation": "The expectation accounts for variability across possible transformations, ensuring scalability reflects average performance rather than a single scenario. The ratio in the metric normalizes for cost, making comparisons fair across methods. If the cost function is poorly defined or incomplete, scalability estimates become unreliable, potentially overstating efficiency or underestimating true resource requirements.", "question_token_count": 51, "answer_correctness_score": 8, "explanation_validity_score": 8, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 38, "choices": null}
{"context": "##### 4.2.6 Interpretability\nDynamic benchmarking generates large volumes of transformed data, making manual verification costly and challenging. To ensure correctness, the transformation process must be interpretable. Interpretable transformations reduce the need for extensive manual validation, lowering costs. Rule-based or manually crafted transformations are inherently interpretable, while LLM-assisted transformations depend on the model\u2019s transparency and traceability. In such cases, additional mechanisms like explainability tools, or human-in-the-loop validation may be needed to ensure reliability and correctness.\n\n\n#### 4.3 Existing Work\nBuilding on the task formats of static benchmarks, dynamic benchmarks have been introduced to assess LLM capabilities while minimizing data contamination and ensuring fairness.\n\nTable\u00a02 summarizes recent dynamic benchmarks for LLM evaluation.\n\nDynamic benchmarks can be categorized into four types based on their construction process: temporal cutoff, rule-based generation, LLM-based generation, and hybrid approaches.\n\nTemporal cutoff follows a data collection process similar to static benchmarks, with the key difference being that data is gathered from newly released information.\n\nRule-based and LLM-based generation approaches create novel evaluation data points using predefined rules or by leveraging the strong generative capabilities of LLMs.\n\nFinally, hybrid approaches combine the idea of these different approaches.\n", "topic": "Discussion of the methodological differences between static and dynamic benchmarks and their impact on evaluating LLM capabilities.", "question": "In what fundamental ways do the methodological differences between static and dynamic benchmarks influence the interpretability and reliability of large language model evaluations, and what trade-offs arise from these differences when assessing model capabilities?", "answer": "Dynamic benchmarks enhance fairness and reduce data contamination but make interpretability and reliability more challenging due to complex, often opaque data generation processes, necessitating additional validation and explainability tools\u2014thus trading off straightforward validation for improved robustness.", "explanation": "The methodological shift from static to dynamic benchmarks changes how data is created, verified, and interpreted. Static benchmarks, with fixed datasets, offer high interpretability and straightforward validation, but risk data contamination and reduced fairness. Dynamic benchmarks generate novel data\u2014improving fairness and reducing contamination\u2014but introduce challenges in transformation interpretability, especially with LLM-assisted generation, requiring additional mechanisms for reliability. The trade-off is between increased robustness to contamination and the higher complexity and cost of ensuring interpretability and correctness.", "question_token_count": 39, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 7, "question_groundedness_score": 8, "avg_answer_token_count": 45, "choices": null}
{"context": "###### Limitations\nThe collection process typically requires significant human effort\u00a0(White et\u00a0al., 2024; Jain et\u00a0al., 2024), and continuous updates demand ongoing human involvement. Despite the popularity of temporal cutoffs, using recent information from competitions to evaluate LLMs can still lead to data contamination, as these problems are likely to be reused in future competitions\u00a0(Wu et\u00a0al., 2024). Verification is often overlooked in these live benchmarks\u00a0(White et\u00a0al., 2024).\n\n\n##### 4.3.2 Rule-Based Generation\nThis method synthesizes new test cases based on predefined rules, featuring an extremely low collision probability\u00a0(Zhu et\u00a0al., 2024a).\n\n\n###### Template-Based\nGSM-Symbolic\u00a0(Mirzadeh et\u00a0al., 2025) creates dynamic math benchmarks by using query templates with placeholder variables, which are randomly filled to generate diverse problem instances.\n\nMathador-LM(Kurtic et\u00a0al., 2024) generates evaluation queries by adhering to the rules of Mathador games(Puma et\u00a0al., 2023) and varying input numbers.\n\nMMLU-CF\u00a0(Zhao et\u00a0al., 2024) follows the template of multiple-choice questions and generates novel samples by shuffling answer choices and randomly replacing incorrect options with \"None of the other choices.\"\n", "topic": "The methodology of template-based benchmark generation, including the use of dynamic templates and randomized variables, as exemplified by GSM-Symbolic.", "question": "How does the use of dynamically generated query templates with placeholder variables and randomized filling, as implemented in GSM-Symbolic, address both the challenges of benchmark diversity and potential data contamination, and what are the inherent trade-offs or limitations of this approach in the context of mathematical benchmark generation?", "answer": "Dynamic templates with randomized variables enable the creation of diverse, novel problem instances that reduce the risk of data contamination by minimizing overlap with existing datasets, but may introduce challenges in difficulty calibration, coverage completeness, and quality control.", "explanation": "The correct answer synthesizes the technical mechanism (dynamic templates with random variable filling), explains how this process enhances benchmark diversity and helps mitigate data contamination by avoiding direct copying of existing problems, and recognizes limitations\u2014such as possible issues with maintaining balanced problem difficulty, ensuring comprehensive coverage, or inadvertently generating trivial or invalid problems.", "question_token_count": 57, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 44, "choices": null}
{"context": "##### 4.2.5 Diversity\nBesides the aforementioned criteria, another important factor is the diversity of the transformed dataset. This diversity can be categorized into two components: external diversity and internal diversity: External diversity measures the variation between the transformed dataset and the seed dataset. Internal diversity quantifies the differences between two transformation trials.\n\n|    | External Diversity   | =\ud835\udd3ci=1N\u2062\u0398\u2062(\ud835\udc9fi,\ud835\udc9f)absentsuperscriptsubscript\ud835\udd3c\ud835\udc561\ud835\udc41\u0398subscript\ud835\udc9f\ud835\udc56\ud835\udc9f\\displaystyle=\\mathbb{E}_{i=1}^{N}\\Theta(\\mathcal{D}_{i},\\mathcal{D})= blackboard_E start_POSTSUBSCRIPT italic_i = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_N end_POSTSUPERSCRIPT roman_\u0398 ( caligraphic_D start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT , caligraphic_D )                                                                                                                                                                                                                               |    |\n\n|----|----------------------||----|\n\n|    | Internal Diversity   | =\ud835\udd3ci,j=1,i\u2260jN\u2062\u0398\u2062(\ud835\udc9fi,\ud835\udc9fj)absentsuperscriptsubscript\ud835\udd3cformulae-sequence\ud835\udc56\ud835\udc571\ud835\udc56\ud835\udc57\ud835\udc41\u0398subscript\ud835\udc9f\ud835\udc56subscript\ud835\udc9f\ud835\udc57\\displaystyle=\\mathbb{E}_{\\begin{subarray}{c}i,j=1,i\\neq j\\end{subarray}}^{N}% \\Theta(\\mathcal{D}_{i},\\mathcal{D}_{j})= blackboard_E start_POSTSUBSCRIPT start_ARG start_ROW start_CELL italic_i , italic_j = 1 , italic_i \u2260 italic_j end_CELL end_ROW end_ARG end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_N end_POSTSUPERSCRIPT roman_\u0398 ( caligraphic_D start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT , caligraphic_D start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT ) |    |\n\nwhere \u0398\u2062(\u22c5)\u0398\u22c5\\Theta(\\cdot)roman\\_\u0398 ( \u22c5 ) is a function that measures the diversity between two datasets. For example, it could be the N-gram metrics or the reference based metrics, such as BLEU scores.\n", "topic": "Mathematical formulation and interpretation of internal diversity across transformation trials.", "question": "Explain how the mathematical formulation of internal diversity using the expectation over \u0398 across all distinct pairs of transformation trials captures the variability of the transformation process, and discuss how the choice of diversity function \u0398 can influence the interpretability and utility of the internal diversity metric.", "answer": "The expectation over \u0398 for all distinct trial pairs quantifies average dissimilarity among transformed datasets, capturing the transformation process's variability, while the choice of \u0398 determines which diversity aspects are measured, thus affecting the metric's interpretability and task-specific relevance.", "explanation": "The correct answer must recognize that the expectation over \u0398 across all distinct pairs measures the average dissimilarity among transformation outputs, reflecting the process's capacity to generate diverse results. It should also note that different choices for \u0398 (e.g., N-gram overlap versus BLEU) affect what aspects of diversity are quantified, thereby shaping the interpretability and relevance of the metric to specific tasks.", "question_token_count": 51, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 6, "question_groundedness_score": 10, "avg_answer_token_count": 50, "choices": null}
{"context": "###### Limitations\nThe collection process typically requires significant human effort\u00a0(White et\u00a0al., 2024; Jain et\u00a0al., 2024), and continuous updates demand ongoing human involvement. Despite the popularity of temporal cutoffs, using recent information from competitions to evaluate LLMs can still lead to data contamination, as these problems are likely to be reused in future competitions\u00a0(Wu et\u00a0al., 2024). Verification is often overlooked in these live benchmarks\u00a0(White et\u00a0al., 2024).\n\n\n##### 4.3.2 Rule-Based Generation\nThis method synthesizes new test cases based on predefined rules, featuring an extremely low collision probability\u00a0(Zhu et\u00a0al., 2024a).\n\n\n###### Template-Based\nGSM-Symbolic\u00a0(Mirzadeh et\u00a0al., 2025) creates dynamic math benchmarks by using query templates with placeholder variables, which are randomly filled to generate diverse problem instances.\n\nMathador-LM(Kurtic et\u00a0al., 2024) generates evaluation queries by adhering to the rules of Mathador games(Puma et\u00a0al., 2023) and varying input numbers.\n\nMMLU-CF\u00a0(Zhao et\u00a0al., 2024) follows the template of multiple-choice questions and generates novel samples by shuffling answer choices and randomly replacing incorrect options with \"None of the other choices.\"\n", "topic": "Strategies for minimizing test case collisions and ensuring benchmark novelty in automated evaluation settings.", "question": "In the context of automated benchmark generation for LLM evaluation, how do rule-based and template-based approaches respectively minimize test case collisions and ensure benchmark novelty, and what are the inherent limitations of these strategies?", "answer": "Rule-based methods minimize collisions via strict predefined rules yielding unique test cases, while template-based methods ensure novelty by randomizing template variables and answer options; both rely on the quality and diversity of rules/templates and may overlook verification or exhaustiveness.", "explanation": "This answer synthesizes the mechanisms by which rule-based methods achieve extremely low collision probability through predefined rules, while template-based methods utilize randomized variable substitution and answer shuffling to create diverse and novel test cases. It also addresses the inherent limitations of each, such as the dependency on predefined rules/templates and potential overlooked verification.", "question_token_count": 40, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 7, "question_groundedness_score": 9, "avg_answer_token_count": 48, "choices": null}
{"context": "#### 2.1 Data Contamination\nData contamination occurs when LLM\u2019s training data \ud835\udc9ftrainsubscript\ud835\udc9ftrain\\mathcal{D}\\_{\\text{train}}caligraphic\\_D start\\_POSTSUBSCRIPT train end\\_POSTSUBSCRIPT contains information that improperly overlaps with evaluation benchmark data \ud835\udc9ftestsubscript\ud835\udc9ftest\\mathcal{D}\\_{\\text{test}}caligraphic\\_D start\\_POSTSUBSCRIPT test end\\_POSTSUBSCRIPT, compromising the validity of performance measurements. We summarize existing work and provide a formal definition of data contamination.\n\nExact contamination occurs when there is any exact duplicate in the benchmark dataset\n\nIn other word, there exist a data point d\ud835\udc51ditalic\\_d that both in \ud835\udc9ftrainsubscript\ud835\udc9ftrain\\mathcal{D}\\_{\\text{train}}caligraphic\\_D start\\_POSTSUBSCRIPT train end\\_POSTSUBSCRIPT and \ud835\udc9ftestsubscript\ud835\udc9ftest\\mathcal{D}\\_{\\text{test}}caligraphic\\_D start\\_POSTSUBSCRIPT test end\\_POSTSUBSCRIPT.\n\nCommon cases include verbatim test examples appearing in training corpora, code snippets from benchmark implementations, or documentation leaks.\n\nSyntactic contamination occurs when a test data point could be found in the training dataset after a syntactic transformation, such that\n\nwhere \u2131syntacticsubscript\u2131syntactic\\mathcal{F}\\_{\\text{syntactic}}caligraphic\\_F start\\_POSTSUBSCRIPT syntactic end\\_POSTSUBSCRIPT denotes syntactic transformations like punctuation normalization, whitespace modification, synonym substitution, morphological variations, or syntactic paraphrasing while preserving lexical meaning.\n", "topic": "The ethical and methodological considerations arising from contamination (e.g., documentation leaks, benchmark integrity).", "question": "How do documentation leaks and syntactic contamination in benchmark datasets pose both ethical and methodological challenges to the validity and trustworthiness of LLM evaluation, and why do these forms of contamination undermine the core principles of scientific measurement in AI?", "answer": "They compromise fair and unbiased evaluation by invalidating benchmark integrity, eroding trust in reported results, and violating the scientific principle that test data must be independent of training data.", "explanation": "This answer is correct because it addresses both ethical issues (such as fairness, transparency, and responsible reporting) and methodological issues (like invalid performance measurements and compromised generalization claims). It highlights that contamination, whether through documentation leaks or syntactic overlap, erodes the reliability of benchmarks and violates the foundational requirement that evaluation data be unseen, thus undermining scientific rigor and ethical standards.", "question_token_count": 44, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 35, "choices": null}
{"context": "###### Examples of each contamination\nWe provide contamination examples in Table\u00a01. In the case of syntactic contamination, the test data is derived from the training data by rephrasing it with the addition of a prefix string. There is ongoing debate about whether such syntactic transformations constitute true data contamination, as it is challenging to distinguish between an LLM\u2019s ability to recall memorized information and its reasoning capability during inference. In this work, we consider such syntactic transformations as contamination, given that some NLP applications rely primarily on syntactic information for decision-making.\n\n\n###### Significance of contamination\nUnderstanding and mitigating potential data contamination in benchmarking LLMs is significant, especially given the rapid pace of LLM development. Without a robust approach to identifying and preventing contamination, evaluations may overestimate a model\u2019s true capabilities by inadvertently testing it on data it has already seen. This undermines the validity of benchmarks, making it difficult to assess generalization, robustness, and real-world applicability. Contaminated benchmarks can lead to misleading conclusions about progress in LLM research, influencing model comparisons, deployment decisions, and policy-making. Addressing this issue is crucial for ensuring that benchmarks provide an accurate and reliable measure of an LLM\u2019s true ability to handle novel and unseen data.\n", "topic": "The impact of data contamination on the validity and reliability of LLM benchmarks, with focus on overestimation of capabilities and compromised generalization assessment.", "question": "In what specific ways does syntactic contamination in benchmark test data undermine the validity and reliability of LLM evaluations, particularly with regard to the overestimation of model capabilities and compromised assessment of generalization?", "answer": "It causes benchmarks to overestimate LLM capabilities by enabling memorization rather than genuine reasoning, thus invalidating the assessment of generalization and making benchmark results unreliable.", "explanation": "Syntactic contamination causes test data to closely resemble training data, making it difficult to distinguish between a model\u2019s memorization and genuine reasoning. This leads to inflated benchmark scores, misrepresenting the model\u2019s true ability to generalize to novel data and undermining the reliability and validity of the evaluation.", "question_token_count": 37, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 7, "question_groundedness_score": 10, "avg_answer_token_count": 31, "choices": null}
{"context": "#### 3.3 Methods for Mitigation\nDue to the nature of LLM training data collection and the public availability of these static benchmark datasets, there is a risk that LLMs may inadvertently encounter and use them, leading to data contamination. To address this issue, several methods have been proposed to enhance static benchmarking and mitigate the impact of data contamination.\n\n\n##### 3.3.1 Canary String\nCanary strings are deliberately crafted, unique tokens embedded within a dataset to serve as markers for data contamination. When a model\u2019s output unexpectedly includes these tokens, it strongly indicates that the model has memorized portions of its training data rather than learning to generalize. For instance, the BIG-Bench dataset incorporates these strings so that model developers can identify and filter out such instances Jacovi et\u00a0al. (2023).\n\n\n###### Limitations\nThe effectiveness of canary strings depends on model trainers being aware of and responsive to these markers.\n\nIf a developer aims to leak benchmarking data to boost scores, this method will not work.\n", "topic": "Evaluate the limitations of canary strings as a mitigation strategy for data contamination, particularly in scenarios involving adversarial or uncooperative model developers.", "question": "Why do canary strings fail to provide effective mitigation against data contamination in static benchmarks when model developers are adversarial or uncooperative, and what does this imply about the trust assumptions underlying such mitigation strategies?", "answer": "Canary strings are ineffective against adversarial developers because detection and enforcement depend on developer cooperation, highlighting a critical trust assumption that cannot be technically enforced.", "explanation": "Canary strings are only effective if developers actively monitor model outputs for these markers and act to prevent contaminated models from being benchmarked. In adversarial situations where developers intend to game the benchmarks, the presence of canary strings is ignored or concealed, rendering the mechanism ineffective and exposing a fundamental reliance on developer integrity.", "question_token_count": 41, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 29, "choices": null}
{"context": "##### 4.2.4 Stable of Complexity\nDynamic benchmarks must also account for complexity to help users determine whether a performance drop in an LLM on the transformed dataset is due to potential data contamination or an increase in task complexity. If a dynamic transformation increases the complexity of the seed dataset, a performance drop is expected, even without data contamination. However, accurately measuring the complexity of a benchmark dataset remains a challenging task. Existing work has proposed various complexity metrics, but these are often domain-specific and do not generalize well across different applications. For example, DyVal\u00a0(Zhu et\u00a0al., 2024a) proposes applying graph complexity to evaluate the complexity of reasoning problems.\n\nFormally, given a complexity measurement function \u03a8\u2062(\u22c5)\u03a8\u22c5\\Psi(\\cdot)roman\\_\u03a8 ( \u22c5 ), the stability can be formulated as:\n\nThis equation can be interpreted as the variance in complexity across different trials, where high variance indicates that the dynamic benchmarking method is not stable.\n", "topic": "The importance of accounting for task complexity in dynamic benchmarking to distinguish between performance drops caused by data contamination versus increased complexity.", "question": "Why is it critical to measure and account for task complexity when interpreting performance drops in dynamic benchmarking of large language models, and what methodological risk arises if complexity is not considered?", "answer": "Without accounting for complexity, performance drops may be mistakenly attributed to data contamination rather than increased task difficulty, risking invalid benchmarking interpretations.", "explanation": "Measuring and accounting for task complexity ensures that observed performance drops can be correctly attributed\u2014either to genuine issues like data contamination or simply to an increase in task difficulty due to dataset transformation. If complexity is not considered, there is a methodological risk of misattributing performance degradation, leading to invalid benchmarking conclusions.", "question_token_count": 35, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 28, "choices": null}
{"context": "###### Safety\nSafety benchmarks are essential for evaluating the robustness of LLM\u2019s ability to generate non-toxic and ethically aligned content. Datasets such as RealToxicityPrompts\u00a0(Gehman et\u00a0al., 2020) and ToxiGen\u00a0(Hartvigsen et\u00a0al., 2022) assess resilience against producing harmful outputs.\n\nBy providing a controlled environment to measure these aspects, safety benchmarks play a critical role in guiding the development of models that are not only powerful outputs but also responsible and trustworthy for real-world applications.\n\n\n###### Language\nLanguage benchmarks assess the LLMs\u2019 proficiency in specific languages.\n\nGLUE\u00a0(Wang, 2018) and SuperGLUE\u00a0(Wang et\u00a0al., 2019) cover tasks from sentiment analysis to language inference, while CLUE\u00a0(Xu et\u00a0al., 2020) targets Chinese language.\n\nTypo-fixing\u00a0(Suzgun et\u00a0al., 2022) is also widely used.\n\n\n###### Reading Comprehension\nReading comprehension tasks test a model\u2019s ability to extract and infer information from text. Benchmarks like SQuAD\u00a0(Rajpurkar et\u00a0al., 2018), QuAC\u00a0(Choi et\u00a0al., 2018), and BoolQ\u00a0(Clark et\u00a0al., 2019) challenge models to understand passages and draw logical conclusions.\n", "topic": "The distinctions between language proficiency benchmarks and reading comprehension benchmarks in LLM evaluation.", "question": "In the context of LLM evaluation, how do language proficiency benchmarks fundamentally differ from reading comprehension benchmarks in terms of their evaluative focus and the range of linguistic competencies they assess?", "answer": "Language proficiency benchmarks assess diverse linguistic tasks and general language ability, while reading comprehension benchmarks focus narrowly on a model's capacity to understand and reason about specific text passages.", "explanation": "Language proficiency benchmarks encompass a broad array of linguistic tasks (such as sentiment analysis, inference, and language-specific challenges), assessing general language understanding and manipulation, whereas reading comprehension benchmarks specifically evaluate the model's ability to extract, infer, and reason over information from text passages, focusing on deep understanding of content rather than broader linguistic skills.", "question_token_count": 35, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 9, "question_groundedness_score": 9, "avg_answer_token_count": 33, "choices": null}
{"context": "### 1 Introduction\nThe field of natural language processing (NLP) has advanced rapidly in recent years, fueled by breakthroughs in Large Language Models (LLMs) such as GPT-4, Claude3, and DeepSeek\u00a0Achiam et\u00a0al. (2023); Liu et\u00a0al. (2024); Wan et\u00a0al. (2023). Trained on vast amounts of Internet-sourced data, these models have demonstrated remarkable capabilities across various applications, including code generation, text summarization, and mathematical reasoning\u00a0Codeforces (2025); Hu et\u00a0al. (2024).\n\nTo develop and enhance LLMs, beyond advancements in model architectures and training algorithms, a crucial area of research focuses on effectively evaluating their intelligence. Traditionally, LLM evaluation has relied on static benchmarking, which involves using carefully curated human-crafted datasets and assessing model performance with appropriate metrics\u00a0Wang (2018); Achiam et\u00a0al. (2023); Gunasekar et\u00a0al. (2023).\n\nFor example, in 2021, OpenAI introduced the HumanEval\u00a0Chen et\u00a0al. (2021) dataset to benchmark the code generation capabilities of LLMs; HumanEval has since become a widely used standard for this purpose.\n\nHowever, because these static benchmarks are released on the Internet for transparent evaluation, and LLMs gather as much data as possible from the Internet for training, potential data contamination is unavoidable\u00a0Magar and Schwartz (2022); Deng et\u00a0al. (2024b); Li et\u00a0al. (2024d); Sainz et\u00a0al. (2024); Balloccu et\u00a0al. (2024). Data contamination occurs when benchmark data is inadvertently included in the training phase of language models, leading to an inflated and misleading assessment of their performance. While this issue has been recognized for some time\u2014stemming from the fundamental machine learning principle of separating training and test sets\u2014it has become even more critical with the advent of LLMs. These models often scrape vast amounts of publicly available data from the Internet, significantly increasing the likelihood of contamination\u00a0Achiam et\u00a0al. (2023); Liu et\u00a0al. (2024). Furthermore, due to privacy and commercial concerns, tracing the exact training data for these models is challenging, if not impossible, complicating efforts to detect and mitigate potential contamination.\n\nFigure 1: The progress of benchmarking LLM\n\n<!-- \ud83d\uddbc\ufe0f\u274c Image not available. Please use `PdfPipelineOptions(generate_picture_images=True)` -->\n\nTo mitigate the risk of data contamination in LLM benchmarking, researchers have proposed various methods to enhance static approaches, such as data encryption\u00a0Jacovi et\u00a0al. (2023) and post-hoc contamination detection Shi et\u00a0al. (2024). However, due to the inherent limitations of static methods, researchers have introduced new dynamic benchmarking schema (Fig.\u00a01 illustrates the evolution from static to dynamic benchmarking).\n\nOne of the dynamic benchmarking methods involves continuously updating benchmark datasets based on the timestamps of LLM training to minimize contamination\u00a0White et\u00a0al. (2024); Jain et\u00a0al. (2024). Another method focuses on regenerating benchmark data to reconstruct original benchmarks\u00a0Chen et\u00a0al. (2024); Zhou et\u00a0al. (2025); Mirzadeh et\u00a0al. (2025), thereby reducing the likelihood of contamination.\n\nDespite the numerous approaches proposed for transparent LLM benchmarking, no systematic survey has summarized the rapid progress of dynamic benchmarking methods. Existing literature reviews primarily focus on post-hoc detection of data contamination and do not address emerging dynamic benchmarking strategies\u00a0Deng et\u00a0al. (2024a); Ravaut et\u00a0al. (2024). Moreover, no existing work discusses criteria for evaluating dynamic benchmarks themselves. Additionally, these reviews often lack a comprehensive discussion of the strengths and limitations of each method.\n\nTo bridge this gap, we first conduct a systematic survey of benchmarking methods for LLMs designed to mitigate the risk of data contamination, covering both static and dynamic benchmarks. We summarize state-of-the-art methods and provide an in-depth discussion of their strengths and limitations. Furthermore, we are the first to propose a set of criteria for evaluating dynamic benchmarks. Our study reveals that existing dynamic benchmarks do not fully satisfy these proposed criteria, implying the imperfection of current design. We hope that our criteria will provide valuable insights for the future design and standardization of dynamic benchmarking methods.\n\nFigure 2:  Taxonomy of research on benchmarking LLMs\n\n<!-- \ud83d\uddbc\ufe0f\u274c Image not available. Please use `PdfPipelineOptions(generate_picture_images=True)` -->\n\nThe paper is structured as illustrated in Fig.\u00a02. We begin with an overview of data contamination (\u00a72), establishing the necessary background. Next, we provide a comprehensive review of static benchmarking methods and examine how existing research has improved them to mitigate potential data contamination (\u00a73). We then outline key criteria for an effective dynamic benchmark and introduce existing dynamic benchmarking approaches (\u00a74). Finally, in \u00a75, we reflect on insights from prior work, summarize current challenges, and explore future research directions.\n\nTable 1: Examples of Data Contamination in LLMs\n\n<!-- \ud83d\uddbc\ufe0f\u274c Image not available. Please use `PdfPipelineOptions(generate_picture_images=True)` -->\n", "topic": "The evolution and impact of large language models (LLMs) in natural language processing, including their capabilities and applications.", "question": "How has the advancement of large language models fundamentally altered the challenges associated with benchmarking in NLP, particularly in relation to data contamination, and what are the principal limitations of static benchmarks that dynamic benchmarking methods aim to address?", "answer": "LLMs\u2019 reliance on vast, Internet-sourced training data has made benchmark data contamination a serious issue\u2014static benchmarks are vulnerable because their data can be included in model training, leading to inflated evaluation results; dynamic benchmarking methods address this by updating or regenerating benchmarks to minimize contamination, but static benchmarks\u2019 main limitation is their susceptibility to being memorized and their inability to adapt as models and data sources evolve.", "explanation": "This answer synthesizes the context\u2019s discussion of how LLMs\u2019 increased capabilities and Internet-scale data collection have exacerbated data contamination risks, making traditional static benchmarks inadequate, and explains the rationale behind the development of dynamic benchmarking methods as a response.", "question_token_count": 43, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 9, "question_groundedness_score": 10, "avg_answer_token_count": 82, "choices": null}
{"context": "### 3 Static Benchmarking\nIn this section, we summarize a collection of static benchmarks that have been widely used to evaluate various aspects of model performance. These benchmarks cover a broad range of tasks including math, language, coding, reasoning, knowledge, safety, instruction following, and reading comprehension. They serve as standardized evaluation tools to measure model abilities in areas such as arithmetic problem-solving, natural language understanding, program synthesis, commonsense reasoning, factual knowledge retrieval, toxicity detection, and more. Table\u00a02 provides an overview of these benchmarks along with the corresponding task categories and key references.\n\n\n#### 3.1 Problem Formulation\nA static benchmark is given by\n\n\ud835\udc9f=(\ud835\udcb3,\ud835\udcb4,\ud835\udcae(.))\\mathcal{D}=(\\mathcal{X},\\mathcal{Y},\\mathcal{S}(.))caligraphic\\_D = ( caligraphic\\_X , caligraphic\\_Y , caligraphic\\_S ( . ) ),\n\nwhere \ud835\udc9f\ud835\udc9f\\mathcal{D}caligraphic\\_D represents the seed dataset, consisting of input prompts \ud835\udcb3\ud835\udcb3\\mathcal{X}caligraphic\\_X, expected outputs \ud835\udcb4\ud835\udcb4\\mathcal{Y}caligraphic\\_Y, and a scoring function \ud835\udcae\u2062(\u22c5)\ud835\udcae\u22c5\\mathcal{S}(\\cdot)caligraphic\\_S ( \u22c5 ) that evaluates the quality of an LLM\u2019s outputs by comparing them against \ud835\udcb4\ud835\udcb4\\mathcal{Y}caligraphic\\_Y.\n", "topic": "The role of static benchmarks in the standardized evaluation of language model performance across diverse domains such as math, language, coding, reasoning, knowledge, safety, instruction following, and reading comprehension.", "question": "How does the formal structure of static benchmarks, defined by the triplet (\ud835\udcb3, \ud835\udcb4, \ud835\udcae(.)), enable standardized evaluation of language models across heterogeneous domains such as math, coding, and safety, and what are the potential limitations of relying solely on such benchmarks for comprehensive model assessment?", "answer": "The triplet structure provides a consistent framework for objective comparison across domains by specifying inputs, expected outputs, and evaluation criteria, but relying solely on static benchmarks can overlook adaptability, nuanced reasoning, and real-world applicability not represented in fixed datasets.", "explanation": "The answer is correct because it articulates how the formalization allows for consistent, reproducible, and objective evaluation across diverse tasks by mapping inputs to expected outputs and quantitatively scoring performance, while also acknowledging that static benchmarks may not capture dynamic, real-world complexities or model generalization beyond predefined tasks.", "question_token_count": 61, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 47, "choices": null}
{"context": "###### Limitations\nPost-hot detection methods face several limitations. Full access to the training dataset is often restricted due to legal and privacy constraints, making overlap detection challenging. Additionally, assumptions about model behavior, such as higher memorization or lower perplexity for contaminated instances, may not hold across different models and tasks.\n\n\n### 4 Dynamic Benchmarking\nDue to the inherent limitations of static benchmarking schemes, they face challenges in providing a transparent yet faithful evaluation of LLMs. To address this, dynamic benchmarking has been proposed.\n\n\n#### 4.1 Problem Formulation\nA dynamic benchmark is defined as\n\n\u212cdynamic=(\ud835\udc9f,T\u2062(\u22c5)),\ud835\udc9f=(\ud835\udcb3,\ud835\udcb4,\ud835\udcae\u2062(\u22c5))formulae-sequencesubscript\u212cdynamic\ud835\udc9f\ud835\udc47\u22c5\ud835\udc9f\ud835\udcb3\ud835\udcb4\ud835\udcae\u22c5\\mathcal{B}\\_{\\text{dynamic}}=(\\mathcal{D},T(\\cdot)),\\quad\\mathcal{D}=(\\mathcal%\n\n{X},\\mathcal{Y},\\mathcal{S}(\\cdot))caligraphic\\_B start\\_POSTSUBSCRIPT dynamic end\\_POSTSUBSCRIPT = ( caligraphic\\_D , italic\\_T ( \u22c5 ) ) , caligraphic\\_D = ( caligraphic\\_X , caligraphic\\_Y , caligraphic\\_S ( \u22c5 ) )\n\nwhere \ud835\udc9f\ud835\udc9f\\mathcal{D}caligraphic\\_D represents the static benchmark dataset.\n\nThe transformation function T\u2062(\u22c5)\ud835\udc47\u22c5T(\\cdot)italic\\_T ( \u22c5 ) modifies the data set during the benchmarking to avoid possible data contamination.\n\nThe dynamic dataset for the evaluation of an LLM can then be expressed as\n\n\ud835\udc9ft=Tt\u2062(\ud835\udc9f),\u2200t\u2208{1,\u2026,N}formulae-sequencesubscript\ud835\udc9f\ud835\udc61subscript\ud835\udc47\ud835\udc61\ud835\udc9ffor-all\ud835\udc611\u2026\ud835\udc41\\mathcal{D}\\_{t}=T\\_{t}(\\mathcal{D}),\\quad\\forall t\\in\\{1,\\dots,N\\}caligraphic\\_D start\\_POSTSUBSCRIPT italic\\_t end\\_POSTSUBSCRIPT = italic\\_T start\\_POSTSUBSCRIPT italic\\_t end\\_POSTSUBSCRIPT ( caligraphic\\_D ) , \u2200 italic\\_t \u2208 { 1 , \u2026 , italic\\_N }\n\nwhere \ud835\udc9ftsubscript\ud835\udc9f\ud835\udc61\\mathcal{D}\\_{t}caligraphic\\_D start\\_POSTSUBSCRIPT italic\\_t end\\_POSTSUBSCRIPT represents the evaluation data set at the timestamp t\ud835\udc61titalic\\_t, and N\ud835\udc41Nitalic\\_N is the total timestamp number, which could be finite or infinite. If the seed dataset \ud835\udc9f\ud835\udc9f\\mathcal{D}caligraphic\\_D is empty, the dynamic benchmarking dataset will be created from scratch.\n\nTable 3: Existing dynamic benchmarks and their quality on our summarized criteria. \u25cf\u25cf\\CIRCLE\u25cf represents support, \u25d0\u25d0\\LEFTcircle\u25d0 represents partial support, and \u25cb\u25cb\\Circle\u25cb represents no support\n\n<!-- \ud83d\uddbc\ufe0f\u274c Image not available. Please use `PdfPipelineOptions(generate_picture_images=True)` -->\n", "topic": "The interpretation and significance of symbolic representations (\u25cf, \u25d0, \u25cb) used to evaluate the quality of dynamic benchmarks against summarized criteria.", "question": "What are the implications of using symbolic representations such as \u25cf, \u25d0, and \u25cb to summarize benchmark quality across criteria in dynamic benchmarking, and how might these symbols both enhance and potentially limit the interpretability and utility of benchmark evaluations for expert assessment?", "answer": "Symbols provide a quick, visual summary that enhances comparative analysis but may oversimplify nuanced differences, potentially obscuring important details needed for expert assessment.", "explanation": "The answer is correct because it explains both the interpretive advantage of concise symbolic representation and the possible loss of nuance or detail, demonstrating deep understanding of the trade-offs involved in using such a system for expert evaluation.", "question_token_count": 50, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 29, "choices": null}
{"context": "##### 3.3.2 Encryption\nEncryption methods secure evaluation data by making it inaccessible to unauthorized parties, preventing its accidental inclusion in training sets. Jacovi et\u00a0al. (2023) propose encrypting test data with a public key and a \u201cNo Derivatives\u201d license to block automated crawling and reuse. Yang et\u00a0al. (2023) show that even advanced decontamination methods can be defeated by minor text variations, emphasizing the need for robust encryption. Similarly, TRUCE (Chandran et\u00a0al., 2024) leverages confidential computing and secure multi-party computation to enable private benchmarking, ensuring that test data and model parameters remain confidential.\n\n\n###### Limitation\nWhile these methods effectively protect against data leakage, they depend on strong key management, they introduce extra computational overheads. These methods are vulnerable if encryption is compromised or private key is exposed.\n\n\n##### 3.3.3 Label Protection\nLabel protection involves keeping the true answers of a test set hidden from public access so that only an authorized evaluator can use them during model assessment. This approach is common in benchmarks such as GLUE Wang (2018), SuperGLUE Wang et\u00a0al. (2019), and OpenAI\u2019s HumanEval Chen et\u00a0al. (2021), etc., where the test labels are withheld to prevent models from learning or memorizing them during training. The key advantage of this method is its ability to maintain evaluation integrity by preventing model exposure to answers, thereby mitigating data contamination risks.\n", "topic": "The use of public key encryption combined with restrictive licensing (e.g., \u201cNo Derivatives\u201d) to block automated data crawling and reuse in benchmarking.", "question": "What are the fundamental reasons that combining public key encryption with a \"No Derivatives\" license offers stronger protection against automated data crawling and reuse in benchmarking than relying on either approach alone, and what are the potential weaknesses that may persist even with this dual-layered strategy?", "answer": "The combination blocks unauthorized access both technically and legally, but remains vulnerable to compromised keys and disregard for license terms.", "explanation": "Combining public key encryption with a restrictive license creates both a technical barrier (encryption) and a legal one (\"No Derivatives\"), making it harder for automated agents to access data and for humans to legally reuse it; however, the approach is still vulnerable to key management failures and legal noncompliance.", "question_token_count": 53, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 23, "choices": null}
{"context": "##### 4.2.4 Stable of Complexity\nDynamic benchmarks must also account for complexity to help users determine whether a performance drop in an LLM on the transformed dataset is due to potential data contamination or an increase in task complexity. If a dynamic transformation increases the complexity of the seed dataset, a performance drop is expected, even without data contamination. However, accurately measuring the complexity of a benchmark dataset remains a challenging task. Existing work has proposed various complexity metrics, but these are often domain-specific and do not generalize well across different applications. For example, DyVal\u00a0(Zhu et\u00a0al., 2024a) proposes applying graph complexity to evaluate the complexity of reasoning problems.\n\nFormally, given a complexity measurement function \u03a8\u2062(\u22c5)\u03a8\u22c5\\Psi(\\cdot)roman\\_\u03a8 ( \u22c5 ), the stability can be formulated as:\n\nThis equation can be interpreted as the variance in complexity across different trials, where high variance indicates that the dynamic benchmarking method is not stable.\n", "topic": "The implications of high variance in measured complexity for the reliability of dynamic benchmarking methods.", "question": "How does high variance in measured complexity across trials undermine the reliability of dynamic benchmarking methods for evaluating LLM performance, and what are the potential consequences for interpreting performance drops?", "answer": "It makes it difficult to attribute performance drops to genuine complexity changes versus other factors, leading to unreliable benchmarking and potentially misleading interpretations.", "explanation": "High variance in complexity measurements makes it difficult to discern whether observed changes in model performance are due to actual increases in task complexity or other factors such as data contamination. This lack of stability in the benchmarking process introduces uncertainty, potentially leading to incorrect conclusions about the causes of performance fluctuations.", "question_token_count": 33, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 26, "choices": null}
{"context": "###### Limitations\nThe quality of LLM-generated samples is often uncertain. For example, human annotation of LatestEval\u00a0(Li et\u00a0al., 2023d) shows that about 10% of samples suffer from faithfulness and answerability issues, compromising evaluation reliability. Moreover, in interactive evaluation, reliability largely depends on the interviewer LLM, which generates questions and assigns scores.\n\n\n##### 4.3.4 Hybrid Generation\nLatestEval\u00a0(Li et\u00a0al., 2023d) combines temporal cutoff and LLM-based generation to automatically generate reading comprehension datasets using LLMs on real-time content from sources such as BBC.\n\nDARG\u00a0(Zhang et\u00a0al., 2024b) integrates LLM-based and graph-based generation. It first extracts reasoning graphs from existing benchmarks and then perturbs them into new samples using predefined rules.\n\nC2LEVA\u00a0(Li et\u00a0al., 2024c) incorporates all three contamination-free construction methods to build a contamination-free bilingual evaluation.\n\n\n### 5 Discussions\nKey Insights.\n\nOur analysis highlights two key insights regarding data contamination in LLM benchmarking. First, static benchmarks become less effective as training corpora grow. The probability of contamination increases with Prcontam\u221d|\ud835\udc9ftrain|\u22c5|\ud835\udc9ftest|\u22121proportional-tosubscriptPrcontam\u22c5subscript\ud835\udc9ftrainsuperscriptsubscript\ud835\udc9ftest1\\text{Pr}\\_{\\text{contam}}\\propto|\\mathcal{D}\\_{\\text{train}}|\\cdot|\\mathcal{D}\\_%\n\n{\\text{test}}|^{-1}Pr start\\_POSTSUBSCRIPT contam end\\_POSTSUBSCRIPT \u221d | caligraphic\\_D start\\_POSTSUBSCRIPT train end\\_POSTSUBSCRIPT | \u22c5 | caligraphic\\_D start\\_POSTSUBSCRIPT test end\\_POSTSUBSCRIPT | start\\_POSTSUPERSCRIPT - 1 end\\_POSTSUPERSCRIPT, rendering traditional benchmarks outdated for models trained on web-scale data. Data privacy and commercial concerns further complicate contamination issues.\n\nSecond, traditional static methods fall short in preventing contamination, prompting the creation of dynamic benchmarks. However, our study identifies a lack of standardized criteria for evaluating these dynamic benchmarks. We hope our proposed criteria will offer valuable insights and guide the development of more effective benchmarks.\n\nCurrent Challenges.\n\nStatic benchmarking methods face challenges due to a lack of transparency (e.g., label protection) and high assumptions about contaminated models (e.g., post-hoc detection). Although dynamic benchmarks address these limitations, they introduce new issues, such as balancing correctness with scalability. We also observed that some dynamic benchmarks neglect complexity control, resulting in inefficiencies in evaluation.\n\nFuture Directions.\n\nDynamic benchmarking offers a new approach for evaluating LLMs, but our study reveals a lack of standardized criteria. Future efforts should focus on standardizing these criteria for dynamic benchmarks.\n", "topic": "Evaluate the challenges and dependencies associated with interactive evaluation, particularly focusing on the role of the interviewer LLM in question generation and scoring.", "question": "In the context of interactive evaluation for large language models, what are the principal dependencies and risks introduced by relying on an interviewer LLM for both question generation and scoring, and how do these affect the overall reliability and validity of the evaluation process compared to static benchmarks?", "answer": "Reliance on the interviewer LLM introduces dependencies on its quality and biases, risking inconsistent question quality and scoring, which undermines reliability and validity of evaluations more than static benchmarks due to increased potential for subjective or flawed assessment.", "explanation": "The answer addresses how the interviewer LLM\u2019s involvement centralizes critical evaluation functions\u2014question generation and scoring\u2014introducing dependencies on its quality and biases. This affects reliability due to potential inconsistencies, lack of transparency, and possible faithfulness or answerability issues, thereby potentially compromising the validity of the evaluation more than static benchmarks, which are less susceptible to such dynamic, model-specific uncertainties.", "question_token_count": 53, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 46, "choices": null}
{"context": "### Abstract\nData contamination has received increasing attention in the era of large language models (LLMs) due to their reliance on vast Internet-derived training corpora. To mitigate the risk of potential data contamination, LLM benchmarking has undergone a transformation from static to dynamic benchmarking.\n\nIn this work, we conduct an in-depth analysis of existing static to dynamic benchmarking methods aimed at reducing data contamination risks. We first examine methods that enhance static benchmarks and identify their inherent limitations. We then highlight a critical gap\u2014the lack of standardized criteria for evaluating dynamic benchmarks. Based on this observation, we propose a series of optimal design principles for dynamic benchmarking and analyze the limitations of existing dynamic benchmarks.\n\nThis survey provides a concise yet comprehensive overview of recent advancements in data contamination research, offering valuable insights and a clear guide for future research efforts.\n\nWe maintain a GitHub repository to continuously collect both static and dynamic benchmarking methods for LLMs. The repository can be found at this link\u00a0111GitHub Link: Static-to-Dynamic LLM Benchmarking.\n", "topic": "The significance of maintaining up-to-date repositories for static and dynamic LLM benchmarking methods and their role in the research community.", "question": "How does the ongoing maintenance of repositories for static and dynamic LLM benchmarking methods fundamentally impact the advancement of research standards and collaborative progress in mitigating data contamination within the language model research community?", "answer": "They enable transparent, standardized, and collaborative benchmarking practices, accelerating methodological progress and effective mitigation of data contamination risks.", "explanation": "The correct answer highlights that up-to-date repositories serve as central, authoritative resources that facilitate transparency, standardization, and rapid dissemination of benchmarking tools and methods. This enables reproducible research, fosters collaboration, accelerates methodological improvements, and ensures the community can collectively address evolving challenges such as data contamination.", "question_token_count": 36, "answer_correctness_score": 9, "explanation_validity_score": 10, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 23, "choices": null}
{"context": "#### 2.1 Data Contamination\nData contamination occurs when LLM\u2019s training data \ud835\udc9ftrainsubscript\ud835\udc9ftrain\\mathcal{D}\\_{\\text{train}}caligraphic\\_D start\\_POSTSUBSCRIPT train end\\_POSTSUBSCRIPT contains information that improperly overlaps with evaluation benchmark data \ud835\udc9ftestsubscript\ud835\udc9ftest\\mathcal{D}\\_{\\text{test}}caligraphic\\_D start\\_POSTSUBSCRIPT test end\\_POSTSUBSCRIPT, compromising the validity of performance measurements. We summarize existing work and provide a formal definition of data contamination.\n\nExact contamination occurs when there is any exact duplicate in the benchmark dataset\n\nIn other word, there exist a data point d\ud835\udc51ditalic\\_d that both in \ud835\udc9ftrainsubscript\ud835\udc9ftrain\\mathcal{D}\\_{\\text{train}}caligraphic\\_D start\\_POSTSUBSCRIPT train end\\_POSTSUBSCRIPT and \ud835\udc9ftestsubscript\ud835\udc9ftest\\mathcal{D}\\_{\\text{test}}caligraphic\\_D start\\_POSTSUBSCRIPT test end\\_POSTSUBSCRIPT.\n\nCommon cases include verbatim test examples appearing in training corpora, code snippets from benchmark implementations, or documentation leaks.\n\nSyntactic contamination occurs when a test data point could be found in the training dataset after a syntactic transformation, such that\n\nwhere \u2131syntacticsubscript\u2131syntactic\\mathcal{F}\\_{\\text{syntactic}}caligraphic\\_F start\\_POSTSUBSCRIPT syntactic end\\_POSTSUBSCRIPT denotes syntactic transformations like punctuation normalization, whitespace modification, synonym substitution, morphological variations, or syntactic paraphrasing while preserving lexical meaning.\n", "topic": "The types of syntactic transformations (e.g., punctuation normalization, whitespace changes, synonym substitution, morphological variation, paraphrasing) that can lead to syntactic contamination while preserving lexical meaning.", "question": "Which type of transformation\u2014among punctuation normalization, whitespace modification, synonym substitution, morphological variation, and syntactic paraphrasing\u2014poses the greatest risk of unintentionally altering the original lexical meaning of a test data point, and why does this make it more challenging to distinguish between syntactic contamination and true generalization during LLM evaluation?", "answer": "Syntactic paraphrasing, because it risks subtle semantic shifts that challenge the distinction between contamination and genuine generalization.", "explanation": "Syntactic paraphrasing, while intended to preserve meaning, can sometimes introduce subtle changes in nuance, emphasis, or implication, making it more likely to unintentionally alter the original lexical meaning compared to more mechanical transformations like punctuation or whitespace changes. This blurring of boundaries complicates the task of determining whether an LLM's success on a transformed test item reflects true generalization or merely recognition of a syntactically contaminated instance.", "question_token_count": 63, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 7, "question_groundedness_score": 9, "avg_answer_token_count": 24, "choices": null}
{"context": "##### 4.2.4 Stable of Complexity\nDynamic benchmarks must also account for complexity to help users determine whether a performance drop in an LLM on the transformed dataset is due to potential data contamination or an increase in task complexity. If a dynamic transformation increases the complexity of the seed dataset, a performance drop is expected, even without data contamination. However, accurately measuring the complexity of a benchmark dataset remains a challenging task. Existing work has proposed various complexity metrics, but these are often domain-specific and do not generalize well across different applications. For example, DyVal\u00a0(Zhu et\u00a0al., 2024a) proposes applying graph complexity to evaluate the complexity of reasoning problems.\n\nFormally, given a complexity measurement function \u03a8\u2062(\u22c5)\u03a8\u22c5\\Psi(\\cdot)roman\\_\u03a8 ( \u22c5 ), the stability can be formulated as:\n\nThis equation can be interpreted as the variance in complexity across different trials, where high variance indicates that the dynamic benchmarking method is not stable.\n", "topic": "The challenges and limitations of existing domain-specific complexity metrics in evaluating benchmark datasets across different applications.", "question": "What are the fundamental limitations of relying on domain-specific complexity metrics when evaluating benchmark datasets, and how do these limitations impact the generalizability and stability of dynamic benchmarking methods across diverse applications?", "answer": "Domain-specific complexity metrics do not generalize well across applications, leading to inconsistent evaluations and instability in benchmarking when applied to diverse datasets.", "explanation": "The answer should address the inherent lack of transferability of domain-specific metrics, the challenges this poses for cross-domain comparison, and the resulting instability and reduced validity of dynamic benchmarking when applied to heterogeneous tasks.", "question_token_count": 37, "answer_correctness_score": 8, "explanation_validity_score": 8, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 26, "choices": null}
{"context": "#### 2.3 LLM Benchmarking\nAs LLMs evolve into general-purpose task solvers, it is crucial to develop benchmarks that provide a holistic view of their performance.\n\nTo this end, significant human effort has been dedicated to building comprehensive benchmarks that assess various aspects of model performance. For example, instruction-following tasks evaluate a model\u2019s ability to interpret and execute commands\u00a0(Zhou et\u00a0al., 2023; Qin et\u00a0al., 2024; Huang et\u00a0al., 2024), while coding tasks assess its capability to generate and understand programming code\u00a0(Chen et\u00a0al., 2021; Austin et\u00a0al., 2021; Jimenez et\u00a0al., 2024; Codeforces, 2025; Aider, 2025).\n\nDespite their usefulness, static benchmarks face challenges as LLMs evolve rapidly and continue training on all available data\u00a0(Villalobos et\u00a0al., 2022). Over time, unchanging benchmarks may become too easy for stronger LLMs or introduce data contamination issues.\n\nRecognizing this critical problem, contamination detectors have been developed to quantify contamination risks, and dynamic benchmarks have been proposed to mitigate these issues.\n\nTable 2: Summary of benchmarking applications.\n\n<!-- \ud83d\uddbc\ufe0f\u274c Image not available. Please use `PdfPipelineOptions(generate_picture_images=True)` -->\n", "topic": "The broader implications of benchmark evolution for the validity and reliability of LLM performance assessment over time.", "question": "In what ways does the shift from static to dynamic benchmarking paradigms fundamentally impact the validity and reliability of LLM performance assessment as models continue to evolve?", "answer": "Dynamic benchmarks mitigate contamination and obsolescence, thereby preserving validity and reliability by ensuring assessments remain challenging and uncontaminated as LLMs evolve.", "explanation": "This question targets the expert's ability to articulate how dynamic benchmarks address the risks of data contamination and obsolescence inherent in static benchmarks, thereby preserving the validity (accuracy of measuring intended constructs) and reliability (consistency of results) of model evaluation as LLMs are updated and retrained.", "question_token_count": 29, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 7, "question_groundedness_score": 9, "avg_answer_token_count": 30, "choices": null}
{"context": "##### 4.2.5 Diversity\nBesides the aforementioned criteria, another important factor is the diversity of the transformed dataset. This diversity can be categorized into two components: external diversity and internal diversity: External diversity measures the variation between the transformed dataset and the seed dataset. Internal diversity quantifies the differences between two transformation trials.\n\n|    | External Diversity   | =\ud835\udd3ci=1N\u2062\u0398\u2062(\ud835\udc9fi,\ud835\udc9f)absentsuperscriptsubscript\ud835\udd3c\ud835\udc561\ud835\udc41\u0398subscript\ud835\udc9f\ud835\udc56\ud835\udc9f\\displaystyle=\\mathbb{E}_{i=1}^{N}\\Theta(\\mathcal{D}_{i},\\mathcal{D})= blackboard_E start_POSTSUBSCRIPT italic_i = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_N end_POSTSUPERSCRIPT roman_\u0398 ( caligraphic_D start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT , caligraphic_D )                                                                                                                                                                                                                               |    |\n\n|----|----------------------||----|\n\n|    | Internal Diversity   | =\ud835\udd3ci,j=1,i\u2260jN\u2062\u0398\u2062(\ud835\udc9fi,\ud835\udc9fj)absentsuperscriptsubscript\ud835\udd3cformulae-sequence\ud835\udc56\ud835\udc571\ud835\udc56\ud835\udc57\ud835\udc41\u0398subscript\ud835\udc9f\ud835\udc56subscript\ud835\udc9f\ud835\udc57\\displaystyle=\\mathbb{E}_{\\begin{subarray}{c}i,j=1,i\\neq j\\end{subarray}}^{N}% \\Theta(\\mathcal{D}_{i},\\mathcal{D}_{j})= blackboard_E start_POSTSUBSCRIPT start_ARG start_ROW start_CELL italic_i , italic_j = 1 , italic_i \u2260 italic_j end_CELL end_ROW end_ARG end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_N end_POSTSUPERSCRIPT roman_\u0398 ( caligraphic_D start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT , caligraphic_D start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT ) |    |\n\nwhere \u0398\u2062(\u22c5)\u0398\u22c5\\Theta(\\cdot)roman\\_\u0398 ( \u22c5 ) is a function that measures the diversity between two datasets. For example, it could be the N-gram metrics or the reference based metrics, such as BLEU scores.\n", "topic": "Practical applications and implications of measuring dataset diversity for model generalization and robustness.", "question": "In the context of constructing transformed datasets for machine learning, how might prioritizing external diversity over internal diversity (or vice versa) influence a model's generalization and robustness, and what are the potential risks associated with neglecting either measure during dataset evaluation?", "answer": "Neglecting external diversity risks poor generalization due to similarity with the seed set, while neglecting internal diversity risks reduced robustness to varied inputs; prioritizing one over the other can lead to overfitting or vulnerability to unseen data.", "explanation": "The answer requires understanding that external diversity ensures the transformed data meaningfully differs from the seed set, promoting exposure to new patterns, while internal diversity ensures that multiple transformations are not redundant. Neglecting external diversity can cause overfitting to the seed data, harming generalization, while insufficient internal diversity can yield models that are robust only to a narrow set of changes. Thus, both forms of diversity are critical for robust and generalizable models.", "question_token_count": 47, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 44, "choices": null}
{"context": "### 6 Conclusion\nThis survey reviews the literature on data contamination in LLM benchmarking, analyzing both static and dynamic approaches. We find that static methods, though consistent, become more vulnerable to contamination as training datasets grow. While dynamic approaches show promise, they face challenges in reliability and reproducibility. Future research should focus on standardized dynamic evaluation, and practical mitigation tools.\n\n\n### Limitations\nWhile this survey provides a comprehensive overview of static and dynamic benchmarking methods for LLMs, there are several limitations to consider. First, due to the rapidly evolving nature of LLM development and benchmarking techniques, some recent methods or tools may not have been fully covered. As benchmarking practices are still emerging, the methods discussed may not yet account for all potential challenges or innovations in the field. Additionally, our proposed criteria for dynamic benchmarking are a first step and may need further refinement and validation in real-world applications. Lastly, this survey focuses primarily on high-level concepts and may not delve into all the fine-grained technical details of specific methods, which may limit its applicability to practitioners seeking in-depth implementation guidelines.\n", "topic": "Comparative evaluation of the reliability and reproducibility challenges faced by dynamic benchmarking approaches in LLM evaluation.", "question": "In the context of LLM evaluation, what are the principal challenges to reliability and reproducibility unique to dynamic benchmarking approaches compared to static methods, and how do these challenges complicate the standardization of evaluation practices?", "answer": "Dynamic benchmarking lacks standardized, validated procedures, leading to inconsistent and irreproducible results, which complicates efforts to establish reliable and standardized evaluation practices.", "explanation": "The answer identifies that dynamic benchmarking methods, despite their promise, are especially challenged by a lack of standardized procedures, making results difficult to replicate and maintain consistently over time, particularly as LLMs and evaluation techniques rapidly evolve. This complication is exacerbated by the preliminary state of dynamic benchmarking criteria and the absence of widely validated practical tools, impeding both reliability and reproducibility and therefore hindering standardization efforts.", "question_token_count": 39, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 6, "question_groundedness_score": 9, "avg_answer_token_count": 30, "choices": null}
{"context": "#### 2.2 Contamination from LLM Training\nUnlike traditional models with clear separations between training and evaluation data, LLMs are pre-trained on massive, diverse datasets\u2014often scraped from the web (e.g., FineWeb\u00a0Penedo et\u00a0al. (2024))\u2014which increases the risk of evaluation data overlap. In the post-training phase, models are further fine-tuned on large human-annotated\u00a0Mukherjee et\u00a0al. (2023); Kim et\u00a0al. (2023) or synthetic datasets\u00a0Ding et\u00a0al. (2023); Teknium (2023); Wang et\u00a0al. (2023) that may resemble evaluation tasks, further compounding contamination risks. Although retrieval-based detection methods\u00a0Team et\u00a0al. (2024); Achiam et\u00a0al. (2023) exist, the sheer scale and complexity of training corpora make it difficult to entirely exclude evaluation data. Additionally, many LLMs keep their training data proprietary\u00a0Dubey et\u00a0al. (2024); Yang et\u00a0al. (2024), complicating the accurate assessment of their true performance and highlighting the need for fair and reliable benchmarks. This opacity further exacerbates data contamination, as it impedes the community\u2019s ability to verify and mitigate potential overlaps between training and evaluation data.\n", "topic": "The fundamental differences between LLM training data practices and those of traditional machine learning models, especially regarding the risk of evaluation data overlap.", "question": "How do the scale, sourcing, and transparency of training data in large language models fundamentally differ from traditional machine learning practices in a way that heightens the risk of evaluation data contamination, and what implications does this have for the reliability of model benchmarks?", "answer": "LLMs use massive, web-scraped and often proprietary datasets lacking clear training-evaluation separation, making contamination detection difficult and benchmarks less reliable.", "explanation": "The answer is correct because it identifies that LLMs are trained on enormous, diverse, and often proprietary datasets with unclear boundaries, making it difficult to exclude evaluation data, unlike traditional models with explicit separation; this increases contamination risk and undermines the reliability of performance benchmarks.", "question_token_count": 50, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 30, "choices": null}
{"context": "##### 4.3.1 Temporal Cutoff\nSince LLMs typically have a knowledge cutoff date, using data collected after this cutoff to construct dataset can help evaluate the model while mitigating data contamination.\n\nThis approach has been widely adopted to construct reliable benchmarks that prevent contamination.\n\nLiveBench\u00a0(White et\u00a0al., 2024) collects questions based on the latest information source, e.g., math competitions from the past 12 months, with new questions added and updated every few months.\n\nAntiLeak-Bench\u00a0(Wu et\u00a0al., 2024) generates queries about newly emerged knowledge that was unknown before the model\u2019s knowledge cutoff date to eliminate potential data contamination.\n\nAcademicEval\u00a0(Zhang et\u00a0al., 2024a) designs academic writing tasks on latest arXiv papers.\n\nLiveCodeBench\u00a0(Jain et\u00a0al., 2024) continuously collects new human-written coding problems from online coding competition platforms like LeetCode.\n\nLiveAoPSBench\u00a0(Mahdavi et\u00a0al., 2025) collects live math problems from the Art of Problem Solving forum.\n\nForecastbench\u00a0(Karger et\u00a0al., 2024) updates new forecasting questions on a daily basis from different data sources, e.g., prediction markets.\n", "topic": "Challenges and implications of continually updating benchmark datasets with emerging data from diverse sources such as math competitions, arXiv papers, coding competitions, forums, and prediction markets.", "question": "What is a major methodological challenge associated with maintaining the validity and comparability of continually updated benchmark datasets that aggregate emerging data from diverse sources such as math competitions, academic papers, coding competitions, forums, and prediction markets?", "answer": "Ensuring consistent standardization and calibration of data across diverse, evolving sources to maintain benchmark validity and comparability.", "explanation": "This answer is correct because aggregating data from heterogeneous, dynamically evolving sources presents persistent issues in standardization of difficulty, format, and domain coverage, which can undermine the fairness and comparability of model evaluations over time.", "question_token_count": 44, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 22, "choices": null}
{"context": "###### Examples of each contamination\nWe provide contamination examples in Table\u00a01. In the case of syntactic contamination, the test data is derived from the training data by rephrasing it with the addition of a prefix string. There is ongoing debate about whether such syntactic transformations constitute true data contamination, as it is challenging to distinguish between an LLM\u2019s ability to recall memorized information and its reasoning capability during inference. In this work, we consider such syntactic transformations as contamination, given that some NLP applications rely primarily on syntactic information for decision-making.\n\n\n###### Significance of contamination\nUnderstanding and mitigating potential data contamination in benchmarking LLMs is significant, especially given the rapid pace of LLM development. Without a robust approach to identifying and preventing contamination, evaluations may overestimate a model\u2019s true capabilities by inadvertently testing it on data it has already seen. This undermines the validity of benchmarks, making it difficult to assess generalization, robustness, and real-world applicability. Contaminated benchmarks can lead to misleading conclusions about progress in LLM research, influencing model comparisons, deployment decisions, and policy-making. Addressing this issue is crucial for ensuring that benchmarks provide an accurate and reliable measure of an LLM\u2019s true ability to handle novel and unseen data.\n", "topic": "The methodological challenges and ongoing debates surrounding the identification and classification of data contamination in LLM assessment.", "question": "What are the principal methodological difficulties in distinguishing between syntactic contamination and legitimate generalization in LLM benchmarks, and how might unresolved debates on this classification affect the validity and policy implications of LLM evaluations?", "answer": "The main difficulty lies in determining whether syntactic transformations represent true novelty or merely disguised memorization, which complicates the assessment of LLM reasoning versus recall; unresolved debates risk benchmarks overstating model abilities, thereby leading to unreliable research findings and misguided policy or deployment decisions.", "explanation": "This question probes the challenge of differentiating between contaminated and genuinely novel test data when only superficial changes (e.g., syntactic rephrasing) are made, and asks how such ambiguity can undermine the trustworthiness of benchmarking results, influencing both research conclusions and real-world decisions about LLM deployment.", "question_token_count": 37, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 55, "choices": null}
{"context": "##### 4.2.3 Collision\nOne of the main motivations for dynamic benchmarking is to address the challenge of balancing transparent benchmarking with the risk of data contamination. Since the benchmarking algorithm is publicly available, an important concern arises: If these benchmarks are used to train LLM, can they still reliably reflect the true capabilities of LLMs?\n\nTo evaluate the robustness of a dynamic benchmark against this challenge, we introduce the concept of collision in dynamic benchmarking. Collision refers to the extent to which different transformations of the benchmark dataset produce overlapping data, potentially limiting the benchmark\u2019s ability to generate novel and diverse test cases. To quantify this, we propose the following metrics:\n\nCollision Rate measures the percentage of overlap between two independently transformed versions of the benchmark dataset, indicating how much poential contamination among two trials. Repeat Trials quantifies the expected number of transformation trials required to fully regenerate an existing transformed dataset Ti\u2062(\ud835\udc9f)subscript\ud835\udc47\ud835\udc56\ud835\udc9fT\\_{i}(\\mathcal{D})italic\\_T start\\_POSTSUBSCRIPT italic\\_i end\\_POSTSUBSCRIPT ( caligraphic\\_D ), providing insight into the benchmark\u2019s ability to produce novel variations.\n\nThese metrics help assess whether a dynamic benchmark remains effective in evaluating LLM capabilities, even when exposed to potential training data contamination.\n", "topic": "The methodology and interpretation of Collision Rate as a metric for overlap between independently transformed benchmark datasets.", "question": "In the context of dynamic benchmarking, how does the Collision Rate metric fundamentally impact the validity and reliability of benchmarking outcomes for LLMs, and what are the key methodological considerations that must be addressed to ensure its meaningful interpretation?", "answer": "Collision Rate determines if benchmarks remain uncontaminated and valid by measuring dataset overlap, so ensuring diverse, independent transformations is essential for its meaningful interpretation.", "explanation": "The Collision Rate quantifies the overlap between independently transformed datasets, directly affecting whether benchmarks remain novel and uncontaminated for evaluation purposes. High collision undermines benchmark validity, as models may be tested on previously seen data; thus, careful attention must be given to the diversity and independence of transformation processes to ensure the Collision Rate meaningfully reflects contamination risk and benchmark effectiveness.", "question_token_count": 44, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 31, "choices": null}
{"context": "#### 2.3 LLM Benchmarking\nAs LLMs evolve into general-purpose task solvers, it is crucial to develop benchmarks that provide a holistic view of their performance.\n\nTo this end, significant human effort has been dedicated to building comprehensive benchmarks that assess various aspects of model performance. For example, instruction-following tasks evaluate a model\u2019s ability to interpret and execute commands\u00a0(Zhou et\u00a0al., 2023; Qin et\u00a0al., 2024; Huang et\u00a0al., 2024), while coding tasks assess its capability to generate and understand programming code\u00a0(Chen et\u00a0al., 2021; Austin et\u00a0al., 2021; Jimenez et\u00a0al., 2024; Codeforces, 2025; Aider, 2025).\n\nDespite their usefulness, static benchmarks face challenges as LLMs evolve rapidly and continue training on all available data\u00a0(Villalobos et\u00a0al., 2022). Over time, unchanging benchmarks may become too easy for stronger LLMs or introduce data contamination issues.\n\nRecognizing this critical problem, contamination detectors have been developed to quantify contamination risks, and dynamic benchmarks have been proposed to mitigate these issues.\n\nTable 2: Summary of benchmarking applications.\n\n<!-- \ud83d\uddbc\ufe0f\u274c Image not available. Please use `PdfPipelineOptions(generate_picture_images=True)` -->\n", "topic": "The design, purpose, and impact of dynamic benchmarks in addressing the shortcomings of static benchmarks for LLM evaluation.", "question": "In the context of LLM evaluation, how do dynamic benchmarks fundamentally address the dual challenges of benchmark obsolescence and data contamination inherent to static benchmarks, and what are the potential limitations or new risks introduced by adopting dynamic benchmarks?", "answer": "Dynamic benchmarks address benchmark obsolescence by continuously evolving test data to match LLM capabilities and mitigate data contamination by reducing the likelihood that models have seen benchmark items during training; however, they may introduce challenges such as increased evaluation complexity, difficulties in reproducibility, and potential for unintentional bias in dynamically generated tasks.", "explanation": "This question demands a deep understanding of both the shortcomings of static benchmarks (becoming too easy, data contamination) and the mechanisms by which dynamic benchmarks attempt to solve these issues. It also requires expert-level insight into the potential trade-offs or new vulnerabilities introduced by shifting to dynamic benchmarks, such as increased complexity, reproducibility issues, or the risk of unintentional bias.", "question_token_count": 45, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 8, "avg_answer_token_count": 61, "choices": null}
{"context": "##### 4.2.4 Stable of Complexity\nDynamic benchmarks must also account for complexity to help users determine whether a performance drop in an LLM on the transformed dataset is due to potential data contamination or an increase in task complexity. If a dynamic transformation increases the complexity of the seed dataset, a performance drop is expected, even without data contamination. However, accurately measuring the complexity of a benchmark dataset remains a challenging task. Existing work has proposed various complexity metrics, but these are often domain-specific and do not generalize well across different applications. For example, DyVal\u00a0(Zhu et\u00a0al., 2024a) proposes applying graph complexity to evaluate the complexity of reasoning problems.\n\nFormally, given a complexity measurement function \u03a8\u2062(\u22c5)\u03a8\u22c5\\Psi(\\cdot)roman\\_\u03a8 ( \u22c5 ), the stability can be formulated as:\n\nThis equation can be interpreted as the variance in complexity across different trials, where high variance indicates that the dynamic benchmarking method is not stable.\n", "topic": "The application and limitations of graph complexity, as exemplified by DyVal (Zhu et al., 2024a), in assessing reasoning problem complexity.", "question": "What are the principal strengths and inherent limitations of utilizing graph complexity, as implemented in approaches like DyVal (Zhu et al., 2024a), for assessing the complexity of reasoning problems, particularly with regard to the generalizability of such metrics across diverse application domains?", "answer": "Graph complexity offers precise assessment within reasoning domains but lacks generalizability, limiting its effectiveness across diverse applications.", "explanation": "The correct answer reflects the text's discussion that graph complexity can offer meaningful, domain-specific insights into reasoning problem difficulty (a strength), but such metrics often fail to generalize to other domains, posing a significant limitation for benchmarking methods intended for broad applicability.", "question_token_count": 55, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 21, "choices": null}
{"context": "### Abstract\nData contamination has received increasing attention in the era of large language models (LLMs) due to their reliance on vast Internet-derived training corpora. To mitigate the risk of potential data contamination, LLM benchmarking has undergone a transformation from static to dynamic benchmarking.\n\nIn this work, we conduct an in-depth analysis of existing static to dynamic benchmarking methods aimed at reducing data contamination risks. We first examine methods that enhance static benchmarks and identify their inherent limitations. We then highlight a critical gap\u2014the lack of standardized criteria for evaluating dynamic benchmarks. Based on this observation, we propose a series of optimal design principles for dynamic benchmarking and analyze the limitations of existing dynamic benchmarks.\n\nThis survey provides a concise yet comprehensive overview of recent advancements in data contamination research, offering valuable insights and a clear guide for future research efforts.\n\nWe maintain a GitHub repository to continuously collect both static and dynamic benchmarking methods for LLMs. The repository can be found at this link\u00a0111GitHub Link: Static-to-Dynamic LLM Benchmarking.\n", "topic": "The transition from static to dynamic benchmarking in LLMs as a response to data contamination concerns.", "question": "What are the fundamental limitations of static benchmarking in mitigating data contamination risks for large language models, and how does the adoption of dynamic benchmarking address these limitations while introducing new challenges that necessitate the development of standardized evaluation criteria?", "answer": "Static benchmarks are vulnerable to data contamination because their fixed datasets may overlap with LLM training data, undermining evaluation validity; dynamic benchmarking reduces this risk by introducing novel, changing test sets, but also creates challenges such as inconsistency and lack of standard evaluation criteria, necessitating the development of optimal design principles for reliable assessment.", "explanation": "This question requires a deep understanding of the shortcomings of static benchmarks in the context of data contamination, the mechanisms by which dynamic benchmarking offers improvements, and the emergent issue of lacking standardization in evaluating dynamic benchmarks, all of which are central themes in the provided context.", "question_token_count": 44, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 6, "question_groundedness_score": 10, "avg_answer_token_count": 63, "choices": null}
{"context": "###### Limitations\nPost-hot detection methods face several limitations. Full access to the training dataset is often restricted due to legal and privacy constraints, making overlap detection challenging. Additionally, assumptions about model behavior, such as higher memorization or lower perplexity for contaminated instances, may not hold across different models and tasks.\n\n\n### 4 Dynamic Benchmarking\nDue to the inherent limitations of static benchmarking schemes, they face challenges in providing a transparent yet faithful evaluation of LLMs. To address this, dynamic benchmarking has been proposed.\n\n\n#### 4.1 Problem Formulation\nA dynamic benchmark is defined as\n\n\u212cdynamic=(\ud835\udc9f,T\u2062(\u22c5)),\ud835\udc9f=(\ud835\udcb3,\ud835\udcb4,\ud835\udcae\u2062(\u22c5))formulae-sequencesubscript\u212cdynamic\ud835\udc9f\ud835\udc47\u22c5\ud835\udc9f\ud835\udcb3\ud835\udcb4\ud835\udcae\u22c5\\mathcal{B}\\_{\\text{dynamic}}=(\\mathcal{D},T(\\cdot)),\\quad\\mathcal{D}=(\\mathcal%\n\n{X},\\mathcal{Y},\\mathcal{S}(\\cdot))caligraphic\\_B start\\_POSTSUBSCRIPT dynamic end\\_POSTSUBSCRIPT = ( caligraphic\\_D , italic\\_T ( \u22c5 ) ) , caligraphic\\_D = ( caligraphic\\_X , caligraphic\\_Y , caligraphic\\_S ( \u22c5 ) )\n\nwhere \ud835\udc9f\ud835\udc9f\\mathcal{D}caligraphic\\_D represents the static benchmark dataset.\n\nThe transformation function T\u2062(\u22c5)\ud835\udc47\u22c5T(\\cdot)italic\\_T ( \u22c5 ) modifies the data set during the benchmarking to avoid possible data contamination.\n\nThe dynamic dataset for the evaluation of an LLM can then be expressed as\n\n\ud835\udc9ft=Tt\u2062(\ud835\udc9f),\u2200t\u2208{1,\u2026,N}formulae-sequencesubscript\ud835\udc9f\ud835\udc61subscript\ud835\udc47\ud835\udc61\ud835\udc9ffor-all\ud835\udc611\u2026\ud835\udc41\\mathcal{D}\\_{t}=T\\_{t}(\\mathcal{D}),\\quad\\forall t\\in\\{1,\\dots,N\\}caligraphic\\_D start\\_POSTSUBSCRIPT italic\\_t end\\_POSTSUBSCRIPT = italic\\_T start\\_POSTSUBSCRIPT italic\\_t end\\_POSTSUBSCRIPT ( caligraphic\\_D ) , \u2200 italic\\_t \u2208 { 1 , \u2026 , italic\\_N }\n\nwhere \ud835\udc9ftsubscript\ud835\udc9f\ud835\udc61\\mathcal{D}\\_{t}caligraphic\\_D start\\_POSTSUBSCRIPT italic\\_t end\\_POSTSUBSCRIPT represents the evaluation data set at the timestamp t\ud835\udc61titalic\\_t, and N\ud835\udc41Nitalic\\_N is the total timestamp number, which could be finite or infinite. If the seed dataset \ud835\udc9f\ud835\udc9f\\mathcal{D}caligraphic\\_D is empty, the dynamic benchmarking dataset will be created from scratch.\n\nTable 3: Existing dynamic benchmarks and their quality on our summarized criteria. \u25cf\u25cf\\CIRCLE\u25cf represents support, \u25d0\u25d0\\LEFTcircle\u25d0 represents partial support, and \u25cb\u25cb\\Circle\u25cb represents no support\n\n<!-- \ud83d\uddbc\ufe0f\u274c Image not available. Please use `PdfPipelineOptions(generate_picture_images=True)` -->\n", "topic": "The comparative advantages of dynamic benchmarking over static benchmarking for transparent and faithful evaluation of LLMs.", "question": "In the context of evaluating large language models, what fundamental properties of dynamic benchmarking confer advantages over static benchmarking in ensuring both transparency and faithfulness, especially in mitigating data contamination and adapting to model updates?", "answer": "Dynamic benchmarking modifies evaluation data over time using transformation functions, preventing contamination and enabling continual adaptation, which ensures transparent and faithful assessment of LLMs.", "explanation": "The answer is correct because it identifies that dynamic benchmarking\u2019s core advantage lies in its use of transformation functions to continually modify the evaluation dataset, thereby preventing contamination (i.e., overlap with training data), accommodating ongoing model updates, and maintaining both transparency (through explicit dataset transformations) and faithfulness (by ensuring evaluations reflect genuine model capabilities rather than memorization).", "question_token_count": 40, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 29, "choices": null}
{"context": "### 6 Conclusion\nThis survey reviews the literature on data contamination in LLM benchmarking, analyzing both static and dynamic approaches. We find that static methods, though consistent, become more vulnerable to contamination as training datasets grow. While dynamic approaches show promise, they face challenges in reliability and reproducibility. Future research should focus on standardized dynamic evaluation, and practical mitigation tools.\n\n\n### Limitations\nWhile this survey provides a comprehensive overview of static and dynamic benchmarking methods for LLMs, there are several limitations to consider. First, due to the rapidly evolving nature of LLM development and benchmarking techniques, some recent methods or tools may not have been fully covered. As benchmarking practices are still emerging, the methods discussed may not yet account for all potential challenges or innovations in the field. Additionally, our proposed criteria for dynamic benchmarking are a first step and may need further refinement and validation in real-world applications. Lastly, this survey focuses primarily on high-level concepts and may not delve into all the fine-grained technical details of specific methods, which may limit its applicability to practitioners seeking in-depth implementation guidelines.\n", "topic": "Critical analysis of the vulnerabilities of static benchmarking methods to data contamination as LLM training datasets scale.", "question": "What underlying factors contribute to the increasing vulnerability of static benchmarking methods to data contamination as LLM training datasets expand, and how might this affect the validity of benchmark-driven model evaluation?", "answer": "Larger training datasets increase the likelihood of benchmark overlap, making contamination more probable and thus compromising the trustworthiness of static evaluation results.", "explanation": "The answer is correct because it identifies that as LLM training datasets grow, there is a greater probability that static benchmark data is included in the training set, leading to contamination that artificially inflates performance metrics and undermines the reliability of benchmark-driven evaluations.", "question_token_count": 35, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 27, "choices": null}
{"context": "##### 3.3.2 Encryption\nEncryption methods secure evaluation data by making it inaccessible to unauthorized parties, preventing its accidental inclusion in training sets. Jacovi et\u00a0al. (2023) propose encrypting test data with a public key and a \u201cNo Derivatives\u201d license to block automated crawling and reuse. Yang et\u00a0al. (2023) show that even advanced decontamination methods can be defeated by minor text variations, emphasizing the need for robust encryption. Similarly, TRUCE (Chandran et\u00a0al., 2024) leverages confidential computing and secure multi-party computation to enable private benchmarking, ensuring that test data and model parameters remain confidential.\n\n\n###### Limitation\nWhile these methods effectively protect against data leakage, they depend on strong key management, they introduce extra computational overheads. These methods are vulnerable if encryption is compromised or private key is exposed.\n\n\n##### 3.3.3 Label Protection\nLabel protection involves keeping the true answers of a test set hidden from public access so that only an authorized evaluator can use them during model assessment. This approach is common in benchmarks such as GLUE Wang (2018), SuperGLUE Wang et\u00a0al. (2019), and OpenAI\u2019s HumanEval Chen et\u00a0al. (2021), etc., where the test labels are withheld to prevent models from learning or memorizing them during training. The key advantage of this method is its ability to maintain evaluation integrity by preventing model exposure to answers, thereby mitigating data contamination risks.\n", "topic": "The principles and practice of label protection in benchmarking, specifically the strategy of withholding test labels to maintain evaluation integrity.", "question": "In the context of benchmarking machine learning models, what is a fundamental limitation of relying solely on the withholding of test labels to maintain evaluation integrity, especially in scenarios involving sophisticated adversaries or large-scale collaborative evaluations?", "answer": "It relies on trust in evaluators and does not prevent indirect label inference or leakage through adversarial means.", "explanation": "The correct answer points to the fact that label protection, while effective against direct leakage, does not prevent information leakage through indirect means such as reverse engineering, collusion, or inference attacks. Moreover, it assumes that access to the test data itself (minus labels) cannot be exploited, and that all evaluators are fully trusted, which may not hold in open or adversarial environments.", "question_token_count": 42, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 8, "question_groundedness_score": 7, "avg_answer_token_count": 21, "choices": null}
{"context": "##### 4.2.3 Collision\nOne of the main motivations for dynamic benchmarking is to address the challenge of balancing transparent benchmarking with the risk of data contamination. Since the benchmarking algorithm is publicly available, an important concern arises: If these benchmarks are used to train LLM, can they still reliably reflect the true capabilities of LLMs?\n\nTo evaluate the robustness of a dynamic benchmark against this challenge, we introduce the concept of collision in dynamic benchmarking. Collision refers to the extent to which different transformations of the benchmark dataset produce overlapping data, potentially limiting the benchmark\u2019s ability to generate novel and diverse test cases. To quantify this, we propose the following metrics:\n\nCollision Rate measures the percentage of overlap between two independently transformed versions of the benchmark dataset, indicating how much poential contamination among two trials. Repeat Trials quantifies the expected number of transformation trials required to fully regenerate an existing transformed dataset Ti\u2062(\ud835\udc9f)subscript\ud835\udc47\ud835\udc56\ud835\udc9fT\\_{i}(\\mathcal{D})italic\\_T start\\_POSTSUBSCRIPT italic\\_i end\\_POSTSUBSCRIPT ( caligraphic\\_D ), providing insight into the benchmark\u2019s ability to produce novel variations.\n\nThese metrics help assess whether a dynamic benchmark remains effective in evaluating LLM capabilities, even when exposed to potential training data contamination.\n", "topic": "The definition and conceptual significance of \"collision\" in the context of dynamic benchmarking.", "question": "Explain how the concept of collision in dynamic benchmarking informs the assessment of benchmark robustness against data contamination in large language model evaluation, and why low collision rates are critical for preserving the integrity of such benchmarks.", "answer": "Collision quantifies data overlap between benchmark transformations; low collision rates are essential to prevent contamination and ensure benchmarks produce novel, reliable test cases for evaluating LLMs.", "explanation": "The answer accurately connects the definition of collision\u2014overlap between independently transformed datasets\u2014to its practical implications: high collision rates signal less novelty and a greater risk of test data contamination, undermining the benchmark's purpose. Low collision rates ensure that dynamic benchmarks can generate diverse, uncontaminated test sets, thus maintaining reliable evaluation of LLM capabilities.", "question_token_count": 40, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 6, "question_groundedness_score": 9, "avg_answer_token_count": 32, "choices": null}
{"context": "##### 4.2.3 Collision\nOne of the main motivations for dynamic benchmarking is to address the challenge of balancing transparent benchmarking with the risk of data contamination. Since the benchmarking algorithm is publicly available, an important concern arises: If these benchmarks are used to train LLM, can they still reliably reflect the true capabilities of LLMs?\n\nTo evaluate the robustness of a dynamic benchmark against this challenge, we introduce the concept of collision in dynamic benchmarking. Collision refers to the extent to which different transformations of the benchmark dataset produce overlapping data, potentially limiting the benchmark\u2019s ability to generate novel and diverse test cases. To quantify this, we propose the following metrics:\n\nCollision Rate measures the percentage of overlap between two independently transformed versions of the benchmark dataset, indicating how much poential contamination among two trials. Repeat Trials quantifies the expected number of transformation trials required to fully regenerate an existing transformed dataset Ti\u2062(\ud835\udc9f)subscript\ud835\udc47\ud835\udc56\ud835\udc9fT\\_{i}(\\mathcal{D})italic\\_T start\\_POSTSUBSCRIPT italic\\_i end\\_POSTSUBSCRIPT ( caligraphic\\_D ), providing insight into the benchmark\u2019s ability to produce novel variations.\n\nThese metrics help assess whether a dynamic benchmark remains effective in evaluating LLM capabilities, even when exposed to potential training data contamination.\n", "topic": "The relationship between public availability of benchmarking algorithms and the reliability of benchmarks in evaluating LLM capabilities.", "question": "How does the public availability of dynamic benchmarking algorithms impact the reliability of benchmarks in evaluating LLM capabilities, and in what way do the concepts of collision rate and repeat trials serve to mitigate concerns about data contamination arising from this transparency?", "answer": "Public algorithm availability increases contamination risk, but collision rate and repeat trials quantify overlap and novelty, enabling dynamic benchmarks to remain reliable by ensuring sufficient diversity and mitigating data contamination concerns.", "explanation": "The correct answer synthesizes the causal relationship: public algorithm availability heightens the risk that benchmarks could be replicated or contaminated via exposure during LLM training, potentially undermining their evaluative power. Collision rate and repeat trials provide quantitative measures of overlap and novelty among benchmark transformations, thereby offering a way to assess and mitigate this risk by ensuring that benchmarks can still generate novel, uncontaminated test sets even when their algorithms are known.", "question_token_count": 45, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 7, "question_groundedness_score": 10, "avg_answer_token_count": 35, "choices": null}
{"context": "##### 4.3.1 Temporal Cutoff\nSince LLMs typically have a knowledge cutoff date, using data collected after this cutoff to construct dataset can help evaluate the model while mitigating data contamination.\n\nThis approach has been widely adopted to construct reliable benchmarks that prevent contamination.\n\nLiveBench\u00a0(White et\u00a0al., 2024) collects questions based on the latest information source, e.g., math competitions from the past 12 months, with new questions added and updated every few months.\n\nAntiLeak-Bench\u00a0(Wu et\u00a0al., 2024) generates queries about newly emerged knowledge that was unknown before the model\u2019s knowledge cutoff date to eliminate potential data contamination.\n\nAcademicEval\u00a0(Zhang et\u00a0al., 2024a) designs academic writing tasks on latest arXiv papers.\n\nLiveCodeBench\u00a0(Jain et\u00a0al., 2024) continuously collects new human-written coding problems from online coding competition platforms like LeetCode.\n\nLiveAoPSBench\u00a0(Mahdavi et\u00a0al., 2025) collects live math problems from the Art of Problem Solving forum.\n\nForecastbench\u00a0(Karger et\u00a0al., 2024) updates new forecasting questions on a daily basis from different data sources, e.g., prediction markets.\n", "topic": "Critical examination of the risks of data contamination in LLM evaluation and how temporal cutoff approaches address or potentially fall short of mitigating these risks.", "question": "In what ways might the use of temporal cutoff strategies in constructing LLM evaluation datasets effectively mitigate data contamination risks, and what are the potential limitations or failure modes of this approach that experts should be aware of?", "answer": "Temporal cutoff reduces contamination by excluding pre-cutoff data from evaluation, but it may fail if new data overlaps conceptually with training data, if models generalize from similar pre-cutoff content, or if there is inadvertent leakage from external sources.", "explanation": "The answer identifies how temporal cutoff can prevent evaluation data from leaking into training data by only using post-cutoff information, while also addressing subtle risks such as indirect content overlap, the model's ability to generalize from earlier data, and the challenges of ensuring true novelty in benchmark content.", "question_token_count": 41, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 7, "question_groundedness_score": 6, "avg_answer_token_count": 49, "choices": null}
{"context": "##### 4.2.5 Diversity\nBesides the aforementioned criteria, another important factor is the diversity of the transformed dataset. This diversity can be categorized into two components: external diversity and internal diversity: External diversity measures the variation between the transformed dataset and the seed dataset. Internal diversity quantifies the differences between two transformation trials.\n\n|    | External Diversity   | =\ud835\udd3ci=1N\u2062\u0398\u2062(\ud835\udc9fi,\ud835\udc9f)absentsuperscriptsubscript\ud835\udd3c\ud835\udc561\ud835\udc41\u0398subscript\ud835\udc9f\ud835\udc56\ud835\udc9f\\displaystyle=\\mathbb{E}_{i=1}^{N}\\Theta(\\mathcal{D}_{i},\\mathcal{D})= blackboard_E start_POSTSUBSCRIPT italic_i = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_N end_POSTSUPERSCRIPT roman_\u0398 ( caligraphic_D start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT , caligraphic_D )                                                                                                                                                                                                                               |    |\n\n|----|----------------------||----|\n\n|    | Internal Diversity   | =\ud835\udd3ci,j=1,i\u2260jN\u2062\u0398\u2062(\ud835\udc9fi,\ud835\udc9fj)absentsuperscriptsubscript\ud835\udd3cformulae-sequence\ud835\udc56\ud835\udc571\ud835\udc56\ud835\udc57\ud835\udc41\u0398subscript\ud835\udc9f\ud835\udc56subscript\ud835\udc9f\ud835\udc57\\displaystyle=\\mathbb{E}_{\\begin{subarray}{c}i,j=1,i\\neq j\\end{subarray}}^{N}% \\Theta(\\mathcal{D}_{i},\\mathcal{D}_{j})= blackboard_E start_POSTSUBSCRIPT start_ARG start_ROW start_CELL italic_i , italic_j = 1 , italic_i \u2260 italic_j end_CELL end_ROW end_ARG end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_N end_POSTSUPERSCRIPT roman_\u0398 ( caligraphic_D start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT , caligraphic_D start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT ) |    |\n\nwhere \u0398\u2062(\u22c5)\u0398\u22c5\\Theta(\\cdot)roman\\_\u0398 ( \u22c5 ) is a function that measures the diversity between two datasets. For example, it could be the N-gram metrics or the reference based metrics, such as BLEU scores.\n", "topic": "Mathematical formulation and interpretation of external diversity in transformed datasets.", "question": "How does the mathematical formulation of external diversity using the expectation of a diversity function \u0398 between each transformed dataset \ud835\udc9f\u1d62 and the seed dataset \ud835\udc9f operationalize the assessment of dataset transformation quality, and what are the implications of the choice of \u0398 in this context?", "answer": "It quantifies the average difference between transformed and seed datasets across trials, with the choice of \u0398 determining which aspects of diversity (e.g., lexical, semantic) are measured and thus affecting the evaluation of transformation quality.", "explanation": "The correct answer synthesizes the mathematical expression with its practical interpretation, noting that external diversity, as defined by the expectation over \u0398(\ud835\udc9f\u1d62,\ud835\udc9f), quantifies how much each transformed dataset differs from the original, aggregated over multiple samples. The choice of \u0398 directly affects the sensitivity and type of diversity captured (e.g., lexical, semantic), thereby influencing conclusions about the quality and novelty of the transformation.", "question_token_count": 54, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 6, "question_groundedness_score": 10, "avg_answer_token_count": 44, "choices": null}
{"context": "### Ethical Considerations\nOur work is rooted in the goal of enhancing the transparency and fairness of LLM evaluations, which can help mitigate the risks of bias and contamination in AI systems. However, ethical concerns arise when considering the use of both static and dynamic benchmarks. Static benchmarks, if not carefully constructed, can inadvertently perpetuate biases, especially if they rely on outdated or biased data sources. Dynamic benchmarks, while offering a more adaptive approach, raise privacy and security concerns regarding the continual collection and updating of data. Moreover, transparency and the potential for misuse of benchmarking results, such as artificially inflating model performance or selecting biased evaluation criteria, must be carefully managed. It is essential that benchmarking frameworks are designed with fairness, accountability, and privacy in mind, ensuring they do not inadvertently harm or disadvantage certain user groups or research domains. Lastly, we encourage further exploration of ethical guidelines surrounding data usage, model transparency, and the broader societal impact of AI benchmarks.\n", "topic": "Strategies for embedding fairness, accountability, and privacy into benchmarking frameworks for LLMs.", "question": "What are the most effective mechanisms for embedding fairness, accountability, and privacy into LLM benchmarking frameworks, and how can these mechanisms be balanced to address potential conflicts between transparency and privacy while minimizing risks of bias and misuse?", "answer": "Implementing algorithmic auditing, differential privacy for data handling, transparent and standardized reporting protocols, multi-stakeholder oversight, regular bias and impact assessments, and procedural safeguards to balance transparency with privacy.", "explanation": "This answer is correct because it identifies multi-layered, actionable strategies\u2014such as algorithmic auditing, differential privacy, transparent reporting standards, stakeholder involvement, and bias impact assessments\u2014and acknowledges the need for procedural checks (e.g., independent oversight, regular reviews) to reconcile trade-offs between transparency and privacy, thus minimizing bias and misuse in LLM evaluation processes.", "question_token_count": 43, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 7, "question_groundedness_score": 8, "avg_answer_token_count": 39, "choices": null}
{"context": "###### Examples of each contamination\nWe provide contamination examples in Table\u00a01. In the case of syntactic contamination, the test data is derived from the training data by rephrasing it with the addition of a prefix string. There is ongoing debate about whether such syntactic transformations constitute true data contamination, as it is challenging to distinguish between an LLM\u2019s ability to recall memorized information and its reasoning capability during inference. In this work, we consider such syntactic transformations as contamination, given that some NLP applications rely primarily on syntactic information for decision-making.\n\n\n###### Significance of contamination\nUnderstanding and mitigating potential data contamination in benchmarking LLMs is significant, especially given the rapid pace of LLM development. Without a robust approach to identifying and preventing contamination, evaluations may overestimate a model\u2019s true capabilities by inadvertently testing it on data it has already seen. This undermines the validity of benchmarks, making it difficult to assess generalization, robustness, and real-world applicability. Contaminated benchmarks can lead to misleading conclusions about progress in LLM research, influencing model comparisons, deployment decisions, and policy-making. Addressing this issue is crucial for ensuring that benchmarks provide an accurate and reliable measure of an LLM\u2019s true ability to handle novel and unseen data.\n", "topic": "The broader consequences of contaminated benchmarks for LLM research, including effects on model comparison, deployment decisions, and policy-making.", "question": "How can contamination in LLM benchmarking datasets systematically undermine the reliability of model comparisons, influence flawed deployment decisions, and misguide policy-making in the context of rapid model development?", "answer": "Contaminated benchmarks can overestimate model capabilities, leading to unreliable model comparisons, inappropriate deployment choices, and misguided policy decisions due to invalid assessments of generalization and real-world performance.", "explanation": "The answer synthesizes the cascading consequences of contaminated benchmarks, noting that they can artificially inflate model performance, misrepresent generalization and robustness, and thereby distort decisions at multiple levels including research evaluation, deployment, and regulatory or policy frameworks.", "question_token_count": 34, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 7, "question_groundedness_score": 9, "avg_answer_token_count": 38, "choices": null}
{"context": "###### Math\nMath benchmarks evaluate a model\u2019s ability to solve multi-step math problems.\n\nDatasets such as GSM8K\u00a0(Cobbe et\u00a0al., 2021) and MATH\u00a0(Hendrycks et\u00a0al., 2021) require models to work through complex problems. Recent challenges like AIME 2024\u00a0(of\u00a0America, 2024) and CNMO 2024\u00a0(Society, 2024) further test a model\u2019s capacity to tackle diverse and intricate math tasks.\n\n\n###### Knowledge\nKnowledge benchmarks evaluate LLM internal knowledge. NaturalQuestions\u00a0(Kwiatkowski et\u00a0al., 2019) and TriviaQA\u00a0(Joshi et\u00a0al., 2017) focus on retrieving real-world information, while multi-domain tasks are covered by MMLU\u00a0(Hendrycks et\u00a0al., 2020), BBH\u00a0(Suzgun et\u00a0al., 2022), and AGI Eval\u00a0(Zhong et\u00a0al., 2023). Recent extensions like MMLU-Redux\u00a0(Gema et\u00a0al., 2024) and MMLU-Pro\u00a0(Wang et\u00a0al., 2024b) refine these assessments further.\n\nAdditionally, ControlBench\u00a0(Darioush et\u00a0al., 2024), FRAMES\u00a0(Krishna et\u00a0al., 2024), and GPQA Diamond\u00a0(Rein et\u00a0al., 2023) target technical and long-context challenges, with open-domain evaluations provided by AlpacaEval\u00a0(Li et\u00a0al., 2023c) and ArenaHard\u00a0(Li et\u00a0al., 2024a).\n", "topic": "Evaluation of internal knowledge in LLMs using datasets like NaturalQuestions and TriviaQA, with a focus on methodologies for real-world information retrieval.", "question": "In evaluating LLMs' real-world information retrieval capabilities, what are the primary methodological differences between NaturalQuestions and TriviaQA, and how do these differences influence the strengths and limitations of each benchmark in assessing internal model knowledge?", "answer": "NaturalQuestions uses real search queries with long-context document retrieval, emphasizing contextual extraction, while TriviaQA uses curated factoid questions with supporting evidence, focusing on factual recall; thus, NaturalQuestions better assesses retrieval in complex, authentic contexts, whereas TriviaQA is stronger for measuring direct fact recall.", "explanation": "The answer accurately pinpoints the structural and methodological distinctions between the two datasets\u2014NaturalQuestions uses real anonymized user questions from Google Search and requires models to extract answers from long documents, emphasizing retrieval in realistic, complex contexts; TriviaQA comprises factoid questions often written for trivia competitions with supporting evidence, focusing more on recall of specific facts. These differences affect the nature of model evaluation: NaturalQuestions tests contextual comprehension and extraction in authentic scenarios, while TriviaQA primarily examines factual recall, making each benchmark suited to different aspects of internal knowledge assessment.", "question_token_count": 45, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 7, "question_groundedness_score": 4, "avg_answer_token_count": 60, "choices": null}
{"context": "### Ethical Considerations\nOur work is rooted in the goal of enhancing the transparency and fairness of LLM evaluations, which can help mitigate the risks of bias and contamination in AI systems. However, ethical concerns arise when considering the use of both static and dynamic benchmarks. Static benchmarks, if not carefully constructed, can inadvertently perpetuate biases, especially if they rely on outdated or biased data sources. Dynamic benchmarks, while offering a more adaptive approach, raise privacy and security concerns regarding the continual collection and updating of data. Moreover, transparency and the potential for misuse of benchmarking results, such as artificially inflating model performance or selecting biased evaluation criteria, must be carefully managed. It is essential that benchmarking frameworks are designed with fairness, accountability, and privacy in mind, ensuring they do not inadvertently harm or disadvantage certain user groups or research domains. Lastly, we encourage further exploration of ethical guidelines surrounding data usage, model transparency, and the broader societal impact of AI benchmarks.\n", "topic": "Broader societal impacts of AI benchmarking practices and the ethical responsibilities of researchers and practitioners.", "question": "In what ways can the design and implementation of AI benchmarking frameworks inadvertently shape societal norms or perpetuate systemic inequalities, and what specific ethical responsibilities do researchers and practitioners bear in anticipating and mitigating these effects?", "answer": "Benchmarks can reinforce existing biases or marginalize certain groups by encoding problematic data or evaluation criteria, so researchers and practitioners are ethically responsible for ensuring fairness, inclusivity, transparency, and ongoing evaluation to prevent societal harm.", "explanation": "The answer is correct because it identifies both the mechanisms by which benchmarks can influence society (e.g., embedding bias, privileging certain groups, shaping research agendas) and the proactive ethical duties of those who create and use such benchmarks (e.g., ensuring fairness, accountability, transparency, and safeguarding against harm).", "question_token_count": 41, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 45, "choices": null}
{"context": "###### Safety\nSafety benchmarks are essential for evaluating the robustness of LLM\u2019s ability to generate non-toxic and ethically aligned content. Datasets such as RealToxicityPrompts\u00a0(Gehman et\u00a0al., 2020) and ToxiGen\u00a0(Hartvigsen et\u00a0al., 2022) assess resilience against producing harmful outputs.\n\nBy providing a controlled environment to measure these aspects, safety benchmarks play a critical role in guiding the development of models that are not only powerful outputs but also responsible and trustworthy for real-world applications.\n\n\n###### Language\nLanguage benchmarks assess the LLMs\u2019 proficiency in specific languages.\n\nGLUE\u00a0(Wang, 2018) and SuperGLUE\u00a0(Wang et\u00a0al., 2019) cover tasks from sentiment analysis to language inference, while CLUE\u00a0(Xu et\u00a0al., 2020) targets Chinese language.\n\nTypo-fixing\u00a0(Suzgun et\u00a0al., 2022) is also widely used.\n\n\n###### Reading Comprehension\nReading comprehension tasks test a model\u2019s ability to extract and infer information from text. Benchmarks like SQuAD\u00a0(Rajpurkar et\u00a0al., 2018), QuAC\u00a0(Choi et\u00a0al., 2018), and BoolQ\u00a0(Clark et\u00a0al., 2019) challenge models to understand passages and draw logical conclusions.\n", "topic": "The application and relevance of typo-fixing benchmarks in measuring LLM handling of language errors.", "question": "Why is the inclusion of typo-fixing benchmarks considered crucial for a comprehensive evaluation of LLM language capabilities, particularly in contrast to traditional benchmarks like GLUE and SuperGLUE, and what practical challenges does this address in real-world deployment?", "answer": "Typo-fixing benchmarks assess LLM robustness to language errors, ensuring reliable performance with imperfect real-world inputs, a challenge not addressed by traditional benchmarks focused on clean text.", "explanation": "The answer addresses the necessity of typo-fixing benchmarks by highlighting that real-world text inputs often contain typographical errors, which traditional benchmarks typically overlook by focusing on clean, well-formed language. Including typo-fixing evaluates an LLM's robustness to imperfect input, directly impacting usability and reliability in practical applications.", "question_token_count": 47, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 6, "avg_answer_token_count": 34, "choices": null}
{"context": "### 3 Static Benchmarking\nIn this section, we summarize a collection of static benchmarks that have been widely used to evaluate various aspects of model performance. These benchmarks cover a broad range of tasks including math, language, coding, reasoning, knowledge, safety, instruction following, and reading comprehension. They serve as standardized evaluation tools to measure model abilities in areas such as arithmetic problem-solving, natural language understanding, program synthesis, commonsense reasoning, factual knowledge retrieval, toxicity detection, and more. Table\u00a02 provides an overview of these benchmarks along with the corresponding task categories and key references.\n\n\n#### 3.1 Problem Formulation\nA static benchmark is given by\n\n\ud835\udc9f=(\ud835\udcb3,\ud835\udcb4,\ud835\udcae(.))\\mathcal{D}=(\\mathcal{X},\\mathcal{Y},\\mathcal{S}(.))caligraphic\\_D = ( caligraphic\\_X , caligraphic\\_Y , caligraphic\\_S ( . ) ),\n\nwhere \ud835\udc9f\ud835\udc9f\\mathcal{D}caligraphic\\_D represents the seed dataset, consisting of input prompts \ud835\udcb3\ud835\udcb3\\mathcal{X}caligraphic\\_X, expected outputs \ud835\udcb4\ud835\udcb4\\mathcal{Y}caligraphic\\_Y, and a scoring function \ud835\udcae\u2062(\u22c5)\ud835\udcae\u22c5\\mathcal{S}(\\cdot)caligraphic\\_S ( \u22c5 ) that evaluates the quality of an LLM\u2019s outputs by comparing them against \ud835\udcb4\ud835\udcb4\\mathcal{Y}caligraphic\\_Y.\n", "topic": "The underlying assumptions and potential limitations of static benchmarking as an evaluation strategy for large language models.", "question": "What are the key implicit assumptions underlying the use of static benchmarks, defined as (\ud835\udcb3, \ud835\udcb4, \ud835\udcae(.)), for evaluating large language models, and how might these assumptions introduce potential limitations in assessing the true capabilities or generalization of such models?", "answer": "Static benchmarks assume fixed datasets and scoring functions are comprehensive and objective, which can limit evaluation by failing to capture model adaptability, creative responses, or performance on unseen, real-world inputs.", "explanation": "The answer is correct because it identifies that static benchmarks assume the dataset and scoring function are sufficiently representative and objective, but these assumptions may fail to capture the full range of model abilities, especially in open-ended or dynamic tasks, thereby potentially limiting the validity and generalizability of evaluation results.", "question_token_count": 53, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 7, "question_groundedness_score": 8, "avg_answer_token_count": 37, "choices": null}
{"context": "##### 3.3.2 Encryption\nEncryption methods secure evaluation data by making it inaccessible to unauthorized parties, preventing its accidental inclusion in training sets. Jacovi et\u00a0al. (2023) propose encrypting test data with a public key and a \u201cNo Derivatives\u201d license to block automated crawling and reuse. Yang et\u00a0al. (2023) show that even advanced decontamination methods can be defeated by minor text variations, emphasizing the need for robust encryption. Similarly, TRUCE (Chandran et\u00a0al., 2024) leverages confidential computing and secure multi-party computation to enable private benchmarking, ensuring that test data and model parameters remain confidential.\n\n\n###### Limitation\nWhile these methods effectively protect against data leakage, they depend on strong key management, they introduce extra computational overheads. These methods are vulnerable if encryption is compromised or private key is exposed.\n\n\n##### 3.3.3 Label Protection\nLabel protection involves keeping the true answers of a test set hidden from public access so that only an authorized evaluator can use them during model assessment. This approach is common in benchmarks such as GLUE Wang (2018), SuperGLUE Wang et\u00a0al. (2019), and OpenAI\u2019s HumanEval Chen et\u00a0al. (2021), etc., where the test labels are withheld to prevent models from learning or memorizing them during training. The key advantage of this method is its ability to maintain evaluation integrity by preventing model exposure to answers, thereby mitigating data contamination risks.\n", "topic": "Comparative analysis of encryption-based data protection and label protection, focusing on their strengths, weaknesses, and roles in securing evaluation pipelines.", "question": "In securing evaluation pipelines, how do encryption-based data protection and label protection fundamentally differ in their approaches, what are their respective strengths and vulnerabilities, and how does each contribute to mitigating data contamination risks?", "answer": "Encryption protects both data and labels through cryptography but relies on secure key management and incurs computational costs, while label protection conceals only the answers, maintaining evaluation integrity with less overhead but does not secure the data itself; both mitigate data contamination, but through complementary mechanisms.", "explanation": "The correct answer requires synthesizing the distinct operational domains\u2014encryption secures data and labels via cryptography but is key-management dependent and computationally intensive, while label protection focuses on hiding answers to prevent model memorization, thus maintaining evaluation integrity with lower overhead but narrower scope.", "question_token_count": 40, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 53, "choices": null}
{"context": "###### Coding\nCoding benchmarks measure a model\u2019s ability to generate and debug code. HumanEval\u00a0(Chen et\u00a0al., 2021) and MBPP\u00a0(Austin et\u00a0al., 2021) test code synthesis and debugging, whereas SWE-Bench\u00a0(Jimenez et\u00a0al., 2024; Yang et\u00a0al., 2025) addresses more advanced challenges. Competitive platforms like Codeforces\u00a0(Codeforces, 2025) and datasets such as Aider\u00a0(Aider, 2025) further probe dynamic problem solving.\n\n\n###### Instruction Following\nInstruction benchmarks evaluate a model\u2019s ability to comprehend and execute detailed directives. Datasets like IFEval\u00a0(Zhou et\u00a0al., 2023) and InfoBench\u00a0(Qin et\u00a0al., 2024) simulate real-world scenarios requiring clear, step-by-step guidance, with C-Eval\u00a0(Huang et\u00a0al., 2024) focusing on Chinese instructions.\n\n\n###### Reasoning\nUnderstanding and applying everyday knowledge is a key aspect of language comprehension. Benchmarks such as PIQA\u00a0(Bisk et\u00a0al., 2020), SIQA\u00a0(Sap et\u00a0al., 2019), HellaSwag\u00a0(Zellers et\u00a0al., 2019), and WinoGrande\u00a0(Sakaguchi et\u00a0al., 2021) are designed to assess a model\u2019s intuitive reasoning skills from multiple perspectives. In addition, academic challenge sets like ARC\u00a0(Clark et\u00a0al., 2018), OpenBookQA\u00a0(Mihaylov et\u00a0al., 2018), and CommonsenseQA\u00a0(Talmor et\u00a0al., 2018) push models further by requiring the integration of background knowledge with logical reasoning to arrive at plausible answers. C-SimpleQA\u00a0(He et\u00a0al., 2024) evaluates the factuality ability of language models to answer short questions in Chinese.\n", "topic": "Critical reflection on how the selection and design of benchmarks shape our understanding of language model capabilities and limitations.", "question": "In what ways can the current configuration and diversity of coding, instruction following, and reasoning benchmarks both clarify and distort our understanding of the true capabilities and limitations of language models, and what are the epistemological risks of relying predominantly on these benchmarks for comprehensive model evaluation?", "answer": "Benchmarks clarify model abilities by providing standardized, quantifiable tasks, but they can distort understanding by narrowly defining success, introducing selection bias, and failing to capture untested skills; thus, over-reliance risks conflating benchmark performance with genuine general intelligence or real-world applicability.", "explanation": "This question probes the dual function of benchmarks as both revealing and potentially misrepresenting language model abilities. It requires consideration of selection bias, representational adequacy, and the limitations of task coverage, as well as a critical assessment of how benchmark-driven evaluation frameworks might obscure nuanced or emergent capabilities not captured by standard datasets.", "question_token_count": 53, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 6, "avg_answer_token_count": 57, "choices": null}
{"context": "###### Coding\nCoding benchmarks measure a model\u2019s ability to generate and debug code. HumanEval\u00a0(Chen et\u00a0al., 2021) and MBPP\u00a0(Austin et\u00a0al., 2021) test code synthesis and debugging, whereas SWE-Bench\u00a0(Jimenez et\u00a0al., 2024; Yang et\u00a0al., 2025) addresses more advanced challenges. Competitive platforms like Codeforces\u00a0(Codeforces, 2025) and datasets such as Aider\u00a0(Aider, 2025) further probe dynamic problem solving.\n\n\n###### Instruction Following\nInstruction benchmarks evaluate a model\u2019s ability to comprehend and execute detailed directives. Datasets like IFEval\u00a0(Zhou et\u00a0al., 2023) and InfoBench\u00a0(Qin et\u00a0al., 2024) simulate real-world scenarios requiring clear, step-by-step guidance, with C-Eval\u00a0(Huang et\u00a0al., 2024) focusing on Chinese instructions.\n\n\n###### Reasoning\nUnderstanding and applying everyday knowledge is a key aspect of language comprehension. Benchmarks such as PIQA\u00a0(Bisk et\u00a0al., 2020), SIQA\u00a0(Sap et\u00a0al., 2019), HellaSwag\u00a0(Zellers et\u00a0al., 2019), and WinoGrande\u00a0(Sakaguchi et\u00a0al., 2021) are designed to assess a model\u2019s intuitive reasoning skills from multiple perspectives. In addition, academic challenge sets like ARC\u00a0(Clark et\u00a0al., 2018), OpenBookQA\u00a0(Mihaylov et\u00a0al., 2018), and CommonsenseQA\u00a0(Talmor et\u00a0al., 2018) push models further by requiring the integration of background knowledge with logical reasoning to arrive at plausible answers. C-SimpleQA\u00a0(He et\u00a0al., 2024) evaluates the factuality ability of language models to answer short questions in Chinese.\n", "topic": "The importance and challenges of developing and evaluating multilingual benchmarks, with specific reference to Chinese-focused datasets like C-Eval and C-SimpleQA.", "question": "In the context of language model evaluation, why is the development of benchmarks specifically targeting languages such as Chinese\u2014exemplified by datasets like C-Eval and C-SimpleQA\u2014crucial for both fair assessment and advancement of language technologies, and what are some unique challenges inherent to constructing and validating such multilingual benchmarks?", "answer": "They ensure fair and representative evaluation across languages, but face challenges like linguistic and cultural diversity, annotation consistency, and maintaining cross-lingual comparability.", "explanation": "The answer is correct because it identifies both the necessity of language-specific benchmarks for equitable evaluation across linguistic groups and the technical/cultural difficulties\u2014such as linguistic diversity, annotation standards, and cross-lingual transfer\u2014faced during their creation and validation.", "question_token_count": 65, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 7, "question_groundedness_score": 6, "avg_answer_token_count": 30, "choices": null}
{"context": "###### Limitations\nThe collection process typically requires significant human effort\u00a0(White et\u00a0al., 2024; Jain et\u00a0al., 2024), and continuous updates demand ongoing human involvement. Despite the popularity of temporal cutoffs, using recent information from competitions to evaluate LLMs can still lead to data contamination, as these problems are likely to be reused in future competitions\u00a0(Wu et\u00a0al., 2024). Verification is often overlooked in these live benchmarks\u00a0(White et\u00a0al., 2024).\n\n\n##### 4.3.2 Rule-Based Generation\nThis method synthesizes new test cases based on predefined rules, featuring an extremely low collision probability\u00a0(Zhu et\u00a0al., 2024a).\n\n\n###### Template-Based\nGSM-Symbolic\u00a0(Mirzadeh et\u00a0al., 2025) creates dynamic math benchmarks by using query templates with placeholder variables, which are randomly filled to generate diverse problem instances.\n\nMathador-LM(Kurtic et\u00a0al., 2024) generates evaluation queries by adhering to the rules of Mathador games(Puma et\u00a0al., 2023) and varying input numbers.\n\nMMLU-CF\u00a0(Zhao et\u00a0al., 2024) follows the template of multiple-choice questions and generates novel samples by shuffling answer choices and randomly replacing incorrect options with \"None of the other choices.\"\n", "topic": "The issue of verification in live benchmarking and its impact on benchmark reliability.", "question": "How does the frequent omission of verification processes in live benchmarks fundamentally threaten the reliability of LLM evaluations, and what systemic consequences might arise from this oversight?", "answer": "It allows errors and data contamination to persist, leading to unreliable evaluation results and undermining trust in LLM benchmarks.", "explanation": "The answer addresses how unverified benchmarks may introduce errors, inconsistencies, or data contamination, leading to misleading evaluation results and eroding trust in LLM performance claims. It also considers broader impacts on the research community and downstream applications that rely on these evaluations.", "question_token_count": 30, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 23, "choices": null}
{"context": "###### Table-Based\nS3Eval\u00a0(Lei et\u00a0al., 2024) evaluates the reasoning ability of LLMs by assessing their accuracy in executing random SQL queries on randomly generated SQL tables.\n\n\n###### Graph-Based\nIn this category, LLMs are evaluated with randomly generated graphs.\n\nFor instance, DyVal\u00a0(Zhu et\u00a0al., 2024a) assesses the reasoning capabilities of LLMs using randomly generated directed acyclic graphs (DAGs).\n\nThe framework first constructs DAGs with varying numbers of nodes and edges to control task difficulty.\n\nThese DAGs are then transformed into natural language descriptions through rule-based conversion. Finally, the LLM is evaluated by querying it for the value of the root node.\n\nSimilarly, NPHardEval\u00a0(Fan et\u00a0al., 2024) evaluates the reasoning ability of LLMs on well-known P and NP problems, such as the Traveling Salesman Problem (TSP).\n\nRandom graphs of varying sizes are synthesized as inputs for TSP to assess the LLM\u2019s performance.\n\nXie et\u00a0al. (2024) automatically constructs Knights and Knaves puzzles with random reasoning graph.\n", "topic": "The underlying assumptions and potential limitations of using random generation in benchmarking LLM reasoning performance.", "question": "What are the key risks associated with relying on randomly generated tasks\u2014such as SQL tables, graphs, or logic puzzles\u2014for benchmarking LLM reasoning, and how might these risks impact the validity and interpretability of benchmark results?", "answer": "Randomly generated tasks may not reflect real-world distributions or complexities, potentially resulting in unrepresentative benchmarks that limit ecological validity and obscure meaningful interpretation of LLM reasoning abilities.", "explanation": "The answer identifies that random generation may fail to represent real-world complexity, potentially leading to unrepresentative or trivial cases, and that this can undermine both the ecological validity of benchmarks and the ability to diagnose specific reasoning strengths or weaknesses in LLMs.", "question_token_count": 45, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 9, "question_groundedness_score": 9, "avg_answer_token_count": 34, "choices": null}
{"context": "##### 4.2.6 Interpretability\nDynamic benchmarking generates large volumes of transformed data, making manual verification costly and challenging. To ensure correctness, the transformation process must be interpretable. Interpretable transformations reduce the need for extensive manual validation, lowering costs. Rule-based or manually crafted transformations are inherently interpretable, while LLM-assisted transformations depend on the model\u2019s transparency and traceability. In such cases, additional mechanisms like explainability tools, or human-in-the-loop validation may be needed to ensure reliability and correctness.\n\n\n#### 4.3 Existing Work\nBuilding on the task formats of static benchmarks, dynamic benchmarks have been introduced to assess LLM capabilities while minimizing data contamination and ensuring fairness.\n\nTable\u00a02 summarizes recent dynamic benchmarks for LLM evaluation.\n\nDynamic benchmarks can be categorized into four types based on their construction process: temporal cutoff, rule-based generation, LLM-based generation, and hybrid approaches.\n\nTemporal cutoff follows a data collection process similar to static benchmarks, with the key difference being that data is gathered from newly released information.\n\nRule-based and LLM-based generation approaches create novel evaluation data points using predefined rules or by leveraging the strong generative capabilities of LLMs.\n\nFinally, hybrid approaches combine the idea of these different approaches.\n", "topic": "The role of interpretability in reducing manual validation costs during dynamic benchmarking data transformation processes.", "question": "Explain how the interpretability of transformation processes in dynamic benchmarking directly influences the extent and cost of manual validation required, and discuss the potential consequences of employing less interpretable, LLM-assisted transformations without additional reliability mechanisms.", "answer": "Interpretable transformations enable efficient, low-cost manual validation by making errors and logic transparent, whereas less interpretable LLM-assisted transformations increase validation burden and risk unless supplemented with explainability tools or human oversight.", "explanation": "This question requires the expert to connect the interpretability of transformation processes with their impact on manual validation effort and cost, and to analyze the risks and needs that arise when using less interpretable LLM-based transformations. The answer integrates knowledge of technical process transparency, validation workflows, and the implications for reliability in large-scale data transformation.", "question_token_count": 42, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 6, "question_groundedness_score": 10, "avg_answer_token_count": 41, "choices": null}
{"context": "### 1 Introduction\nThe field of natural language processing (NLP) has advanced rapidly in recent years, fueled by breakthroughs in Large Language Models (LLMs) such as GPT-4, Claude3, and DeepSeek\u00a0Achiam et\u00a0al. (2023); Liu et\u00a0al. (2024); Wan et\u00a0al. (2023). Trained on vast amounts of Internet-sourced data, these models have demonstrated remarkable capabilities across various applications, including code generation, text summarization, and mathematical reasoning\u00a0Codeforces (2025); Hu et\u00a0al. (2024).\n\nTo develop and enhance LLMs, beyond advancements in model architectures and training algorithms, a crucial area of research focuses on effectively evaluating their intelligence. Traditionally, LLM evaluation has relied on static benchmarking, which involves using carefully curated human-crafted datasets and assessing model performance with appropriate metrics\u00a0Wang (2018); Achiam et\u00a0al. (2023); Gunasekar et\u00a0al. (2023).\n\nFor example, in 2021, OpenAI introduced the HumanEval\u00a0Chen et\u00a0al. (2021) dataset to benchmark the code generation capabilities of LLMs; HumanEval has since become a widely used standard for this purpose.\n\nHowever, because these static benchmarks are released on the Internet for transparent evaluation, and LLMs gather as much data as possible from the Internet for training, potential data contamination is unavoidable\u00a0Magar and Schwartz (2022); Deng et\u00a0al. (2024b); Li et\u00a0al. (2024d); Sainz et\u00a0al. (2024); Balloccu et\u00a0al. (2024). Data contamination occurs when benchmark data is inadvertently included in the training phase of language models, leading to an inflated and misleading assessment of their performance. While this issue has been recognized for some time\u2014stemming from the fundamental machine learning principle of separating training and test sets\u2014it has become even more critical with the advent of LLMs. These models often scrape vast amounts of publicly available data from the Internet, significantly increasing the likelihood of contamination\u00a0Achiam et\u00a0al. (2023); Liu et\u00a0al. (2024). Furthermore, due to privacy and commercial concerns, tracing the exact training data for these models is challenging, if not impossible, complicating efforts to detect and mitigate potential contamination.\n\nFigure 1: The progress of benchmarking LLM\n\n<!-- \ud83d\uddbc\ufe0f\u274c Image not available. Please use `PdfPipelineOptions(generate_picture_images=True)` -->\n\nTo mitigate the risk of data contamination in LLM benchmarking, researchers have proposed various methods to enhance static approaches, such as data encryption\u00a0Jacovi et\u00a0al. (2023) and post-hoc contamination detection Shi et\u00a0al. (2024). However, due to the inherent limitations of static methods, researchers have introduced new dynamic benchmarking schema (Fig.\u00a01 illustrates the evolution from static to dynamic benchmarking).\n\nOne of the dynamic benchmarking methods involves continuously updating benchmark datasets based on the timestamps of LLM training to minimize contamination\u00a0White et\u00a0al. (2024); Jain et\u00a0al. (2024). Another method focuses on regenerating benchmark data to reconstruct original benchmarks\u00a0Chen et\u00a0al. (2024); Zhou et\u00a0al. (2025); Mirzadeh et\u00a0al. (2025), thereby reducing the likelihood of contamination.\n\nDespite the numerous approaches proposed for transparent LLM benchmarking, no systematic survey has summarized the rapid progress of dynamic benchmarking methods. Existing literature reviews primarily focus on post-hoc detection of data contamination and do not address emerging dynamic benchmarking strategies\u00a0Deng et\u00a0al. (2024a); Ravaut et\u00a0al. (2024). Moreover, no existing work discusses criteria for evaluating dynamic benchmarks themselves. Additionally, these reviews often lack a comprehensive discussion of the strengths and limitations of each method.\n\nTo bridge this gap, we first conduct a systematic survey of benchmarking methods for LLMs designed to mitigate the risk of data contamination, covering both static and dynamic benchmarks. We summarize state-of-the-art methods and provide an in-depth discussion of their strengths and limitations. Furthermore, we are the first to propose a set of criteria for evaluating dynamic benchmarks. Our study reveals that existing dynamic benchmarks do not fully satisfy these proposed criteria, implying the imperfection of current design. We hope that our criteria will provide valuable insights for the future design and standardization of dynamic benchmarking methods.\n\nFigure 2:  Taxonomy of research on benchmarking LLMs\n\n<!-- \ud83d\uddbc\ufe0f\u274c Image not available. Please use `PdfPipelineOptions(generate_picture_images=True)` -->\n\nThe paper is structured as illustrated in Fig.\u00a02. We begin with an overview of data contamination (\u00a72), establishing the necessary background. Next, we provide a comprehensive review of static benchmarking methods and examine how existing research has improved them to mitigate potential data contamination (\u00a73). We then outline key criteria for an effective dynamic benchmark and introduce existing dynamic benchmarking approaches (\u00a74). Finally, in \u00a75, we reflect on insights from prior work, summarize current challenges, and explore future research directions.\n\nTable 1: Examples of Data Contamination in LLMs\n\n<!-- \ud83d\uddbc\ufe0f\u274c Image not available. Please use `PdfPipelineOptions(generate_picture_images=True)` -->\n", "topic": "The challenges in detecting and mitigating data contamination due to privacy, commercial concerns, and the opacity of LLM training data.", "question": "Why do privacy, commercial concerns, and the opacity of LLM training data collectively make both detection and mitigation of data contamination in LLM benchmarks fundamentally limited, despite advances in static and dynamic benchmarking methods?", "answer": "Because these factors prevent access to or disclosure of exact training data, making it impossible to verify whether benchmark items were seen during training, thus undermining both detection and mitigation efforts.", "explanation": "The answer is correct because it synthesizes the text's argument that the inability to audit or trace the exact training data\u2014due to privacy and proprietary restrictions\u2014prevents reliable detection of contamination and limits the effectiveness of any mitigation strategy, regardless of benchmark design.", "question_token_count": 39, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 6, "question_groundedness_score": 10, "avg_answer_token_count": 36, "choices": null}
{"context": "###### Table-Based\nS3Eval\u00a0(Lei et\u00a0al., 2024) evaluates the reasoning ability of LLMs by assessing their accuracy in executing random SQL queries on randomly generated SQL tables.\n\n\n###### Graph-Based\nIn this category, LLMs are evaluated with randomly generated graphs.\n\nFor instance, DyVal\u00a0(Zhu et\u00a0al., 2024a) assesses the reasoning capabilities of LLMs using randomly generated directed acyclic graphs (DAGs).\n\nThe framework first constructs DAGs with varying numbers of nodes and edges to control task difficulty.\n\nThese DAGs are then transformed into natural language descriptions through rule-based conversion. Finally, the LLM is evaluated by querying it for the value of the root node.\n\nSimilarly, NPHardEval\u00a0(Fan et\u00a0al., 2024) evaluates the reasoning ability of LLMs on well-known P and NP problems, such as the Traveling Salesman Problem (TSP).\n\nRandom graphs of varying sizes are synthesized as inputs for TSP to assess the LLM\u2019s performance.\n\nXie et\u00a0al. (2024) automatically constructs Knights and Knaves puzzles with random reasoning graph.\n", "topic": "The process and rationale behind using randomly generated directed acyclic graphs (DAGs) in DyVal to assess LLM reasoning, including task difficulty calibration via graph complexity.", "question": "How does the use of randomly generated directed acyclic graphs (DAGs) in DyVal specifically facilitate fine-grained calibration of reasoning task difficulty for LLMs, and what are the underlying advantages of this approach for evaluating general reasoning capabilities compared to using fixed graph structures?", "answer": "By varying the number of nodes and edges in randomly generated DAGs, DyVal precisely adjusts task complexity, enabling scalable and unbiased measurement of LLM reasoning abilities; this randomization prevents overfitting to specific structures and better evaluates general reasoning competence.", "explanation": "The answer is correct because it addresses both the technical mechanism\u2014varying the number of nodes and edges in randomly generated DAGs to control complexity\u2014and the rationale for randomization and DAG selection, which together enable scalable, unbiased, and robust assessment of LLM reasoning that is not limited by overfitting to fixed patterns.", "question_token_count": 52, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 7, "question_groundedness_score": 10, "avg_answer_token_count": 47, "choices": null}
{"context": "##### 4.2.2 Scalability\nThe next evaluation criterion is scalability, which measures the ability of dynamic benchmarking methods to generate large-scale benchmark datasets. A smaller dataset can introduce more statistical errors during the benchmarking process. Therefore, an optimal dynamic benchmark should generate a larger dataset while minimizing associated costs. The scalability of a dynamic benchmark is quantified as:\n\nThis represents the expectation over the entire transformation space, where \u2225Ti\u2062(\ud835\udc9f)\u2225delimited-\u2225\u2225subscript\ud835\udc47\ud835\udc56\ud835\udc9f\\lVert T\\_{i}(\\mathcal{D})\\rVert\u2225 italic\\_T start\\_POSTSUBSCRIPT italic\\_i end\\_POSTSUBSCRIPT ( caligraphic\\_D ) \u2225 is the size of the transformed dataset, and \u2225\ud835\udc9f\u2225delimited-\u2225\u2225\ud835\udc9f\\lVert\\mathcal{D}\\rVert\u2225 caligraphic\\_D \u2225 is the size of the original dataset. The function Cost\u2062(\u22c5)Cost\u22c5\\textsf{Cost}(\\cdot)Cost ( \u22c5 ) measures the cost associated with the transformation process, which could include monetary cost, time spent, or manual effort according to the detailed scenarios.\n\nThis equation could be interpreted as the proportion of data that can be generated per unit cost.\n", "topic": "Criteria for an optimal dynamic benchmark regarding scalability and associated cost minimization.", "question": "In designing a dynamic benchmarking method with optimal scalability, how should one balance the maximization of generated dataset size against the minimization of transformation cost, and what efficiency metric best encapsulates this trade-off?", "answer": "Maximize the expected ratio of transformed dataset size to transformation cost.", "explanation": "The correct answer synthesizes the quantitative and conceptual criteria outlined in the context, emphasizing that optimal scalability is not achieved by maximizing dataset size alone but by maximizing the expected ratio of transformed dataset size to transformation cost, thus generating the most data per unit cost.", "question_token_count": 39, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 7, "question_groundedness_score": 10, "avg_answer_token_count": 14, "choices": null}
{"context": "###### Limitations\nThe pre-defined rules may limit sample diversity, and publicly available rule-generated data may increase the risk of in-distribution contamination during training\u00a0(Tu et\u00a0al., 2024).\n\n\n###### Benchmark Rewriting\nIn this category, LLMs are employed to rewrite samples from existing static benchmarks, which may be contaminated.\n\nAuto-Dataset\u00a0(Ying et\u00a0al., 2024) prompts LLMs to generate two types of new samples: one that retains the stylistics and essential knowledge of the original, and another that presents related questions at different cognitive levels\u00a0(Bloom et\u00a0al., 1956).\n\nStructEval\u00a0(Cao et\u00a0al., 2024) expands on examined concepts from the original benchmark by using LLMs and knowledge graphs to develop a series of extended questions.\n\nITD\u00a0(Zhu et\u00a0al., 2024c) utilizes a contamination detector\u00a0(Shi et\u00a0al., 2024) to identify contaminated samples in static benchmarks and then prompts an LLM to rewrite them while preserving their difficulty levels.\n\nVarBench\u00a0(Qian et\u00a0al., 2024) prompts LLMs to identify and replace variables in samples from existing benchmarks, generating new samples.\n", "topic": "The methodology of Auto-Dataset for LLM-driven benchmark rewriting, including stylistic and cognitive-level sample generation.", "question": "How does the Auto-Dataset methodology leverage LLMs to generate both stylistically faithful and cognitively diverse benchmark samples, and what are the potential implications of this dual approach for mitigating in-distribution contamination and enhancing benchmark robustness?", "answer": "Auto-Dataset prompts LLMs to generate samples that either preserve the original benchmark's style and knowledge or create related questions at different cognitive levels, thereby increasing sample diversity and reducing contamination risk, which in turn improves benchmark robustness.", "explanation": "The answer should reference Auto-Dataset's dual-sample generation strategy\u2014retaining original style and essential knowledge in one type of sample, and generating related questions at varying cognitive levels in another. It should also discuss how this addresses contamination by diversifying the data and mitigating overlap with publicly available datasets, thereby enhancing the robustness and validity of benchmark evaluations.", "question_token_count": 44, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 45, "choices": null}
{"context": "###### Limitations\nThe quality of LLM-generated samples is often uncertain. For example, human annotation of LatestEval\u00a0(Li et\u00a0al., 2023d) shows that about 10% of samples suffer from faithfulness and answerability issues, compromising evaluation reliability. Moreover, in interactive evaluation, reliability largely depends on the interviewer LLM, which generates questions and assigns scores.\n\n\n##### 4.3.4 Hybrid Generation\nLatestEval\u00a0(Li et\u00a0al., 2023d) combines temporal cutoff and LLM-based generation to automatically generate reading comprehension datasets using LLMs on real-time content from sources such as BBC.\n\nDARG\u00a0(Zhang et\u00a0al., 2024b) integrates LLM-based and graph-based generation. It first extracts reasoning graphs from existing benchmarks and then perturbs them into new samples using predefined rules.\n\nC2LEVA\u00a0(Li et\u00a0al., 2024c) incorporates all three contamination-free construction methods to build a contamination-free bilingual evaluation.\n\n\n### 5 Discussions\nKey Insights.\n\nOur analysis highlights two key insights regarding data contamination in LLM benchmarking. First, static benchmarks become less effective as training corpora grow. The probability of contamination increases with Prcontam\u221d|\ud835\udc9ftrain|\u22c5|\ud835\udc9ftest|\u22121proportional-tosubscriptPrcontam\u22c5subscript\ud835\udc9ftrainsuperscriptsubscript\ud835\udc9ftest1\\text{Pr}\\_{\\text{contam}}\\propto|\\mathcal{D}\\_{\\text{train}}|\\cdot|\\mathcal{D}\\_%\n\n{\\text{test}}|^{-1}Pr start\\_POSTSUBSCRIPT contam end\\_POSTSUBSCRIPT \u221d | caligraphic\\_D start\\_POSTSUBSCRIPT train end\\_POSTSUBSCRIPT | \u22c5 | caligraphic\\_D start\\_POSTSUBSCRIPT test end\\_POSTSUBSCRIPT | start\\_POSTSUPERSCRIPT - 1 end\\_POSTSUPERSCRIPT, rendering traditional benchmarks outdated for models trained on web-scale data. Data privacy and commercial concerns further complicate contamination issues.\n\nSecond, traditional static methods fall short in preventing contamination, prompting the creation of dynamic benchmarks. However, our study identifies a lack of standardized criteria for evaluating these dynamic benchmarks. We hope our proposed criteria will offer valuable insights and guide the development of more effective benchmarks.\n\nCurrent Challenges.\n\nStatic benchmarking methods face challenges due to a lack of transparency (e.g., label protection) and high assumptions about contaminated models (e.g., post-hoc detection). Although dynamic benchmarks address these limitations, they introduce new issues, such as balancing correctness with scalability. We also observed that some dynamic benchmarks neglect complexity control, resulting in inefficiencies in evaluation.\n\nFuture Directions.\n\nDynamic benchmarking offers a new approach for evaluating LLMs, but our study reveals a lack of standardized criteria. Future efforts should focus on standardizing these criteria for dynamic benchmarks.\n", "topic": "Critically analyze the limitations of LLM-generated samples in terms of faithfulness and answerability, and discuss their implications for evaluation reliability.", "question": "In the context of LLM benchmarking, how do deficiencies in faithfulness and answerability of LLM-generated samples undermine evaluation reliability, and what are the broader implications of these issues for the validity of model assessment and benchmark development?", "answer": "They introduce unreliable or misleading evaluation data, compromising metric trustworthiness, potentially misrepresenting model capabilities, and undermining the validity and development of robust benchmarks.", "explanation": "The correct answer requires understanding that unfaithful or unanswerable samples can yield misleading evaluation results, reduce trust in reported metrics, and can compromise the fairness and effectiveness of benchmarks, thus affecting model selection and research progress.", "question_token_count": 44, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 32, "choices": null}
{"context": "### Abstract\nData contamination has received increasing attention in the era of large language models (LLMs) due to their reliance on vast Internet-derived training corpora. To mitigate the risk of potential data contamination, LLM benchmarking has undergone a transformation from static to dynamic benchmarking.\n\nIn this work, we conduct an in-depth analysis of existing static to dynamic benchmarking methods aimed at reducing data contamination risks. We first examine methods that enhance static benchmarks and identify their inherent limitations. We then highlight a critical gap\u2014the lack of standardized criteria for evaluating dynamic benchmarks. Based on this observation, we propose a series of optimal design principles for dynamic benchmarking and analyze the limitations of existing dynamic benchmarks.\n\nThis survey provides a concise yet comprehensive overview of recent advancements in data contamination research, offering valuable insights and a clear guide for future research efforts.\n\nWe maintain a GitHub repository to continuously collect both static and dynamic benchmarking methods for LLMs. The repository can be found at this link\u00a0111GitHub Link: Static-to-Dynamic LLM Benchmarking.\n", "topic": "Analysis of the limitations and challenges faced by current dynamic benchmarking approaches.", "question": "In the context of evaluating large language models, what are the fundamental challenges posed by the lack of standardized criteria in dynamic benchmarking, and how might these challenges undermine the effectiveness and reliability of contamination mitigation efforts?", "answer": "Without standardized criteria, dynamic benchmarking approaches risk inconsistent implementation, unverified contamination reduction, and unreliable comparison across studies, ultimately compromising the effectiveness and reliability of data contamination mitigation.", "explanation": "This question requires the respondent to demonstrate deep understanding of how the absence of standardized evaluation criteria complicates the assessment and comparison of dynamic benchmarks, potentially allowing contamination or inconsistent results to persist and thereby threatening the credibility of LLM performance evaluations.", "question_token_count": 41, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 34, "choices": null}
{"context": "#### 4.2 Evaluation Criteria\nWhile many dynamic benchmarking methods have been proposed to evaluate LLMs, the evaluation criteria for assessing these benchmarks themselves remain non-standardized. To this end, we propose the following evaluation criteria to assess the quality of a dynamic benchmarking algorithm.\n\n\n##### 4.2.1 Correctness\nThe first criterion for evaluating the quality of dynamic benchmarking is Correctness. If the correctness of the generated dataset cannot be guaranteed, the benchmark may provide a false sense of reliability when applied to benchmarking LLMs, leading to misleading evaluations.\n\nWe quantify the correctness of dynamic benchmarks as:\n\nwhere \ud835\udcb3isubscript\ud835\udcb3\ud835\udc56\\mathcal{X}\\_{i}caligraphic\\_X start\\_POSTSUBSCRIPT italic\\_i end\\_POSTSUBSCRIPT and \ud835\udcb4isubscript\ud835\udcb4\ud835\udc56\\mathcal{Y}\\_{i}caligraphic\\_Y start\\_POSTSUBSCRIPT italic\\_i end\\_POSTSUBSCRIPT represent the input and output of the it\u2062hsuperscript\ud835\udc56\ud835\udc61\u210ei^{th}italic\\_i start\\_POSTSUPERSCRIPT italic\\_t italic\\_h end\\_POSTSUPERSCRIPT transformation, respectively. The function \ud835\udca2\u2062(\u22c5)\ud835\udca2\u22c5\\mathcal{G}(\\cdot)caligraphic\\_G ( \u22c5 ) is an oracle that returns the ground truth of its input, ensuring an objective reference for correctness evaluation. For example, the function \ud835\udca2\u2062(\u22c5)\ud835\udca2\u22c5\\mathcal{G}(\\cdot)caligraphic\\_G ( \u22c5 ) could be a domain-specific an annotator.\n\nThis equation can be interpreted as the expected alignment between the transformed dataset\u2019s outputs and their corresponding ground truth values, measured using the scoring function \ud835\udcae\u2062(\u22c5)\ud835\udcae\u22c5\\mathcal{S}(\\cdot)caligraphic\\_S ( \u22c5 ). A higher correctness score indicates that the dynamic benchmark maintains correctness to the ground truth.\n", "topic": "The definition and operationalization of the oracle function for establishing ground truth, including considerations for domain specificity and objectivity.", "question": "In designing a dynamic benchmarking system for LLMs, how can the oracle function \ud835\udca2(\u22c5) be rigorously defined and operationalized to ensure both objective and domain-specific ground truth, and what are the primary challenges in maintaining these properties across diverse domains?", "answer": "The oracle function should be defined as an authoritative, unbiased mapping from input to ground truth, operationalized by employing domain experts or validated automated systems tailored to each domain; primary challenges include ensuring annotator consistency, minimizing subjective bias, and adapting to varying standards of ground truth across different domains.", "explanation": "The answer must address both the formal definition of the oracle (as a function providing ground truth) and practical implementation (such as expert annotators or automated systems), discussing how objectivity is maintained and how domain specificity is handled, along with challenges like subjectivity, annotation quality, and inter-domain variability.", "question_token_count": 51, "answer_correctness_score": 8, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 8, "avg_answer_token_count": 58, "choices": null}
{"context": "### 1 Introduction\nThe field of natural language processing (NLP) has advanced rapidly in recent years, fueled by breakthroughs in Large Language Models (LLMs) such as GPT-4, Claude3, and DeepSeek\u00a0Achiam et\u00a0al. (2023); Liu et\u00a0al. (2024); Wan et\u00a0al. (2023). Trained on vast amounts of Internet-sourced data, these models have demonstrated remarkable capabilities across various applications, including code generation, text summarization, and mathematical reasoning\u00a0Codeforces (2025); Hu et\u00a0al. (2024).\n\nTo develop and enhance LLMs, beyond advancements in model architectures and training algorithms, a crucial area of research focuses on effectively evaluating their intelligence. Traditionally, LLM evaluation has relied on static benchmarking, which involves using carefully curated human-crafted datasets and assessing model performance with appropriate metrics\u00a0Wang (2018); Achiam et\u00a0al. (2023); Gunasekar et\u00a0al. (2023).\n\nFor example, in 2021, OpenAI introduced the HumanEval\u00a0Chen et\u00a0al. (2021) dataset to benchmark the code generation capabilities of LLMs; HumanEval has since become a widely used standard for this purpose.\n\nHowever, because these static benchmarks are released on the Internet for transparent evaluation, and LLMs gather as much data as possible from the Internet for training, potential data contamination is unavoidable\u00a0Magar and Schwartz (2022); Deng et\u00a0al. (2024b); Li et\u00a0al. (2024d); Sainz et\u00a0al. (2024); Balloccu et\u00a0al. (2024). Data contamination occurs when benchmark data is inadvertently included in the training phase of language models, leading to an inflated and misleading assessment of their performance. While this issue has been recognized for some time\u2014stemming from the fundamental machine learning principle of separating training and test sets\u2014it has become even more critical with the advent of LLMs. These models often scrape vast amounts of publicly available data from the Internet, significantly increasing the likelihood of contamination\u00a0Achiam et\u00a0al. (2023); Liu et\u00a0al. (2024). Furthermore, due to privacy and commercial concerns, tracing the exact training data for these models is challenging, if not impossible, complicating efforts to detect and mitigate potential contamination.\n\nFigure 1: The progress of benchmarking LLM\n\n<!-- \ud83d\uddbc\ufe0f\u274c Image not available. Please use `PdfPipelineOptions(generate_picture_images=True)` -->\n\nTo mitigate the risk of data contamination in LLM benchmarking, researchers have proposed various methods to enhance static approaches, such as data encryption\u00a0Jacovi et\u00a0al. (2023) and post-hoc contamination detection Shi et\u00a0al. (2024). However, due to the inherent limitations of static methods, researchers have introduced new dynamic benchmarking schema (Fig.\u00a01 illustrates the evolution from static to dynamic benchmarking).\n\nOne of the dynamic benchmarking methods involves continuously updating benchmark datasets based on the timestamps of LLM training to minimize contamination\u00a0White et\u00a0al. (2024); Jain et\u00a0al. (2024). Another method focuses on regenerating benchmark data to reconstruct original benchmarks\u00a0Chen et\u00a0al. (2024); Zhou et\u00a0al. (2025); Mirzadeh et\u00a0al. (2025), thereby reducing the likelihood of contamination.\n\nDespite the numerous approaches proposed for transparent LLM benchmarking, no systematic survey has summarized the rapid progress of dynamic benchmarking methods. Existing literature reviews primarily focus on post-hoc detection of data contamination and do not address emerging dynamic benchmarking strategies\u00a0Deng et\u00a0al. (2024a); Ravaut et\u00a0al. (2024). Moreover, no existing work discusses criteria for evaluating dynamic benchmarks themselves. Additionally, these reviews often lack a comprehensive discussion of the strengths and limitations of each method.\n\nTo bridge this gap, we first conduct a systematic survey of benchmarking methods for LLMs designed to mitigate the risk of data contamination, covering both static and dynamic benchmarks. We summarize state-of-the-art methods and provide an in-depth discussion of their strengths and limitations. Furthermore, we are the first to propose a set of criteria for evaluating dynamic benchmarks. Our study reveals that existing dynamic benchmarks do not fully satisfy these proposed criteria, implying the imperfection of current design. We hope that our criteria will provide valuable insights for the future design and standardization of dynamic benchmarking methods.\n\nFigure 2:  Taxonomy of research on benchmarking LLMs\n\n<!-- \ud83d\uddbc\ufe0f\u274c Image not available. Please use `PdfPipelineOptions(generate_picture_images=True)` -->\n\nThe paper is structured as illustrated in Fig.\u00a02. We begin with an overview of data contamination (\u00a72), establishing the necessary background. Next, we provide a comprehensive review of static benchmarking methods and examine how existing research has improved them to mitigate potential data contamination (\u00a73). We then outline key criteria for an effective dynamic benchmark and introduce existing dynamic benchmarking approaches (\u00a74). Finally, in \u00a75, we reflect on insights from prior work, summarize current challenges, and explore future research directions.\n\nTable 1: Examples of Data Contamination in LLMs\n\n<!-- \ud83d\uddbc\ufe0f\u274c Image not available. Please use `PdfPipelineOptions(generate_picture_images=True)` -->\n", "topic": "Strategies and methods for mitigating data contamination in static benchmarks, such as data encryption and post-hoc detection.", "question": "In the context of static LLM benchmarking, what are the principal limitations of data encryption and post-hoc contamination detection as strategies for mitigating data contamination, and why do these limitations persist despite their adoption?", "answer": "Both methods are limited because static benchmarks are publicly accessible, making it difficult to prevent inclusion in training corpora; data encryption can be circumvented or may hinder benchmark utility, while post-hoc detection is hampered by the opacity of proprietary training data and cannot guarantee comprehensive detection.", "explanation": "This question is correct because it requires the expert to synthesize the technical challenges and inherent shortcomings of both data encryption and post-hoc contamination detection in static benchmarking, as highlighted in the text, and to articulate why these strategies cannot fully resolve contamination risks given the open and vast nature of LLM training data.", "question_token_count": 39, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 7, "question_groundedness_score": 9, "avg_answer_token_count": 55, "choices": null}
{"context": "##### 4.2.3 Collision\nOne of the main motivations for dynamic benchmarking is to address the challenge of balancing transparent benchmarking with the risk of data contamination. Since the benchmarking algorithm is publicly available, an important concern arises: If these benchmarks are used to train LLM, can they still reliably reflect the true capabilities of LLMs?\n\nTo evaluate the robustness of a dynamic benchmark against this challenge, we introduce the concept of collision in dynamic benchmarking. Collision refers to the extent to which different transformations of the benchmark dataset produce overlapping data, potentially limiting the benchmark\u2019s ability to generate novel and diverse test cases. To quantify this, we propose the following metrics:\n\nCollision Rate measures the percentage of overlap between two independently transformed versions of the benchmark dataset, indicating how much poential contamination among two trials. Repeat Trials quantifies the expected number of transformation trials required to fully regenerate an existing transformed dataset Ti\u2062(\ud835\udc9f)subscript\ud835\udc47\ud835\udc56\ud835\udc9fT\\_{i}(\\mathcal{D})italic\\_T start\\_POSTSUBSCRIPT italic\\_i end\\_POSTSUBSCRIPT ( caligraphic\\_D ), providing insight into the benchmark\u2019s ability to produce novel variations.\n\nThese metrics help assess whether a dynamic benchmark remains effective in evaluating LLM capabilities, even when exposed to potential training data contamination.\n", "topic": "How collision metrics can be used to assess the robustness and effectiveness of dynamic benchmarks in the presence of potential training data contamination.", "question": "How do the metrics of Collision Rate and Repeat Trials jointly inform the assessment of a dynamic benchmark's robustness and continued effectiveness in evaluating large language models, particularly when prior benchmark data may have contaminated model training?", "answer": "They reveal whether the benchmark can continually generate novel, uncontaminated test cases despite prior exposure, ensuring reliable evaluation.", "explanation": "Collision Rate quantifies the extent of overlap between different transformations, where a low rate indicates more novel test cases, while Repeat Trials measures how difficult it is to reproduce a previous transformed dataset. Together, a low Collision Rate and a high number of Repeat Trials signify that the benchmark can produce sufficiently novel and diverse test sets, maintaining its evaluative effectiveness even if some data has contaminated model training.", "question_token_count": 41, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 25, "choices": null}
{"context": "###### Safety\nSafety benchmarks are essential for evaluating the robustness of LLM\u2019s ability to generate non-toxic and ethically aligned content. Datasets such as RealToxicityPrompts\u00a0(Gehman et\u00a0al., 2020) and ToxiGen\u00a0(Hartvigsen et\u00a0al., 2022) assess resilience against producing harmful outputs.\n\nBy providing a controlled environment to measure these aspects, safety benchmarks play a critical role in guiding the development of models that are not only powerful outputs but also responsible and trustworthy for real-world applications.\n\n\n###### Language\nLanguage benchmarks assess the LLMs\u2019 proficiency in specific languages.\n\nGLUE\u00a0(Wang, 2018) and SuperGLUE\u00a0(Wang et\u00a0al., 2019) cover tasks from sentiment analysis to language inference, while CLUE\u00a0(Xu et\u00a0al., 2020) targets Chinese language.\n\nTypo-fixing\u00a0(Suzgun et\u00a0al., 2022) is also widely used.\n\n\n###### Reading Comprehension\nReading comprehension tasks test a model\u2019s ability to extract and infer information from text. Benchmarks like SQuAD\u00a0(Rajpurkar et\u00a0al., 2018), QuAC\u00a0(Choi et\u00a0al., 2018), and BoolQ\u00a0(Clark et\u00a0al., 2019) challenge models to understand passages and draw logical conclusions.\n", "topic": "Comparative analysis of RealToxicityPrompts and ToxiGen datasets for evaluating toxicity and harmful content generation in LLMs.", "question": "In the context of evaluating large language models for toxicity and harmful content generation, what are the primary methodological and coverage distinctions between the RealToxicityPrompts and ToxiGen datasets, and how do these differences influence their respective effectiveness in benchmarking LLM safety?", "answer": "RealToxicityPrompts tests models with diverse prompts for spontaneous toxicity and measures prompt sensitivity, while ToxiGen uses adversarial, counterfactual examples to assess detection of subtle and overt toxicity, making the former effective for general robustness and the latter for nuanced, bias-sensitive evaluation.", "explanation": "The answer correctly distinguishes RealToxicityPrompts (which focuses on a broad set of prompts to test for spontaneous toxic output generation and measures model sensitivity to prompt framing) from ToxiGen (which is constructed with adversarial pairs and counterfactuals to evaluate a model\u2019s ability to distinguish subtle and overt toxicity, particularly for social bias and hate speech), highlighting how these differences lead to complementary strengths in assessing robustness and nuanced ethical alignment.", "question_token_count": 52, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 6, "avg_answer_token_count": 56, "choices": null}
{"context": "###### Limitations\nThe quality of LLM-generated samples is often uncertain. For example, human annotation of LatestEval\u00a0(Li et\u00a0al., 2023d) shows that about 10% of samples suffer from faithfulness and answerability issues, compromising evaluation reliability. Moreover, in interactive evaluation, reliability largely depends on the interviewer LLM, which generates questions and assigns scores.\n\n\n##### 4.3.4 Hybrid Generation\nLatestEval\u00a0(Li et\u00a0al., 2023d) combines temporal cutoff and LLM-based generation to automatically generate reading comprehension datasets using LLMs on real-time content from sources such as BBC.\n\nDARG\u00a0(Zhang et\u00a0al., 2024b) integrates LLM-based and graph-based generation. It first extracts reasoning graphs from existing benchmarks and then perturbs them into new samples using predefined rules.\n\nC2LEVA\u00a0(Li et\u00a0al., 2024c) incorporates all three contamination-free construction methods to build a contamination-free bilingual evaluation.\n\n\n### 5 Discussions\nKey Insights.\n\nOur analysis highlights two key insights regarding data contamination in LLM benchmarking. First, static benchmarks become less effective as training corpora grow. The probability of contamination increases with Prcontam\u221d|\ud835\udc9ftrain|\u22c5|\ud835\udc9ftest|\u22121proportional-tosubscriptPrcontam\u22c5subscript\ud835\udc9ftrainsuperscriptsubscript\ud835\udc9ftest1\\text{Pr}\\_{\\text{contam}}\\propto|\\mathcal{D}\\_{\\text{train}}|\\cdot|\\mathcal{D}\\_%\n\n{\\text{test}}|^{-1}Pr start\\_POSTSUBSCRIPT contam end\\_POSTSUBSCRIPT \u221d | caligraphic\\_D start\\_POSTSUBSCRIPT train end\\_POSTSUBSCRIPT | \u22c5 | caligraphic\\_D start\\_POSTSUBSCRIPT test end\\_POSTSUBSCRIPT | start\\_POSTSUPERSCRIPT - 1 end\\_POSTSUPERSCRIPT, rendering traditional benchmarks outdated for models trained on web-scale data. Data privacy and commercial concerns further complicate contamination issues.\n\nSecond, traditional static methods fall short in preventing contamination, prompting the creation of dynamic benchmarks. However, our study identifies a lack of standardized criteria for evaluating these dynamic benchmarks. We hope our proposed criteria will offer valuable insights and guide the development of more effective benchmarks.\n\nCurrent Challenges.\n\nStatic benchmarking methods face challenges due to a lack of transparency (e.g., label protection) and high assumptions about contaminated models (e.g., post-hoc detection). Although dynamic benchmarks address these limitations, they introduce new issues, such as balancing correctness with scalability. We also observed that some dynamic benchmarks neglect complexity control, resulting in inefficiencies in evaluation.\n\nFuture Directions.\n\nDynamic benchmarking offers a new approach for evaluating LLMs, but our study reveals a lack of standardized criteria. Future efforts should focus on standardizing these criteria for dynamic benchmarks.\n", "topic": "Synthesize the key insights from the discussion to propose promising future research directions for dynamic benchmarking and contamination-free evaluation of LLMs.", "question": "Given the identified limitations of static benchmarks and the challenges inherent in current dynamic benchmarking methods for LLMs, what are the most promising future research directions to enable robust, contamination-free, and scalable evaluation frameworks, particularly with respect to standardization, complexity control, and maintaining evaluation reliability?", "answer": "Developing standardized evaluation criteria for dynamic benchmarks, advancing automated contamination detection and prevention methods, designing adaptive complexity control mechanisms, and creating scalable, transparent benchmarking protocols.", "explanation": "This answer synthesizes the text's insights about the need for standardized criteria, improved contamination mitigation strategies, and better scalability and complexity management in dynamic benchmarking, outlining future research priorities based on these challenges.", "question_token_count": 55, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 31, "choices": null}
{"context": "###### Limitations\nThe collection process typically requires significant human effort\u00a0(White et\u00a0al., 2024; Jain et\u00a0al., 2024), and continuous updates demand ongoing human involvement. Despite the popularity of temporal cutoffs, using recent information from competitions to evaluate LLMs can still lead to data contamination, as these problems are likely to be reused in future competitions\u00a0(Wu et\u00a0al., 2024). Verification is often overlooked in these live benchmarks\u00a0(White et\u00a0al., 2024).\n\n\n##### 4.3.2 Rule-Based Generation\nThis method synthesizes new test cases based on predefined rules, featuring an extremely low collision probability\u00a0(Zhu et\u00a0al., 2024a).\n\n\n###### Template-Based\nGSM-Symbolic\u00a0(Mirzadeh et\u00a0al., 2025) creates dynamic math benchmarks by using query templates with placeholder variables, which are randomly filled to generate diverse problem instances.\n\nMathador-LM(Kurtic et\u00a0al., 2024) generates evaluation queries by adhering to the rules of Mathador games(Puma et\u00a0al., 2023) and varying input numbers.\n\nMMLU-CF\u00a0(Zhao et\u00a0al., 2024) follows the template of multiple-choice questions and generates novel samples by shuffling answer choices and randomly replacing incorrect options with \"None of the other choices.\"\n", "topic": "The challenges and implications of human effort and ongoing involvement in collecting and updating evaluation benchmarks for LLMs.", "question": "How do the intertwined challenges of significant human effort, the need for ongoing updates, and the frequent neglect of verification collectively impact the scalability, objectivity, and long-term reliability of benchmarks used to evaluate large language models?", "answer": "They constrain scalability, introduce bias and errors, increase susceptibility to data contamination, and undermine the objectivity and reliability of LLM evaluation benchmarks over time.", "explanation": "The correct answer synthesizes the implications of human dependence (introducing potential bias and scalability limits), the necessity of continuous updates (risking data contamination and outdated benchmarks), and the lack of verification (leading to possible errors and misrepresentation of model performance), all of which undermine the scalability, objectivity, and reliability of evaluation benchmarks for LLMs.", "question_token_count": 45, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 30, "choices": null}
{"context": "##### 4.2.3 Collision\nOne of the main motivations for dynamic benchmarking is to address the challenge of balancing transparent benchmarking with the risk of data contamination. Since the benchmarking algorithm is publicly available, an important concern arises: If these benchmarks are used to train LLM, can they still reliably reflect the true capabilities of LLMs?\n\nTo evaluate the robustness of a dynamic benchmark against this challenge, we introduce the concept of collision in dynamic benchmarking. Collision refers to the extent to which different transformations of the benchmark dataset produce overlapping data, potentially limiting the benchmark\u2019s ability to generate novel and diverse test cases. To quantify this, we propose the following metrics:\n\nCollision Rate measures the percentage of overlap between two independently transformed versions of the benchmark dataset, indicating how much poential contamination among two trials. Repeat Trials quantifies the expected number of transformation trials required to fully regenerate an existing transformed dataset Ti\u2062(\ud835\udc9f)subscript\ud835\udc47\ud835\udc56\ud835\udc9fT\\_{i}(\\mathcal{D})italic\\_T start\\_POSTSUBSCRIPT italic\\_i end\\_POSTSUBSCRIPT ( caligraphic\\_D ), providing insight into the benchmark\u2019s ability to produce novel variations.\n\nThese metrics help assess whether a dynamic benchmark remains effective in evaluating LLM capabilities, even when exposed to potential training data contamination.\n", "topic": "The concept and practical implications of Repeat Trials for quantifying the novelty-generating capacity of dynamic benchmarks.", "question": "How does a high expected value for Repeat Trials inform our understanding of the transformation space in a dynamic benchmark, and what are the practical implications for the benchmark's resilience to training data contamination?", "answer": "It indicates a large, diverse transformation space, enhancing the benchmark's ability to generate novel test cases and resist contamination from prior exposures.", "explanation": "A high expected value for Repeat Trials indicates that the transformation process can generate a large number of distinct variations before repeating a specific transformed dataset. This reflects a large, diverse transformation space, which in turn means the dynamic benchmark is more likely to generate novel, uncontaminated test cases for each evaluation cycle. Practically, this enhances the benchmark's resilience to contamination, ensuring that even if earlier versions are included in model training, subsequent benchmark instances will differ significantly, preserving the validity of performance assessments.", "question_token_count": 38, "answer_correctness_score": 9, "explanation_validity_score": 10, "question_clarity_score": 7, "question_groundedness_score": 10, "avg_answer_token_count": 27, "choices": null}
{"context": "###### Limitations\nThe pre-defined rules may limit sample diversity, and publicly available rule-generated data may increase the risk of in-distribution contamination during training\u00a0(Tu et\u00a0al., 2024).\n\n\n###### Benchmark Rewriting\nIn this category, LLMs are employed to rewrite samples from existing static benchmarks, which may be contaminated.\n\nAuto-Dataset\u00a0(Ying et\u00a0al., 2024) prompts LLMs to generate two types of new samples: one that retains the stylistics and essential knowledge of the original, and another that presents related questions at different cognitive levels\u00a0(Bloom et\u00a0al., 1956).\n\nStructEval\u00a0(Cao et\u00a0al., 2024) expands on examined concepts from the original benchmark by using LLMs and knowledge graphs to develop a series of extended questions.\n\nITD\u00a0(Zhu et\u00a0al., 2024c) utilizes a contamination detector\u00a0(Shi et\u00a0al., 2024) to identify contaminated samples in static benchmarks and then prompts an LLM to rewrite them while preserving their difficulty levels.\n\nVarBench\u00a0(Qian et\u00a0al., 2024) prompts LLMs to identify and replace variables in samples from existing benchmarks, generating new samples.\n", "topic": "The comparative analysis of LLM-based benchmark rewriting methods for enhancing evaluation diversity and reliability.", "question": "How do the distinct approaches employed by Auto-Dataset, StructEval, ITD, and VarBench to benchmark rewriting reflect different trade-offs between enhancing evaluation diversity and mitigating contamination risks, and what inherent limitations do these strategies reveal regarding the reliability of LLM-based evaluation benchmarks?", "answer": "Each method prioritizes diversity and contamination mitigation differently: Auto-Dataset generates stylistically and cognitively varied samples but may propagate contamination if based on public data; StructEval extends concepts via knowledge graphs, promoting diversity but possibly introducing semantic drift; ITD explicitly detects and rewrites contaminated samples to retain difficulty, directly targeting contamination at the potential cost of overfitting to detection heuristics; VarBench creates diversity by variable replacement, which may yield superficial variation without deep conceptual change. Collectively, these approaches reveal that while LLM-based rewriting can increase diversity and address contamination, rule-based or data-driven constraints may limit genuine diversity and risk residual contamination, challenging the reliability of such evaluation benchmarks.", "explanation": "This question requires a nuanced comparison of each method's strategy for increasing sample diversity and addressing contamination, as well as an analysis of the resulting limitations these approaches introduce for the reliability and robustness of evaluation benchmarks.", "question_token_count": 54, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 134, "choices": null}
{"context": "### Ethical Considerations\nOur work is rooted in the goal of enhancing the transparency and fairness of LLM evaluations, which can help mitigate the risks of bias and contamination in AI systems. However, ethical concerns arise when considering the use of both static and dynamic benchmarks. Static benchmarks, if not carefully constructed, can inadvertently perpetuate biases, especially if they rely on outdated or biased data sources. Dynamic benchmarks, while offering a more adaptive approach, raise privacy and security concerns regarding the continual collection and updating of data. Moreover, transparency and the potential for misuse of benchmarking results, such as artificially inflating model performance or selecting biased evaluation criteria, must be carefully managed. It is essential that benchmarking frameworks are designed with fairness, accountability, and privacy in mind, ensuring they do not inadvertently harm or disadvantage certain user groups or research domains. Lastly, we encourage further exploration of ethical guidelines surrounding data usage, model transparency, and the broader societal impact of AI benchmarks.\n", "topic": "The potential for misuse of benchmarking results, such as artificially inflating LLM performance or selecting biased evaluation criteria.", "question": "In the context of LLM benchmarking, what are the principal ethical risks associated with the manipulation of evaluation results\u2014such as through artificially inflating model performance or selecting biased criteria\u2014and how might these practices impact both the credibility of AI research and the potential for harm to marginalized groups?", "answer": "Manipulation of benchmarking results undermines trust in AI research, perpetuates existing biases, and can exacerbate inequalities by disadvantaging marginalized groups, ultimately eroding the fairness and accountability of AI systems.", "explanation": "This question probes deep ethical and practical issues that arise when benchmarking results are manipulated, requiring an expert to identify specific risks (like perpetuation of bias or loss of trust) and to consider the broader social consequences, especially regarding the marginalization of certain groups.", "question_token_count": 55, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 41, "choices": null}
{"context": "#### 2.2 Contamination from LLM Training\nUnlike traditional models with clear separations between training and evaluation data, LLMs are pre-trained on massive, diverse datasets\u2014often scraped from the web (e.g., FineWeb\u00a0Penedo et\u00a0al. (2024))\u2014which increases the risk of evaluation data overlap. In the post-training phase, models are further fine-tuned on large human-annotated\u00a0Mukherjee et\u00a0al. (2023); Kim et\u00a0al. (2023) or synthetic datasets\u00a0Ding et\u00a0al. (2023); Teknium (2023); Wang et\u00a0al. (2023) that may resemble evaluation tasks, further compounding contamination risks. Although retrieval-based detection methods\u00a0Team et\u00a0al. (2024); Achiam et\u00a0al. (2023) exist, the sheer scale and complexity of training corpora make it difficult to entirely exclude evaluation data. Additionally, many LLMs keep their training data proprietary\u00a0Dubey et\u00a0al. (2024); Yang et\u00a0al. (2024), complicating the accurate assessment of their true performance and highlighting the need for fair and reliable benchmarks. This opacity further exacerbates data contamination, as it impedes the community\u2019s ability to verify and mitigate potential overlaps between training and evaluation data.\n", "topic": "The challenges proprietary training data pose to the community\u2019s ability to verify and mitigate data contamination in LLMs.", "question": "How does the use of proprietary training data by LLM developers fundamentally undermine the research community\u2019s ability to verify and mitigate evaluation data contamination, and what are the broader implications for the reliability of benchmarks and model performance claims?", "answer": "It prevents independent verification of data overlaps, hindering contamination detection and mitigation, which undermines benchmark reliability and casts doubt on reported model performance.", "explanation": "The answer addresses how proprietary training data creates a lack of transparency, making it impossible for external researchers to audit for overlaps between training and evaluation data. This impedes the detection and mitigation of contamination, leading to benchmarks and performance claims that may not accurately reflect true model generalization or capability.", "question_token_count": 43, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 9, "question_groundedness_score": 10, "avg_answer_token_count": 29, "choices": null}
{"context": "###### Safety\nSafety benchmarks are essential for evaluating the robustness of LLM\u2019s ability to generate non-toxic and ethically aligned content. Datasets such as RealToxicityPrompts\u00a0(Gehman et\u00a0al., 2020) and ToxiGen\u00a0(Hartvigsen et\u00a0al., 2022) assess resilience against producing harmful outputs.\n\nBy providing a controlled environment to measure these aspects, safety benchmarks play a critical role in guiding the development of models that are not only powerful outputs but also responsible and trustworthy for real-world applications.\n\n\n###### Language\nLanguage benchmarks assess the LLMs\u2019 proficiency in specific languages.\n\nGLUE\u00a0(Wang, 2018) and SuperGLUE\u00a0(Wang et\u00a0al., 2019) cover tasks from sentiment analysis to language inference, while CLUE\u00a0(Xu et\u00a0al., 2020) targets Chinese language.\n\nTypo-fixing\u00a0(Suzgun et\u00a0al., 2022) is also widely used.\n\n\n###### Reading Comprehension\nReading comprehension tasks test a model\u2019s ability to extract and infer information from text. Benchmarks like SQuAD\u00a0(Rajpurkar et\u00a0al., 2018), QuAC\u00a0(Choi et\u00a0al., 2018), and BoolQ\u00a0(Clark et\u00a0al., 2019) challenge models to understand passages and draw logical conclusions.\n", "topic": "The scope and significance of GLUE and SuperGLUE benchmarks in assessing diverse English language tasks in LLMs.", "question": "In what ways do GLUE and SuperGLUE benchmarks provide a comprehensive assessment of large language models\u2019 capabilities across diverse English language tasks, and why is their task diversity significant for evaluating general language proficiency in LLMs?", "answer": "They span multiple English tasks\u2014such as sentiment analysis and language inference\u2014ensuring models are evaluated for broad language understanding, reasoning, and generalization, making their diversity essential for assessing comprehensive language proficiency.", "explanation": "GLUE and SuperGLUE encompass a wide range of English language tasks, from sentiment analysis to language inference, enabling evaluation of models on various aspects of understanding, reasoning, and generalization. This diversity ensures that LLMs are robustly tested for general language proficiency, not just narrow task performance.", "question_token_count": 44, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 40, "choices": null}
{"context": "###### Limitations\nPost-hot detection methods face several limitations. Full access to the training dataset is often restricted due to legal and privacy constraints, making overlap detection challenging. Additionally, assumptions about model behavior, such as higher memorization or lower perplexity for contaminated instances, may not hold across different models and tasks.\n\n\n### 4 Dynamic Benchmarking\nDue to the inherent limitations of static benchmarking schemes, they face challenges in providing a transparent yet faithful evaluation of LLMs. To address this, dynamic benchmarking has been proposed.\n\n\n#### 4.1 Problem Formulation\nA dynamic benchmark is defined as\n\n\u212cdynamic=(\ud835\udc9f,T\u2062(\u22c5)),\ud835\udc9f=(\ud835\udcb3,\ud835\udcb4,\ud835\udcae\u2062(\u22c5))formulae-sequencesubscript\u212cdynamic\ud835\udc9f\ud835\udc47\u22c5\ud835\udc9f\ud835\udcb3\ud835\udcb4\ud835\udcae\u22c5\\mathcal{B}\\_{\\text{dynamic}}=(\\mathcal{D},T(\\cdot)),\\quad\\mathcal{D}=(\\mathcal%\n\n{X},\\mathcal{Y},\\mathcal{S}(\\cdot))caligraphic\\_B start\\_POSTSUBSCRIPT dynamic end\\_POSTSUBSCRIPT = ( caligraphic\\_D , italic\\_T ( \u22c5 ) ) , caligraphic\\_D = ( caligraphic\\_X , caligraphic\\_Y , caligraphic\\_S ( \u22c5 ) )\n\nwhere \ud835\udc9f\ud835\udc9f\\mathcal{D}caligraphic\\_D represents the static benchmark dataset.\n\nThe transformation function T\u2062(\u22c5)\ud835\udc47\u22c5T(\\cdot)italic\\_T ( \u22c5 ) modifies the data set during the benchmarking to avoid possible data contamination.\n\nThe dynamic dataset for the evaluation of an LLM can then be expressed as\n\n\ud835\udc9ft=Tt\u2062(\ud835\udc9f),\u2200t\u2208{1,\u2026,N}formulae-sequencesubscript\ud835\udc9f\ud835\udc61subscript\ud835\udc47\ud835\udc61\ud835\udc9ffor-all\ud835\udc611\u2026\ud835\udc41\\mathcal{D}\\_{t}=T\\_{t}(\\mathcal{D}),\\quad\\forall t\\in\\{1,\\dots,N\\}caligraphic\\_D start\\_POSTSUBSCRIPT italic\\_t end\\_POSTSUBSCRIPT = italic\\_T start\\_POSTSUBSCRIPT italic\\_t end\\_POSTSUBSCRIPT ( caligraphic\\_D ) , \u2200 italic\\_t \u2208 { 1 , \u2026 , italic\\_N }\n\nwhere \ud835\udc9ftsubscript\ud835\udc9f\ud835\udc61\\mathcal{D}\\_{t}caligraphic\\_D start\\_POSTSUBSCRIPT italic\\_t end\\_POSTSUBSCRIPT represents the evaluation data set at the timestamp t\ud835\udc61titalic\\_t, and N\ud835\udc41Nitalic\\_N is the total timestamp number, which could be finite or infinite. If the seed dataset \ud835\udc9f\ud835\udc9f\\mathcal{D}caligraphic\\_D is empty, the dynamic benchmarking dataset will be created from scratch.\n\nTable 3: Existing dynamic benchmarks and their quality on our summarized criteria. \u25cf\u25cf\\CIRCLE\u25cf represents support, \u25d0\u25d0\\LEFTcircle\u25d0 represents partial support, and \u25cb\u25cb\\Circle\u25cb represents no support\n\n<!-- \ud83d\uddbc\ufe0f\u274c Image not available. Please use `PdfPipelineOptions(generate_picture_images=True)` -->\n", "topic": "Legal and privacy constraints limiting access to training datasets and their impact on post-hot detection methods for data contamination.", "question": "In the presence of stringent legal and privacy constraints that limit access to training datasets, why do post-hot detection methods for data contamination in language models become fundamentally unreliable, and what additional risks arise from relying solely on behavioral proxies such as model memorization or perplexity to detect contamination?", "answer": "Restricted data access prevents direct overlap detection, and behavioral proxies are unreliable across models and tasks, making contamination detection both fundamentally unreliable and prone to false conclusions.", "explanation": "Post-hot detection methods typically require direct comparison between evaluation and training data to identify overlap and contamination. Legal and privacy constraints often prohibit such access, making direct overlap detection infeasible. Relying solely on behavioral proxies (e.g., increased memorization or reduced perplexity for contaminated instances) introduces additional risks because these behavioral indicators are not consistent across models and tasks, leading to unreliable or misleading contamination assessments.", "question_token_count": 56, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 31, "choices": null}
{"context": "###### Examples of each contamination\nWe provide contamination examples in Table\u00a01. In the case of syntactic contamination, the test data is derived from the training data by rephrasing it with the addition of a prefix string. There is ongoing debate about whether such syntactic transformations constitute true data contamination, as it is challenging to distinguish between an LLM\u2019s ability to recall memorized information and its reasoning capability during inference. In this work, we consider such syntactic transformations as contamination, given that some NLP applications rely primarily on syntactic information for decision-making.\n\n\n###### Significance of contamination\nUnderstanding and mitigating potential data contamination in benchmarking LLMs is significant, especially given the rapid pace of LLM development. Without a robust approach to identifying and preventing contamination, evaluations may overestimate a model\u2019s true capabilities by inadvertently testing it on data it has already seen. This undermines the validity of benchmarks, making it difficult to assess generalization, robustness, and real-world applicability. Contaminated benchmarks can lead to misleading conclusions about progress in LLM research, influencing model comparisons, deployment decisions, and policy-making. Addressing this issue is crucial for ensuring that benchmarks provide an accurate and reliable measure of an LLM\u2019s true ability to handle novel and unseen data.\n", "topic": "The rationale for treating syntactic transformations as data contamination in NLP evaluation, with attention to applications that rely on syntactic information.", "question": "Why is it particularly important to consider syntactic transformations as data contamination in NLP evaluations for applications that primarily depend on syntactic information, and what risk does ignoring this pose to benchmark validity?", "answer": "Because syntactic applications may rely on surface-level patterns, treating syntactic transformations as contamination prevents models from exploiting memorized structures, ensuring benchmarks accurately assess generalization and avoiding overestimated performance.", "explanation": "The answer highlights that when NLP applications make decisions based primarily on syntax, even minor syntactic rephrasings can lead models to exploit memorized patterns rather than demonstrating genuine reasoning or generalization. Ignoring such contamination risks inflating model performance by evaluating it on data that is not truly novel, thus undermining the reliability and validity of benchmarks.", "question_token_count": 36, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 35, "choices": null}
{"context": "##### 4.3.1 Temporal Cutoff\nSince LLMs typically have a knowledge cutoff date, using data collected after this cutoff to construct dataset can help evaluate the model while mitigating data contamination.\n\nThis approach has been widely adopted to construct reliable benchmarks that prevent contamination.\n\nLiveBench\u00a0(White et\u00a0al., 2024) collects questions based on the latest information source, e.g., math competitions from the past 12 months, with new questions added and updated every few months.\n\nAntiLeak-Bench\u00a0(Wu et\u00a0al., 2024) generates queries about newly emerged knowledge that was unknown before the model\u2019s knowledge cutoff date to eliminate potential data contamination.\n\nAcademicEval\u00a0(Zhang et\u00a0al., 2024a) designs academic writing tasks on latest arXiv papers.\n\nLiveCodeBench\u00a0(Jain et\u00a0al., 2024) continuously collects new human-written coding problems from online coding competition platforms like LeetCode.\n\nLiveAoPSBench\u00a0(Mahdavi et\u00a0al., 2025) collects live math problems from the Art of Problem Solving forum.\n\nForecastbench\u00a0(Karger et\u00a0al., 2024) updates new forecasting questions on a daily basis from different data sources, e.g., prediction markets.\n", "topic": "The mechanisms by which data collected after a model's knowledge cutoff date help ensure the reliability and validity of LLM evaluation benchmarks.", "question": "Explain how the use of evaluation datasets collected after a language model's knowledge cutoff date directly addresses concerns of data contamination, and analyze the implications of this approach for the reliability and validity of model benchmarks.", "answer": "Collecting evaluation data after the model's knowledge cutoff prevents exposure during training, eliminating contamination and ensuring that benchmarks reliably and validly assess the model's true generalization to new, unseen information.", "explanation": "The answer is correct because it details how post-cutoff data ensures that the model could not have memorized or been exposed to the evaluation material during training, eliminating the risk of contamination. This strengthens the reliability of benchmarks by ensuring consistent, uncontaminated assessment conditions, and enhances validity by accurately measuring model capabilities on genuinely novel content.", "question_token_count": 39, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 36, "choices": null}
{"context": "#### 2.3 LLM Benchmarking\nAs LLMs evolve into general-purpose task solvers, it is crucial to develop benchmarks that provide a holistic view of their performance.\n\nTo this end, significant human effort has been dedicated to building comprehensive benchmarks that assess various aspects of model performance. For example, instruction-following tasks evaluate a model\u2019s ability to interpret and execute commands\u00a0(Zhou et\u00a0al., 2023; Qin et\u00a0al., 2024; Huang et\u00a0al., 2024), while coding tasks assess its capability to generate and understand programming code\u00a0(Chen et\u00a0al., 2021; Austin et\u00a0al., 2021; Jimenez et\u00a0al., 2024; Codeforces, 2025; Aider, 2025).\n\nDespite their usefulness, static benchmarks face challenges as LLMs evolve rapidly and continue training on all available data\u00a0(Villalobos et\u00a0al., 2022). Over time, unchanging benchmarks may become too easy for stronger LLMs or introduce data contamination issues.\n\nRecognizing this critical problem, contamination detectors have been developed to quantify contamination risks, and dynamic benchmarks have been proposed to mitigate these issues.\n\nTable 2: Summary of benchmarking applications.\n\n<!-- \ud83d\uddbc\ufe0f\u274c Image not available. Please use `PdfPipelineOptions(generate_picture_images=True)` -->\n", "topic": "The specific challenges posed by static benchmarks as LLMs improve, including benchmark obsolescence and data contamination risks.", "question": "In the context of evaluating increasingly capable large language models, why do static benchmarks tend to become obsolete and susceptible to data contamination, and what are the fundamental consequences of these issues for the validity of LLM performance assessments?", "answer": "Static benchmarks become obsolete as tasks become too easy for advanced models and are susceptible to data contamination when training data overlaps with benchmarks, leading to inflated performance and unreliable assessments.", "explanation": "This answer is correct because static benchmarks become obsolete as LLMs surpass the difficulty of fixed tasks, making it hard to distinguish model performance, while data contamination arises when models are trained on benchmark content, resulting in inflated scores; together, these issues undermine the reliability and discriminative power of benchmark-based evaluations.", "question_token_count": 43, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 9, "question_groundedness_score": 10, "avg_answer_token_count": 34, "choices": null}
{"context": "### Ethical Considerations\nOur work is rooted in the goal of enhancing the transparency and fairness of LLM evaluations, which can help mitigate the risks of bias and contamination in AI systems. However, ethical concerns arise when considering the use of both static and dynamic benchmarks. Static benchmarks, if not carefully constructed, can inadvertently perpetuate biases, especially if they rely on outdated or biased data sources. Dynamic benchmarks, while offering a more adaptive approach, raise privacy and security concerns regarding the continual collection and updating of data. Moreover, transparency and the potential for misuse of benchmarking results, such as artificially inflating model performance or selecting biased evaluation criteria, must be carefully managed. It is essential that benchmarking frameworks are designed with fairness, accountability, and privacy in mind, ensuring they do not inadvertently harm or disadvantage certain user groups or research domains. Lastly, we encourage further exploration of ethical guidelines surrounding data usage, model transparency, and the broader societal impact of AI benchmarks.\n", "topic": "The role and development of ethical guidelines governing data usage and model transparency in LLM evaluation.", "question": "What are the key ethical tensions involved in designing guidelines for data usage and model transparency in LLM evaluation, and how might these guidelines reconcile the competing demands of fairness, privacy, and accountability in benchmarking frameworks?", "answer": "Ethical guidelines must balance transparency for accountability and fairness with privacy protections, reconciling these demands by establishing clear standards for data sourcing, evaluation criteria, and result reporting that minimize bias and risk while safeguarding individual and group rights.", "explanation": "This question is correct because it probes the expert's ability to synthesize the ethical challenges described\u2014specifically, the need to balance transparency (for accountability) with privacy (to prevent harm), and to ensure fairness throughout the benchmarking process. It requires understanding both the technical and societal implications and the formulation of strategies that address multiple, potentially conflicting, ethical imperatives.", "question_token_count": 41, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 45, "choices": null}
{"context": "### Abstract\nData contamination has received increasing attention in the era of large language models (LLMs) due to their reliance on vast Internet-derived training corpora. To mitigate the risk of potential data contamination, LLM benchmarking has undergone a transformation from static to dynamic benchmarking.\n\nIn this work, we conduct an in-depth analysis of existing static to dynamic benchmarking methods aimed at reducing data contamination risks. We first examine methods that enhance static benchmarks and identify their inherent limitations. We then highlight a critical gap\u2014the lack of standardized criteria for evaluating dynamic benchmarks. Based on this observation, we propose a series of optimal design principles for dynamic benchmarking and analyze the limitations of existing dynamic benchmarks.\n\nThis survey provides a concise yet comprehensive overview of recent advancements in data contamination research, offering valuable insights and a clear guide for future research efforts.\n\nWe maintain a GitHub repository to continuously collect both static and dynamic benchmarking methods for LLMs. The repository can be found at this link\u00a0111GitHub Link: Static-to-Dynamic LLM Benchmarking.\n", "topic": "The inherent limitations of static benchmarking methods in the context of LLM evaluation.", "question": "What is the most fundamental limitation of static benchmarking methods when evaluating large language models trained on vast, internet-derived corpora, particularly in the context of data contamination risks?", "answer": "Susceptibility to training data overlap leading to data contamination.", "explanation": "Static benchmarks are inherently susceptible to data contamination because their fixed evaluation sets can overlap with the ever-expanding training data of LLMs, undermining the validity and reliability of performance assessments.", "question_token_count": 34, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 13, "choices": null}
{"context": "###### Interactive Evaluation\nIn this category, inspired by the human interview process, LLMs are evaluated through multi-round interactions with an LLM \u00a0(Li et\u00a0al., 2023b).\n\nLLM-as-an-Interviewer\u00a0(Kim et\u00a0al., 2024) employs an interviewer LLM that first paraphrases queries from existing static benchmarks and then conducts a multi-turn evaluation by posing follow-up questions or providing feedback on the examined LLM\u2019s responses.\n\nTreeEval\u00a0(Li et\u00a0al., 2024b) begins by generating an initial question on a given topic using an LLM. Based on the previous topic and the examined LLM\u2019s response, it then generates follow-up subtopics and corresponding questions to further assess the model.\n\nKIEval\u00a0(Yu et\u00a0al., 2024) generates follow-up questions based on the evaluated model\u2019s response to an initial question from a static benchmark.\n\n\n###### Multi-Agent Evaluation\nInspired by the recent success of multi-agents systems\u00a0(Guo et\u00a0al., 2024), multi-agent collaborations are used to construct dynamic benchmarks.\n\nBenchmark Self-Evolving\u00a0(Wang et\u00a0al., 2024a) employs a multi-agent framework to dynamically extend existing static benchmarks, showcasing the potential of agent-based methods.\n\nGiven a task description, BENCHAGENTS\u00a0(Butt et\u00a0al., 2024) leverages a multi-agent framework for automated benchmark creation.\n\nIt splits the process into planning, generation, verification, and evaluation\u2014each handled by a specialized LLM agent.\n\nThis coordinated approach, with human-in-the-loop feedback, yields scalable, diverse, and high-quality benchmarks.\n", "topic": "The comparative analysis of static versus dynamic benchmarking paradigms in terms of scalability, diversity, and evaluation quality.", "question": "In the context of LLM evaluation, how do dynamic benchmarking paradigms\u2014such as interactive evaluation and multi-agent frameworks\u2014address limitations of static benchmarks in terms of scalability, diversity, and evaluation quality, and what are the inherent challenges these dynamic approaches might introduce?", "answer": "Dynamic benchmarking paradigms enable scalable and diverse evaluation by automating the creation and extension of benchmarks through agent collaboration and interactive questioning, improving evaluation quality via adaptive, context-sensitive assessment, but introduce challenges such as coordination overhead, consistency of evaluation criteria, and potential for compounding model biases.", "explanation": "This question requires a nuanced comparative analysis, synthesizing the mechanisms by which dynamic paradigms (multi-turn interaction, multi-agent collaboration, human-in-the-loop feedback) enhance scalability (through automation and agent coordination), diversity (by generating novel tasks and subtopics), and evaluation quality (via deeper, more adaptive assessment). It also prompts consideration of potential new challenges, such as coordination complexity or evaluation consistency.", "question_token_count": 51, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 55, "choices": null}
{"context": "#### 3.3 Methods for Mitigation\nDue to the nature of LLM training data collection and the public availability of these static benchmark datasets, there is a risk that LLMs may inadvertently encounter and use them, leading to data contamination. To address this issue, several methods have been proposed to enhance static benchmarking and mitigate the impact of data contamination.\n\n\n##### 3.3.1 Canary String\nCanary strings are deliberately crafted, unique tokens embedded within a dataset to serve as markers for data contamination. When a model\u2019s output unexpectedly includes these tokens, it strongly indicates that the model has memorized portions of its training data rather than learning to generalize. For instance, the BIG-Bench dataset incorporates these strings so that model developers can identify and filter out such instances Jacovi et\u00a0al. (2023).\n\n\n###### Limitations\nThe effectiveness of canary strings depends on model trainers being aware of and responsive to these markers.\n\nIf a developer aims to leak benchmarking data to boost scores, this method will not work.\n", "topic": "Examine how the deliberate insertion of unique tokens (canary strings) into datasets interfaces with both technical and sociotechnical factors in the context of LLM evaluation.", "question": "In the context of LLM evaluation, what fundamental limitation arises when relying on canary strings as a data contamination mitigation strategy, and how does this limitation reflect the interplay between technical safeguards and human factors?", "answer": "Canary strings are ineffective when developers act dishonestly or ignore contamination signals, revealing that technical measures alone cannot address risks rooted in human behavior and incentives.", "explanation": "The key limitation is that canary strings only function as effective markers if model trainers are honest and responsive; if developers choose to ignore or deliberately exploit these markers, technical detection is subverted. This highlights that even robust technical solutions are ultimately constrained by sociotechnical realities\u2014trust, incentives, and adversarial intent\u2014underscoring the need for holistic approaches that account for both algorithmic and human elements.", "question_token_count": 40, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 31, "choices": null}
{"context": "###### Limitations\nLabel protection limits transparency and independent verification, and it forces researchers to rely on centralized evaluation systems for performance metrics, which can impede detailed error analysis and reproducibility.\n\n\n##### 3.3.4 Post-hoc Detection\nPost-hoc detection mitigates data contamination by identifying overlaps between Dt\u2062r\u2062a\u2062i\u2062nsubscript\ud835\udc37\ud835\udc61\ud835\udc5f\ud835\udc4e\ud835\udc56\ud835\udc5bD\\_{train}italic\\_D start\\_POSTSUBSCRIPT italic\\_t italic\\_r italic\\_a italic\\_i italic\\_n end\\_POSTSUBSCRIPT\n\nand Dt\u2062e\u2062s\u2062tsubscript\ud835\udc37\ud835\udc61\ud835\udc52\ud835\udc60\ud835\udc61D\\_{test}italic\\_D start\\_POSTSUBSCRIPT italic\\_t italic\\_e italic\\_s italic\\_t end\\_POSTSUBSCRIPT. This is typically done through n-gram matching at various levels, such as tokens\u00a0Touvron et\u00a0al. (2023) or words\u00a0Radford et\u00a0al. (2019); Brown et\u00a0al. (2020); Chowdhery et\u00a0al. (2023). However, exact matching often leads to false negatives, prompting the use of more robust techniques like embedding-based similarity\u00a0Riddell et\u00a0al. (2024); Lee et\u00a0al. (2023); Gunasekar et\u00a0al. (2023) and improved mapping metrics\u00a0Li et\u00a0al. (2024d); Xu et\u00a0al. (2024).\n\nBeyond direct overlap detection, post-hoc methods also analyze model behavior under different conditions, such as memorization through masked inputs\u00a0Ranaldi et\u00a0al. (2024); Chang et\u00a0al. (2023), partial completions\u00a0Anil et\u00a0al. (2023); Golchin and Surdeanu (2024), or preference for original over paraphrased test cases\u00a0Duarte et\u00a0al. (2024); Golchin and Surdeanu (2023); Zong et\u00a0al. (2024). For instance, Dekoninck et\u00a0al.\u00a0(2024) propose CONSTAT, which detects contamination by comparing model performance across benchmarks.\n", "topic": "The impact of label protection on transparency, independent verification, detailed error analysis, and reproducibility in model evaluation.", "question": "In what fundamental ways does label protection undermine the transparency, independent verification, detailed error analysis, and reproducibility of model evaluation, and what broader implications does this have for the scientific rigor of machine learning research?", "answer": "It forces reliance on centralized evaluation, preventing independent verification, detailed error analysis, and reproducibility, thereby reducing transparency and scientific rigor.", "explanation": "Label protection restricts access to ground-truth labels, which forces reliance on centralized evaluation systems and prevents external researchers from independently verifying results, conducting detailed error analyses, or reproducing findings\u2014ultimately weakening the transparency and scientific rigor of research.", "question_token_count": 41, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 6, "question_groundedness_score": 10, "avg_answer_token_count": 26, "choices": null}
{"context": "#### 2.1 Data Contamination\nData contamination occurs when LLM\u2019s training data \ud835\udc9ftrainsubscript\ud835\udc9ftrain\\mathcal{D}\\_{\\text{train}}caligraphic\\_D start\\_POSTSUBSCRIPT train end\\_POSTSUBSCRIPT contains information that improperly overlaps with evaluation benchmark data \ud835\udc9ftestsubscript\ud835\udc9ftest\\mathcal{D}\\_{\\text{test}}caligraphic\\_D start\\_POSTSUBSCRIPT test end\\_POSTSUBSCRIPT, compromising the validity of performance measurements. We summarize existing work and provide a formal definition of data contamination.\n\nExact contamination occurs when there is any exact duplicate in the benchmark dataset\n\nIn other word, there exist a data point d\ud835\udc51ditalic\\_d that both in \ud835\udc9ftrainsubscript\ud835\udc9ftrain\\mathcal{D}\\_{\\text{train}}caligraphic\\_D start\\_POSTSUBSCRIPT train end\\_POSTSUBSCRIPT and \ud835\udc9ftestsubscript\ud835\udc9ftest\\mathcal{D}\\_{\\text{test}}caligraphic\\_D start\\_POSTSUBSCRIPT test end\\_POSTSUBSCRIPT.\n\nCommon cases include verbatim test examples appearing in training corpora, code snippets from benchmark implementations, or documentation leaks.\n\nSyntactic contamination occurs when a test data point could be found in the training dataset after a syntactic transformation, such that\n\nwhere \u2131syntacticsubscript\u2131syntactic\\mathcal{F}\\_{\\text{syntactic}}caligraphic\\_F start\\_POSTSUBSCRIPT syntactic end\\_POSTSUBSCRIPT denotes syntactic transformations like punctuation normalization, whitespace modification, synonym substitution, morphological variations, or syntactic paraphrasing while preserving lexical meaning.\n", "topic": "Strategies and best practices for preventing and mitigating data contamination in LLM research and evaluation pipelines.", "question": "What advanced strategies and best practices can be implemented in LLM research and evaluation pipelines to prevent and mitigate both exact and syntactic data contamination, ensuring robust and valid benchmark performance assessments?", "answer": "Rigorous deduplication, cross-dataset overlap analysis, syntactic similarity detection (e.g., paraphrase mining, token normalization), careful curation of training/evaluation splits, transparency in dataset provenance, and automated monitoring tools for contamination detection.", "explanation": "The answer details a set of sophisticated measures to proactively address both types of contamination identified in the context\u2014exact duplicates and syntactic variants\u2014thereby ensuring that reported model performance genuinely reflects generalization rather than memorization or data leakage.", "question_token_count": 35, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 8, "avg_answer_token_count": 48, "choices": null}
{"context": "#### 4.2 Evaluation Criteria\nWhile many dynamic benchmarking methods have been proposed to evaluate LLMs, the evaluation criteria for assessing these benchmarks themselves remain non-standardized. To this end, we propose the following evaluation criteria to assess the quality of a dynamic benchmarking algorithm.\n\n\n##### 4.2.1 Correctness\nThe first criterion for evaluating the quality of dynamic benchmarking is Correctness. If the correctness of the generated dataset cannot be guaranteed, the benchmark may provide a false sense of reliability when applied to benchmarking LLMs, leading to misleading evaluations.\n\nWe quantify the correctness of dynamic benchmarks as:\n\nwhere \ud835\udcb3isubscript\ud835\udcb3\ud835\udc56\\mathcal{X}\\_{i}caligraphic\\_X start\\_POSTSUBSCRIPT italic\\_i end\\_POSTSUBSCRIPT and \ud835\udcb4isubscript\ud835\udcb4\ud835\udc56\\mathcal{Y}\\_{i}caligraphic\\_Y start\\_POSTSUBSCRIPT italic\\_i end\\_POSTSUBSCRIPT represent the input and output of the it\u2062hsuperscript\ud835\udc56\ud835\udc61\u210ei^{th}italic\\_i start\\_POSTSUPERSCRIPT italic\\_t italic\\_h end\\_POSTSUPERSCRIPT transformation, respectively. The function \ud835\udca2\u2062(\u22c5)\ud835\udca2\u22c5\\mathcal{G}(\\cdot)caligraphic\\_G ( \u22c5 ) is an oracle that returns the ground truth of its input, ensuring an objective reference for correctness evaluation. For example, the function \ud835\udca2\u2062(\u22c5)\ud835\udca2\u22c5\\mathcal{G}(\\cdot)caligraphic\\_G ( \u22c5 ) could be a domain-specific an annotator.\n\nThis equation can be interpreted as the expected alignment between the transformed dataset\u2019s outputs and their corresponding ground truth values, measured using the scoring function \ud835\udcae\u2062(\u22c5)\ud835\udcae\u22c5\\mathcal{S}(\\cdot)caligraphic\\_S ( \u22c5 ). A higher correctness score indicates that the dynamic benchmark maintains correctness to the ground truth.\n", "topic": "The potential consequences and risks associated with using benchmarks lacking guaranteed correctness in LLM evaluation.", "question": "What are the most significant technical and systemic risks that arise when dynamic benchmarks used for evaluating large language models lack guaranteed correctness, and how might these risks undermine the reliability of LLM evaluation and subsequent deployment decisions?", "answer": "The most significant risks include misleading evaluation results that over- or under-estimate LLM performance, propagation of errors into research and development, erosion of trust in benchmarking outcomes, and potentially flawed deployment decisions based on inaccurate assessments.", "explanation": "The answer must synthesize both immediate technical consequences (such as misleading evaluation outcomes) and wider systemic effects (such as the propagation of errors in research and deployment), drawing on the principle that correctness is foundational to trustworthy benchmarking as outlined in the context.", "question_token_count": 41, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 7, "avg_answer_token_count": 44, "choices": null}
{"context": "###### Limitations\nLabel protection limits transparency and independent verification, and it forces researchers to rely on centralized evaluation systems for performance metrics, which can impede detailed error analysis and reproducibility.\n\n\n##### 3.3.4 Post-hoc Detection\nPost-hoc detection mitigates data contamination by identifying overlaps between Dt\u2062r\u2062a\u2062i\u2062nsubscript\ud835\udc37\ud835\udc61\ud835\udc5f\ud835\udc4e\ud835\udc56\ud835\udc5bD\\_{train}italic\\_D start\\_POSTSUBSCRIPT italic\\_t italic\\_r italic\\_a italic\\_i italic\\_n end\\_POSTSUBSCRIPT\n\nand Dt\u2062e\u2062s\u2062tsubscript\ud835\udc37\ud835\udc61\ud835\udc52\ud835\udc60\ud835\udc61D\\_{test}italic\\_D start\\_POSTSUBSCRIPT italic\\_t italic\\_e italic\\_s italic\\_t end\\_POSTSUBSCRIPT. This is typically done through n-gram matching at various levels, such as tokens\u00a0Touvron et\u00a0al. (2023) or words\u00a0Radford et\u00a0al. (2019); Brown et\u00a0al. (2020); Chowdhery et\u00a0al. (2023). However, exact matching often leads to false negatives, prompting the use of more robust techniques like embedding-based similarity\u00a0Riddell et\u00a0al. (2024); Lee et\u00a0al. (2023); Gunasekar et\u00a0al. (2023) and improved mapping metrics\u00a0Li et\u00a0al. (2024d); Xu et\u00a0al. (2024).\n\nBeyond direct overlap detection, post-hoc methods also analyze model behavior under different conditions, such as memorization through masked inputs\u00a0Ranaldi et\u00a0al. (2024); Chang et\u00a0al. (2023), partial completions\u00a0Anil et\u00a0al. (2023); Golchin and Surdeanu (2024), or preference for original over paraphrased test cases\u00a0Duarte et\u00a0al. (2024); Golchin and Surdeanu (2023); Zong et\u00a0al. (2024). For instance, Dekoninck et\u00a0al.\u00a0(2024) propose CONSTAT, which detects contamination by comparing model performance across benchmarks.\n", "topic": "The shortcomings of exact matching approaches for overlap detection and the resulting risk of false negatives.", "question": "In the context of detecting overlap between training and test sets, what fundamental limitation of exact n-gram matching approaches leads to a risk of false negatives, and what are the broader implications of these undetected overlaps for the evaluation and reproducibility of machine learning models?", "answer": "Inability to detect semantically similar but non-identical content, leading to undetected contamination and unreliable evaluation.", "explanation": "Exact matching fails to identify paraphrased, reordered, or semantically similar content that does not share exact token or word sequences, resulting in contaminated test data being overlooked and causing inflated performance metrics and hindered reproducibility.", "question_token_count": 51, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 8, "question_groundedness_score": 9, "avg_answer_token_count": 23, "choices": null}
{"context": "###### Limitations\nThe quality of LLM-generated samples is often uncertain. For example, human annotation of LatestEval\u00a0(Li et\u00a0al., 2023d) shows that about 10% of samples suffer from faithfulness and answerability issues, compromising evaluation reliability. Moreover, in interactive evaluation, reliability largely depends on the interviewer LLM, which generates questions and assigns scores.\n\n\n##### 4.3.4 Hybrid Generation\nLatestEval\u00a0(Li et\u00a0al., 2023d) combines temporal cutoff and LLM-based generation to automatically generate reading comprehension datasets using LLMs on real-time content from sources such as BBC.\n\nDARG\u00a0(Zhang et\u00a0al., 2024b) integrates LLM-based and graph-based generation. It first extracts reasoning graphs from existing benchmarks and then perturbs them into new samples using predefined rules.\n\nC2LEVA\u00a0(Li et\u00a0al., 2024c) incorporates all three contamination-free construction methods to build a contamination-free bilingual evaluation.\n\n\n### 5 Discussions\nKey Insights.\n\nOur analysis highlights two key insights regarding data contamination in LLM benchmarking. First, static benchmarks become less effective as training corpora grow. The probability of contamination increases with Prcontam\u221d|\ud835\udc9ftrain|\u22c5|\ud835\udc9ftest|\u22121proportional-tosubscriptPrcontam\u22c5subscript\ud835\udc9ftrainsuperscriptsubscript\ud835\udc9ftest1\\text{Pr}\\_{\\text{contam}}\\propto|\\mathcal{D}\\_{\\text{train}}|\\cdot|\\mathcal{D}\\_%\n\n{\\text{test}}|^{-1}Pr start\\_POSTSUBSCRIPT contam end\\_POSTSUBSCRIPT \u221d | caligraphic\\_D start\\_POSTSUBSCRIPT train end\\_POSTSUBSCRIPT | \u22c5 | caligraphic\\_D start\\_POSTSUBSCRIPT test end\\_POSTSUBSCRIPT | start\\_POSTSUPERSCRIPT - 1 end\\_POSTSUPERSCRIPT, rendering traditional benchmarks outdated for models trained on web-scale data. Data privacy and commercial concerns further complicate contamination issues.\n\nSecond, traditional static methods fall short in preventing contamination, prompting the creation of dynamic benchmarks. However, our study identifies a lack of standardized criteria for evaluating these dynamic benchmarks. We hope our proposed criteria will offer valuable insights and guide the development of more effective benchmarks.\n\nCurrent Challenges.\n\nStatic benchmarking methods face challenges due to a lack of transparency (e.g., label protection) and high assumptions about contaminated models (e.g., post-hoc detection). Although dynamic benchmarks address these limitations, they introduce new issues, such as balancing correctness with scalability. We also observed that some dynamic benchmarks neglect complexity control, resulting in inefficiencies in evaluation.\n\nFuture Directions.\n\nDynamic benchmarking offers a new approach for evaluating LLMs, but our study reveals a lack of standardized criteria. Future efforts should focus on standardizing these criteria for dynamic benchmarks.\n", "topic": "Assess the impact of increasing training corpus size on the effectiveness of static benchmarks and discuss the resulting obsolescence for web-scale LLMs.", "question": "How does the growth of training corpus size in large language models affect the probability of test set contamination in static benchmarks, and why does this lead to the obsolescence of traditional static benchmarks for models trained on web-scale data?", "answer": "Larger training corpora increase contamination risk, making static benchmarks unreliable and obsolete for web-scale LLMs due to unavoidable test-train overlap.", "explanation": "The probability of contamination increases proportionally with the size of the training data and inversely with the size of the test data (Pr_contam \u221d |D_train| \u22c5 |D_test|^{-1}), making it more likely that static test benchmarks overlap with training data as corpora grow. This undermines the reliability and validity of static benchmarks, rendering them obsolete for web-scale LLMs because they can no longer guarantee uncontaminated, meaningful evaluation.", "question_token_count": 46, "answer_correctness_score": 10, "explanation_validity_score": 10, "question_clarity_score": 8, "question_groundedness_score": 10, "avg_answer_token_count": 29, "choices": null}
{"context": "###### Interactive Evaluation\nIn this category, inspired by the human interview process, LLMs are evaluated through multi-round interactions with an LLM \u00a0(Li et\u00a0al., 2023b).\n\nLLM-as-an-Interviewer\u00a0(Kim et\u00a0al., 2024) employs an interviewer LLM that first paraphrases queries from existing static benchmarks and then conducts a multi-turn evaluation by posing follow-up questions or providing feedback on the examined LLM\u2019s responses.\n\nTreeEval\u00a0(Li et\u00a0al., 2024b) begins by generating an initial question on a given topic using an LLM. Based on the previous topic and the examined LLM\u2019s response, it then generates follow-up subtopics and corresponding questions to further assess the model.\n\nKIEval\u00a0(Yu et\u00a0al., 2024) generates follow-up questions based on the evaluated model\u2019s response to an initial question from a static benchmark.\n\n\n###### Multi-Agent Evaluation\nInspired by the recent success of multi-agents systems\u00a0(Guo et\u00a0al., 2024), multi-agent collaborations are used to construct dynamic benchmarks.\n\nBenchmark Self-Evolving\u00a0(Wang et\u00a0al., 2024a) employs a multi-agent framework to dynamically extend existing static benchmarks, showcasing the potential of agent-based methods.\n\nGiven a task description, BENCHAGENTS\u00a0(Butt et\u00a0al., 2024) leverages a multi-agent framework for automated benchmark creation.\n\nIt splits the process into planning, generation, verification, and evaluation\u2014each handled by a specialized LLM agent.\n\nThis coordinated approach, with human-in-the-loop feedback, yields scalable, diverse, and high-quality benchmarks.\n", "topic": "The role and significance of human-in-the-loop feedback in multi-agent benchmark creation systems.", "question": "In multi-agent frameworks for automated benchmark creation, such as BENCHAGENTS, what is the primary function of human-in-the-loop feedback, and why is it essential for ensuring both benchmark quality and diversity despite the scalability offered by agent automation?", "answer": "Human-in-the-loop feedback supplies essential oversight and expert judgment, addressing limitations of automated agents to ensure benchmarks remain high-quality and diverse while scaling automation.", "explanation": "The answer highlights how human-in-the-loop feedback provides critical oversight and nuanced judgment that automated agents may lack, enabling the correction of errors, refinement of task specifications, and assurance of benchmark diversity and high quality, which might otherwise be compromised in a fully automated scalable system.", "question_token_count": 49, "answer_correctness_score": 9, "explanation_validity_score": 9, "question_clarity_score": 6, "question_groundedness_score": 10, "avg_answer_token_count": 30, "choices": null}
